#include <doctest.h>

#include <fstream>

#include "Huffman.hpp"

using namespace Huffman;

// optionals are not tested with .has_value() before calling .value()
// because a bad_optional will be thrown anyway,
// replacing REQUIRE(*.has_value())

TEST_CASE("HuffmanNode.HuffmanNode()") {
    SUBCASE("empty") {
        HuffmanNode n;
        CHECK(!n.leftSon.has_value());
        CHECK(!n.rightSon.has_value());
        CHECK_EQ(n.count, 0);
        CHECK(!n.binaryCode.has_value());
    }
}

TEST_CASE("HuffmanNode.HuffmanNode(size_t, size_t, size_t)") {
    SUBCASE("1 2 3") {
        HuffmanNode n(1, 2, 3);
        REQUIRE(n.leftSon.has_value());
        CHECK_EQ(n.leftSon.value(), 1);
        REQUIRE(n.rightSon.has_value());
        CHECK_EQ(n.rightSon.value(), 2);
        CHECK_EQ(n.count, 3);
        CHECK(!n.binaryCode.has_value());
    }
    SUBCASE("255 256 257") {
        HuffmanNode n(255, 256, 257);
        REQUIRE(n.leftSon.has_value());
        CHECK_EQ(n.leftSon.value(), 255);
        REQUIRE(n.rightSon.has_value());
        CHECK_EQ(n.rightSon.value(), 256);
        CHECK_EQ(n.count, 257);
        CHECK(!n.binaryCode.has_value());
    }
}

TEST_CASE("HuffmanNode.HuffmanNode(codeType)") {
    using Huffman::bitStorage;
    using Huffman::codeType;
    bitStorage bs{};
    bs[0] = 1;
    bs[1] = 0;
    bs[2] = 0;
    bs[3] = 1;
    size_t sym = 0b1001;
    SUBCASE("") {
        codeType ct{bs, sym};
        HuffmanNode n(ct);
        CHECK(!n.leftSon.has_value());
        CHECK(!n.rightSon.has_value());
        CHECK_EQ(n.count, 0);
        REQUIRE(n.binaryCode.has_value());
        CHECK_EQ(n.binaryCode.value().second, 9);
        CHECK_EQ(n.binaryCode.value().first[0], 1);
        CHECK_EQ(n.binaryCode.value().first[1], 0);
        CHECK_EQ(n.binaryCode.value().first[2], 0);
        CHECK_EQ(n.binaryCode.value().first[3], 1);
        n.binaryCode.value().first[0] = 0;
        n.binaryCode.value().first[3] = 0;
        CHECK(n.binaryCode.value().first.none());
    }
}

TEST_CASE("HuffmanTree constants") {
    CHECK(BYTE_SIZE >= 8);                           // less will break, but more is ok
    CHECK(MAX_LETTER_COUNT >= 257);                  // the same
    CHECK(MAX_CODE_LENGTH >= 2 * MAX_LETTER_COUNT);  // the same
    CHECK_EQ(EOF_CHAR, MAX_LETTER_COUNT - 1);
}

TEST_CASE("HuffmanTree.HuffmanTree()") {
    HuffmanTree ht;
    auto nodes = ht.getNodes();
    CHECK(nodes.size() >= MAX_LETTER_COUNT);  // more is ok
    CHECK(nodes[EOF_CHAR].count >= 1);
    int nonempty = 0;
    for (size_t i = 0; i < nodes.size(); ++i)
        if (i != EOF_CHAR && nodes[i].count) {
            nonempty++;
        }
    CHECK_EQ(nonempty, 1);
    CHECK(!ht.getRootIndex().has_value());
}

TEST_CASE("HuffmanTree.incNode(char_type)") {
    HuffmanTree ht;
    SUBCASE("1 2 3") {
        auto nodes1 = ht.getNodes();
        ht.incNode(1);
        ht.incNode(2);
        ht.incNode(2);
        ht.incNode(3);
        ht.incNode(3);
        ht.incNode(3);
        auto nodes2 = ht.getNodes();
        CHECK_EQ(nodes2[1].count - nodes1[1].count, 1);
        CHECK_EQ(nodes2[2].count - nodes1[2].count, 2);
        CHECK_EQ(nodes2[3].count - nodes1[3].count, 3);
        CHECK_EQ(nodes1.size(), nodes2.size());
        for (size_t i = 0; i < nodes1.size(); ++i)
            if (i != 1 && i != 2 && i != 3)
                CHECK_EQ(nodes2[i].count - nodes1[i].count, 0);
    }
}

TEST_CASE("HuffmanTree.buildTreeForward() + HuffmanTree.generateCodes() 256 chars") {
    REQUIRE(MAX_LETTER_COUNT == 256 + 1);
    HuffmanTree ht;
    auto onodes = ht.getNodes();  // original
    REQUIRE(onodes.size() == 257);
    SUBCASE("empty") {
        ht.buildTreeForward();
        ht.generateCodes();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 257);
        REQUIRE_EQ(cnodes.size(), 258);
        CHECK_EQ(cnodes[257].count, 2);
        CHECK_EQ(cnodes[0].count, 1);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 1);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[257].leftSon.value(), 0);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[256].count, 1);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 1);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[257].rightSon.value(), 256);
        for (size_t i = 0; i < cnodes.size(); ++i)
            if (i != 0 && i != 256 && i != 257) {
                CHECK(!cnodes[i].leftSon.has_value());
                CHECK(!cnodes[i].rightSon.has_value());
                CHECK_EQ(cnodes[i].count, 0);
            }
    }

    SUBCASE("high build") {
        std::string test =
            "1111111111222222222222222222223333333333333333333333333333334444444444444444444444444444444444444444555555555555555555555555555555555555"
            "55555555555555\n";
        for (auto i : test) ht.incNode(i);
        ht.buildTreeForward();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 263);
        // auto-generated autotest wohoooo
        REQUIRE_EQ(cnodes.size(), 264);
        CHECK_EQ(cnodes[263].count, 153);
        CHECK_EQ(cnodes[261].count, 63);
        CHECK_EQ(cnodes[51].count, 30);
        CHECK_EQ(cnodes[261].leftSon.value(), 51);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[260].count, 33);
        CHECK_EQ(cnodes[259].count, 13);
        CHECK_EQ(cnodes[258].count, 3);
        CHECK_EQ(cnodes[256].count, 1);
        CHECK_EQ(cnodes[258].leftSon.value(), 256);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[257].count, 2);
        CHECK_EQ(cnodes[0].count, 1);
        CHECK_EQ(cnodes[257].leftSon.value(), 0);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[10].count, 1);
        CHECK_EQ(cnodes[257].rightSon.value(), 10);
        CHECK_EQ(cnodes[258].rightSon.value(), 257);
        CHECK_EQ(cnodes[259].leftSon.value(), 258);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[49].count, 10);
        CHECK_EQ(cnodes[259].rightSon.value(), 49);
        CHECK_EQ(cnodes[260].leftSon.value(), 259);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[50].count, 20);
        CHECK_EQ(cnodes[260].rightSon.value(), 50);
        CHECK_EQ(cnodes[261].rightSon.value(), 260);
        CHECK_EQ(cnodes[263].leftSon.value(), 261);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[262].count, 90);
        CHECK_EQ(cnodes[52].count, 40);
        CHECK_EQ(cnodes[262].leftSon.value(), 52);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[53].count, 50);
        CHECK_EQ(cnodes[262].rightSon.value(), 53);
        CHECK_EQ(cnodes[263].rightSon.value(), 262);
    }

    SUBCASE("high codes") {
        std::string test =
            "1111111111222222222222222222223333333333333333333333333333334444444444444444444444444444444444444444555555555555555555555555555555555555"
            "55555555555555\n";
        for (auto i : test) ht.incNode(i);
        ht.buildTreeForward();
        ht.generateCodes();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 263);
        // auto-generated autotest wohoooo
        REQUIRE_EQ(cnodes.size(), 264);
        CHECK_EQ(cnodes[263].count, 153);
        CHECK_EQ(cnodes[261].count, 63);
        CHECK_EQ(cnodes[51].count, 30);
        CHECK_EQ(cnodes[51].binaryCode.value().second, 2);
        CHECK_EQ(cnodes[51].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[261].leftSon.value(), 51);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[260].count, 33);
        CHECK_EQ(cnodes[259].count, 13);
        CHECK_EQ(cnodes[258].count, 3);
        CHECK_EQ(cnodes[256].count, 1);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 5);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010");
        CHECK_EQ(cnodes[258].leftSon.value(), 256);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[257].count, 2);
        CHECK_EQ(cnodes[0].count, 1);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010");
        CHECK_EQ(cnodes[257].leftSon.value(), 0);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[10].count, 1);
        CHECK_EQ(cnodes[10].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[10].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010");
        CHECK_EQ(cnodes[257].rightSon.value(), 10);
        CHECK_EQ(cnodes[258].rightSon.value(), 257);
        CHECK_EQ(cnodes[259].leftSon.value(), 258);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[49].count, 10);
        CHECK_EQ(cnodes[49].binaryCode.value().second, 4);
        CHECK_EQ(cnodes[49].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010");
        CHECK_EQ(cnodes[259].rightSon.value(), 49);
        CHECK_EQ(cnodes[260].leftSon.value(), 259);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[50].count, 20);
        CHECK_EQ(cnodes[50].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[50].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110");
        CHECK_EQ(cnodes[260].rightSon.value(), 50);
        CHECK_EQ(cnodes[261].rightSon.value(), 260);
        CHECK_EQ(cnodes[263].leftSon.value(), 261);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[262].count, 90);
        CHECK_EQ(cnodes[52].count, 40);
        CHECK_EQ(cnodes[52].binaryCode.value().second, 2);
        CHECK_EQ(cnodes[52].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[262].leftSon.value(), 52);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[53].count, 50);
        CHECK_EQ(cnodes[53].binaryCode.value().second, 2);
        CHECK_EQ(cnodes[53].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011");
        CHECK_EQ(cnodes[262].rightSon.value(), 53);
        CHECK_EQ(cnodes[263].rightSon.value(), 262);
    }

    SUBCASE("wide build") {
        std::string test = "1111122222333334444455555666667777788888\n";
        for (auto i : test) ht.incNode(i);
        ht.buildTreeForward();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 266);
        REQUIRE_EQ(cnodes.size(), 267);
        CHECK_EQ(cnodes[266].count, 43);
        CHECK_EQ(cnodes[264].count, 20);
        CHECK_EQ(cnodes[260].count, 10);
        CHECK_EQ(cnodes[50].count, 5);
        CHECK_EQ(cnodes[260].leftSon.value(), 50);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[51].count, 5);
        CHECK_EQ(cnodes[260].rightSon.value(), 51);
        CHECK_EQ(cnodes[264].leftSon.value(), 260);
        CHECK(!cnodes[264].binaryCode.has_value());
        CHECK_EQ(cnodes[261].count, 10);
        CHECK_EQ(cnodes[52].count, 5);
        CHECK_EQ(cnodes[261].leftSon.value(), 52);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[53].count, 5);
        CHECK_EQ(cnodes[261].rightSon.value(), 53);
        CHECK_EQ(cnodes[264].rightSon.value(), 261);
        CHECK_EQ(cnodes[266].leftSon.value(), 264);
        CHECK(!cnodes[266].binaryCode.has_value());
        CHECK_EQ(cnodes[265].count, 23);
        CHECK_EQ(cnodes[262].count, 10);
        CHECK_EQ(cnodes[54].count, 5);
        CHECK_EQ(cnodes[262].leftSon.value(), 54);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[55].count, 5);
        CHECK_EQ(cnodes[262].rightSon.value(), 55);
        CHECK_EQ(cnodes[265].leftSon.value(), 262);
        CHECK(!cnodes[265].binaryCode.has_value());
        CHECK_EQ(cnodes[263].count, 13);
        CHECK_EQ(cnodes[56].count, 5);
        CHECK_EQ(cnodes[263].leftSon.value(), 56);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[259].count, 8);
        CHECK_EQ(cnodes[258].count, 3);
        CHECK_EQ(cnodes[256].count, 1);
        CHECK_EQ(cnodes[258].leftSon.value(), 256);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[257].count, 2);
        CHECK_EQ(cnodes[0].count, 1);
        CHECK_EQ(cnodes[257].leftSon.value(), 0);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[10].count, 1);
        CHECK_EQ(cnodes[257].rightSon.value(), 10);
        CHECK_EQ(cnodes[258].rightSon.value(), 257);
        CHECK_EQ(cnodes[259].leftSon.value(), 258);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[49].count, 5);
        CHECK_EQ(cnodes[259].rightSon.value(), 49);
        CHECK_EQ(cnodes[263].rightSon.value(), 259);
        CHECK_EQ(cnodes[265].rightSon.value(), 263);
        CHECK_EQ(cnodes[266].rightSon.value(), 265);
    }

    SUBCASE("wide codes") {
        std::string test = "1111122222333334444455555666667777788888\n";
        for (auto i : test) ht.incNode(i);
        ht.buildTreeForward();
        ht.generateCodes();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 266);
        REQUIRE_EQ(cnodes.size(), 267);
        CHECK_EQ(cnodes[266].count, 43);
        CHECK_EQ(cnodes[264].count, 20);
        CHECK_EQ(cnodes[260].count, 10);
        CHECK_EQ(cnodes[50].count, 5);
        CHECK_EQ(cnodes[50].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[50].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[260].leftSon.value(), 50);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[51].count, 5);
        CHECK_EQ(cnodes[51].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[51].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100");
        CHECK_EQ(cnodes[260].rightSon.value(), 51);
        CHECK_EQ(cnodes[264].leftSon.value(), 260);
        CHECK(!cnodes[264].binaryCode.has_value());
        CHECK_EQ(cnodes[261].count, 10);
        CHECK_EQ(cnodes[52].count, 5);
        CHECK_EQ(cnodes[52].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[52].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010");
        CHECK_EQ(cnodes[261].leftSon.value(), 52);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[53].count, 5);
        CHECK_EQ(cnodes[53].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[53].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110");
        CHECK_EQ(cnodes[261].rightSon.value(), 53);
        CHECK_EQ(cnodes[264].rightSon.value(), 261);
        CHECK_EQ(cnodes[266].leftSon.value(), 264);
        CHECK(!cnodes[266].binaryCode.has_value());
        CHECK_EQ(cnodes[265].count, 23);
        CHECK_EQ(cnodes[262].count, 10);
        CHECK_EQ(cnodes[54].count, 5);
        CHECK_EQ(cnodes[54].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[54].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[262].leftSon.value(), 54);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[55].count, 5);
        CHECK_EQ(cnodes[55].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[55].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101");
        CHECK_EQ(cnodes[262].rightSon.value(), 55);
        CHECK_EQ(cnodes[265].leftSon.value(), 262);
        CHECK(!cnodes[265].binaryCode.has_value());
        CHECK_EQ(cnodes[263].count, 13);
        CHECK_EQ(cnodes[56].count, 5);
        CHECK_EQ(cnodes[56].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[56].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011");
        CHECK_EQ(cnodes[263].leftSon.value(), 56);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[259].count, 8);
        CHECK_EQ(cnodes[258].count, 3);
        CHECK_EQ(cnodes[256].count, 1);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 5);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111");
        CHECK_EQ(cnodes[258].leftSon.value(), 256);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[257].count, 2);
        CHECK_EQ(cnodes[0].count, 1);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111");
        CHECK_EQ(cnodes[257].leftSon.value(), 0);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[10].count, 1);
        CHECK_EQ(cnodes[10].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[10].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111");
        CHECK_EQ(cnodes[257].rightSon.value(), 10);
        CHECK_EQ(cnodes[258].rightSon.value(), 257);
        CHECK_EQ(cnodes[259].leftSon.value(), 258);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[49].count, 5);
        CHECK_EQ(cnodes[49].binaryCode.value().second, 4);
        CHECK_EQ(cnodes[49].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111");
        CHECK_EQ(cnodes[259].rightSon.value(), 49);
        CHECK_EQ(cnodes[263].rightSon.value(), 259);
        CHECK_EQ(cnodes[265].rightSon.value(), 263);
        CHECK_EQ(cnodes[266].rightSon.value(), 265);
    }

    SUBCASE("random shit") {
        char test[10000];
        auto ifs = std::ifstream("test/samples/TestRandomShit1", std::ios::binary | std::ios::in);
        ifs.read(test, 10000);
        for (auto i : test) ht.incNode(static_cast<uint8_t>(i));
        ht.buildTreeForward();
        ht.generateCodes();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 512);
        REQUIRE_EQ(cnodes.size(), 513);
        CHECK_EQ(cnodes[512].count, 10002);
        CHECK_EQ(cnodes[510].count, 4398);
        CHECK_EQ(cnodes[506].count, 2040);
        CHECK_EQ(cnodes[498].count, 967);
        CHECK_EQ(cnodes[482].count, 460);
        CHECK_EQ(cnodes[450].count, 222);
        CHECK_EQ(cnodes[386].count, 109);
        CHECK_EQ(cnodes[259].count, 54);
        CHECK_EQ(cnodes[79].count, 27);
        CHECK_EQ(cnodes[79].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[79].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[259].leftSon.value(), 79);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[124].count, 27);
        CHECK_EQ(cnodes[124].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[124].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000");
        CHECK_EQ(cnodes[259].rightSon.value(), 124);
        CHECK_EQ(cnodes[386].leftSon.value(), 259);
        CHECK(!cnodes[386].binaryCode.has_value());
        CHECK_EQ(cnodes[23].count, 55);
        CHECK_EQ(cnodes[23].binaryCode.value().second, 7);
        CHECK_EQ(cnodes[23].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000");
        CHECK_EQ(cnodes[386].rightSon.value(), 23);
        CHECK_EQ(cnodes[450].leftSon.value(), 386);
        CHECK(!cnodes[450].binaryCode.has_value());
        CHECK_EQ(cnodes[387].count, 113);
        CHECK_EQ(cnodes[260].count, 55);
        CHECK_EQ(cnodes[159].count, 27);
        CHECK_EQ(cnodes[159].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[159].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000");
        CHECK_EQ(cnodes[260].leftSon.value(), 159);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[165].count, 28);
        CHECK_EQ(cnodes[165].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[165].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000");
        CHECK_EQ(cnodes[260].rightSon.value(), 165);
        CHECK_EQ(cnodes[387].leftSon.value(), 260);
        CHECK(!cnodes[387].binaryCode.has_value());
        CHECK_EQ(cnodes[261].count, 58);
        CHECK_EQ(cnodes[3].count, 29);
        CHECK_EQ(cnodes[3].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[3].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000");
        CHECK_EQ(cnodes[261].leftSon.value(), 3);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[89].count, 29);
        CHECK_EQ(cnodes[89].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[89].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000");
        CHECK_EQ(cnodes[261].rightSon.value(), 89);
        CHECK_EQ(cnodes[387].rightSon.value(), 261);
        CHECK_EQ(cnodes[450].rightSon.value(), 387);
        CHECK_EQ(cnodes[482].leftSon.value(), 450);
        CHECK(!cnodes[482].binaryCode.has_value());
        CHECK_EQ(cnodes[451].count, 238);
        CHECK_EQ(cnodes[388].count, 118);
        CHECK_EQ(cnodes[262].count, 58);
        CHECK_EQ(cnodes[123].count, 29);
        CHECK_EQ(cnodes[123].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[123].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000");
        CHECK_EQ(cnodes[262].leftSon.value(), 123);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[171].count, 29);
        CHECK_EQ(cnodes[171].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[171].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000");
        CHECK_EQ(cnodes[262].rightSon.value(), 171);
        CHECK_EQ(cnodes[388].leftSon.value(), 262);
        CHECK(!cnodes[388].binaryCode.has_value());
        CHECK_EQ(cnodes[263].count, 60);
        CHECK_EQ(cnodes[24].count, 30);
        CHECK_EQ(cnodes[24].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[24].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000");
        CHECK_EQ(cnodes[263].leftSon.value(), 24);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[93].count, 30);
        CHECK_EQ(cnodes[93].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[93].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010000");
        CHECK_EQ(cnodes[263].rightSon.value(), 93);
        CHECK_EQ(cnodes[388].rightSon.value(), 263);
        CHECK_EQ(cnodes[451].leftSon.value(), 388);
        CHECK(!cnodes[451].binaryCode.has_value());
        CHECK_EQ(cnodes[389].count, 120);
        CHECK_EQ(cnodes[264].count, 60);
        CHECK_EQ(cnodes[108].count, 30);
        CHECK_EQ(cnodes[108].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[108].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000");
        CHECK_EQ(cnodes[264].leftSon.value(), 108);
        CHECK(!cnodes[264].binaryCode.has_value());
        CHECK_EQ(cnodes[137].count, 30);
        CHECK_EQ(cnodes[137].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[137].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110000");
        CHECK_EQ(cnodes[264].rightSon.value(), 137);
        CHECK_EQ(cnodes[389].leftSon.value(), 264);
        CHECK(!cnodes[389].binaryCode.has_value());
        CHECK_EQ(cnodes[265].count, 60);
        CHECK_EQ(cnodes[176].count, 30);
        CHECK_EQ(cnodes[176].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[176].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000");
        CHECK_EQ(cnodes[265].leftSon.value(), 176);
        CHECK(!cnodes[265].binaryCode.has_value());
        CHECK_EQ(cnodes[221].count, 30);
        CHECK_EQ(cnodes[221].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[221].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110000");
        CHECK_EQ(cnodes[265].rightSon.value(), 221);
        CHECK_EQ(cnodes[389].rightSon.value(), 265);
        CHECK_EQ(cnodes[451].rightSon.value(), 389);
        CHECK_EQ(cnodes[482].rightSon.value(), 451);
        CHECK_EQ(cnodes[498].leftSon.value(), 482);
        CHECK(!cnodes[498].binaryCode.has_value());
        CHECK_EQ(cnodes[483].count, 507);
        CHECK_EQ(cnodes[452].count, 251);
        CHECK_EQ(cnodes[390].count, 124);
        CHECK_EQ(cnodes[266].count, 62);
        CHECK_EQ(cnodes[18].count, 31);
        CHECK_EQ(cnodes[18].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[18].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000");
        CHECK_EQ(cnodes[266].leftSon.value(), 18);
        CHECK(!cnodes[266].binaryCode.has_value());
        CHECK_EQ(cnodes[74].count, 31);
        CHECK_EQ(cnodes[74].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[74].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000");
        CHECK_EQ(cnodes[266].rightSon.value(), 74);
        CHECK_EQ(cnodes[390].leftSon.value(), 266);
        CHECK(!cnodes[390].binaryCode.has_value());
        CHECK_EQ(cnodes[267].count, 62);
        CHECK_EQ(cnodes[91].count, 31);
        CHECK_EQ(cnodes[91].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[91].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000");
        CHECK_EQ(cnodes[267].leftSon.value(), 91);
        CHECK(!cnodes[267].binaryCode.has_value());
        CHECK_EQ(cnodes[218].count, 31);
        CHECK_EQ(cnodes[218].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[218].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001000");
        CHECK_EQ(cnodes[267].rightSon.value(), 218);
        CHECK_EQ(cnodes[390].rightSon.value(), 267);
        CHECK_EQ(cnodes[452].leftSon.value(), 390);
        CHECK(!cnodes[452].binaryCode.has_value());
        CHECK_EQ(cnodes[391].count, 127);
        CHECK_EQ(cnodes[268].count, 63);
        CHECK_EQ(cnodes[238].count, 31);
        CHECK_EQ(cnodes[238].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[238].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000");
        CHECK_EQ(cnodes[268].leftSon.value(), 238);
        CHECK(!cnodes[268].binaryCode.has_value());
        CHECK_EQ(cnodes[19].count, 32);
        CHECK_EQ(cnodes[19].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[19].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101000");
        CHECK_EQ(cnodes[268].rightSon.value(), 19);
        CHECK_EQ(cnodes[391].leftSon.value(), 268);
        CHECK(!cnodes[391].binaryCode.has_value());
        CHECK_EQ(cnodes[269].count, 64);
        CHECK_EQ(cnodes[34].count, 32);
        CHECK_EQ(cnodes[34].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[34].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101000");
        CHECK_EQ(cnodes[269].leftSon.value(), 34);
        CHECK(!cnodes[269].binaryCode.has_value());
        CHECK_EQ(cnodes[55].count, 32);
        CHECK_EQ(cnodes[55].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[55].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101000");
        CHECK_EQ(cnodes[269].rightSon.value(), 55);
        CHECK_EQ(cnodes[391].rightSon.value(), 269);
        CHECK_EQ(cnodes[452].rightSon.value(), 391);
        CHECK_EQ(cnodes[483].leftSon.value(), 452);
        CHECK(!cnodes[483].binaryCode.has_value());
        CHECK_EQ(cnodes[453].count, 256);
        CHECK_EQ(cnodes[392].count, 128);
        CHECK_EQ(cnodes[270].count, 64);
        CHECK_EQ(cnodes[70].count, 32);
        CHECK_EQ(cnodes[70].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[70].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000");
        CHECK_EQ(cnodes[270].leftSon.value(), 70);
        CHECK(!cnodes[270].binaryCode.has_value());
        CHECK_EQ(cnodes[80].count, 32);
        CHECK_EQ(cnodes[80].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[80].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011000");
        CHECK_EQ(cnodes[270].rightSon.value(), 80);
        CHECK_EQ(cnodes[392].leftSon.value(), 270);
        CHECK(!cnodes[392].binaryCode.has_value());
        CHECK_EQ(cnodes[271].count, 64);
        CHECK_EQ(cnodes[90].count, 32);
        CHECK_EQ(cnodes[90].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[90].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000");
        CHECK_EQ(cnodes[271].leftSon.value(), 90);
        CHECK(!cnodes[271].binaryCode.has_value());
        CHECK_EQ(cnodes[94].count, 32);
        CHECK_EQ(cnodes[94].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[94].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011000");
        CHECK_EQ(cnodes[271].rightSon.value(), 94);
        CHECK_EQ(cnodes[392].rightSon.value(), 271);
        CHECK_EQ(cnodes[453].leftSon.value(), 392);
        CHECK(!cnodes[453].binaryCode.has_value());
        CHECK_EQ(cnodes[393].count, 128);
        CHECK_EQ(cnodes[272].count, 64);
        CHECK_EQ(cnodes[99].count, 32);
        CHECK_EQ(cnodes[99].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[99].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111000");
        CHECK_EQ(cnodes[272].leftSon.value(), 99);
        CHECK(!cnodes[272].binaryCode.has_value());
        CHECK_EQ(cnodes[122].count, 32);
        CHECK_EQ(cnodes[122].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[122].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111000");
        CHECK_EQ(cnodes[272].rightSon.value(), 122);
        CHECK_EQ(cnodes[393].leftSon.value(), 272);
        CHECK(!cnodes[393].binaryCode.has_value());
        CHECK_EQ(cnodes[273].count, 64);
        CHECK_EQ(cnodes[131].count, 32);
        CHECK_EQ(cnodes[131].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[131].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000");
        CHECK_EQ(cnodes[273].leftSon.value(), 131);
        CHECK(!cnodes[273].binaryCode.has_value());
        CHECK_EQ(cnodes[142].count, 32);
        CHECK_EQ(cnodes[142].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[142].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000");
        CHECK_EQ(cnodes[273].rightSon.value(), 142);
        CHECK_EQ(cnodes[393].rightSon.value(), 273);
        CHECK_EQ(cnodes[453].rightSon.value(), 393);
        CHECK_EQ(cnodes[483].rightSon.value(), 453);
        CHECK_EQ(cnodes[498].rightSon.value(), 483);
        CHECK_EQ(cnodes[506].leftSon.value(), 498);
        CHECK(!cnodes[506].binaryCode.has_value());
        CHECK_EQ(cnodes[499].count, 1073);
        CHECK_EQ(cnodes[484].count, 526);
        CHECK_EQ(cnodes[454].count, 261);
        CHECK_EQ(cnodes[394].count, 129);
        CHECK_EQ(cnodes[274].count, 64);
        CHECK_EQ(cnodes[196].count, 32);
        CHECK_EQ(cnodes[196].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[196].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100");
        CHECK_EQ(cnodes[274].leftSon.value(), 196);
        CHECK(!cnodes[274].binaryCode.has_value());
        CHECK_EQ(cnodes[216].count, 32);
        CHECK_EQ(cnodes[216].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[216].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100");
        CHECK_EQ(cnodes[274].rightSon.value(), 216);
        CHECK_EQ(cnodes[394].leftSon.value(), 274);
        CHECK(!cnodes[394].binaryCode.has_value());
        CHECK_EQ(cnodes[275].count, 65);
        CHECK_EQ(cnodes[240].count, 32);
        CHECK_EQ(cnodes[240].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[240].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100");
        CHECK_EQ(cnodes[275].leftSon.value(), 240);
        CHECK(!cnodes[275].binaryCode.has_value());
        CHECK_EQ(cnodes[0].count, 33);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000100");
        CHECK_EQ(cnodes[275].rightSon.value(), 0);
        CHECK_EQ(cnodes[394].rightSon.value(), 275);
        CHECK_EQ(cnodes[454].leftSon.value(), 394);
        CHECK(!cnodes[454].binaryCode.has_value());
        CHECK_EQ(cnodes[395].count, 132);
        CHECK_EQ(cnodes[276].count, 66);
        CHECK_EQ(cnodes[21].count, 33);
        CHECK_EQ(cnodes[21].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[21].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100");
        CHECK_EQ(cnodes[276].leftSon.value(), 21);
        CHECK(!cnodes[276].binaryCode.has_value());
        CHECK_EQ(cnodes[39].count, 33);
        CHECK_EQ(cnodes[39].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[39].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100100");
        CHECK_EQ(cnodes[276].rightSon.value(), 39);
        CHECK_EQ(cnodes[395].leftSon.value(), 276);
        CHECK(!cnodes[395].binaryCode.has_value());
        CHECK_EQ(cnodes[277].count, 66);
        CHECK_EQ(cnodes[49].count, 33);
        CHECK_EQ(cnodes[49].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[49].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100100");
        CHECK_EQ(cnodes[277].leftSon.value(), 49);
        CHECK(!cnodes[277].binaryCode.has_value());
        CHECK_EQ(cnodes[78].count, 33);
        CHECK_EQ(cnodes[78].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[78].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100100");
        CHECK_EQ(cnodes[277].rightSon.value(), 78);
        CHECK_EQ(cnodes[395].rightSon.value(), 277);
        CHECK_EQ(cnodes[454].rightSon.value(), 395);
        CHECK_EQ(cnodes[484].leftSon.value(), 454);
        CHECK(!cnodes[484].binaryCode.has_value());
        CHECK_EQ(cnodes[455].count, 265);
        CHECK_EQ(cnodes[396].count, 132);
        CHECK_EQ(cnodes[278].count, 66);
        CHECK_EQ(cnodes[87].count, 33);
        CHECK_EQ(cnodes[87].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[87].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100");
        CHECK_EQ(cnodes[278].leftSon.value(), 87);
        CHECK(!cnodes[278].binaryCode.has_value());
        CHECK_EQ(cnodes[143].count, 33);
        CHECK_EQ(cnodes[143].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[143].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010100");
        CHECK_EQ(cnodes[278].rightSon.value(), 143);
        CHECK_EQ(cnodes[396].leftSon.value(), 278);
        CHECK(!cnodes[396].binaryCode.has_value());
        CHECK_EQ(cnodes[279].count, 66);
        CHECK_EQ(cnodes[169].count, 33);
        CHECK_EQ(cnodes[169].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[169].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100");
        CHECK_EQ(cnodes[279].leftSon.value(), 169);
        CHECK(!cnodes[279].binaryCode.has_value());
        CHECK_EQ(cnodes[205].count, 33);
        CHECK_EQ(cnodes[205].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[205].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010100");
        CHECK_EQ(cnodes[279].rightSon.value(), 205);
        CHECK_EQ(cnodes[396].rightSon.value(), 279);
        CHECK_EQ(cnodes[455].leftSon.value(), 396);
        CHECK(!cnodes[455].binaryCode.has_value());
        CHECK_EQ(cnodes[397].count, 133);
        CHECK_EQ(cnodes[280].count, 66);
        CHECK_EQ(cnodes[209].count, 33);
        CHECK_EQ(cnodes[209].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[209].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110100");
        CHECK_EQ(cnodes[280].leftSon.value(), 209);
        CHECK(!cnodes[280].binaryCode.has_value());
        CHECK_EQ(cnodes[227].count, 33);
        CHECK_EQ(cnodes[227].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[227].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110100");
        CHECK_EQ(cnodes[280].rightSon.value(), 227);
        CHECK_EQ(cnodes[397].leftSon.value(), 280);
        CHECK(!cnodes[397].binaryCode.has_value());
        CHECK_EQ(cnodes[281].count, 67);
        CHECK_EQ(cnodes[248].count, 33);
        CHECK_EQ(cnodes[248].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[248].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110100");
        CHECK_EQ(cnodes[281].leftSon.value(), 248);
        CHECK(!cnodes[281].binaryCode.has_value());
        CHECK_EQ(cnodes[50].count, 34);
        CHECK_EQ(cnodes[50].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[50].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110100");
        CHECK_EQ(cnodes[281].rightSon.value(), 50);
        CHECK_EQ(cnodes[397].rightSon.value(), 281);
        CHECK_EQ(cnodes[455].rightSon.value(), 397);
        CHECK_EQ(cnodes[484].rightSon.value(), 455);
        CHECK_EQ(cnodes[499].leftSon.value(), 484);
        CHECK(!cnodes[499].binaryCode.has_value());
        CHECK_EQ(cnodes[485].count, 547);
        CHECK_EQ(cnodes[456].count, 272);
        CHECK_EQ(cnodes[398].count, 136);
        CHECK_EQ(cnodes[282].count, 68);
        CHECK_EQ(cnodes[64].count, 34);
        CHECK_EQ(cnodes[64].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[64].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100");
        CHECK_EQ(cnodes[282].leftSon.value(), 64);
        CHECK(!cnodes[282].binaryCode.has_value());
        CHECK_EQ(cnodes[75].count, 34);
        CHECK_EQ(cnodes[75].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[75].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001100");
        CHECK_EQ(cnodes[282].rightSon.value(), 75);
        CHECK_EQ(cnodes[398].leftSon.value(), 282);
        CHECK(!cnodes[398].binaryCode.has_value());
        CHECK_EQ(cnodes[283].count, 68);
        CHECK_EQ(cnodes[110].count, 34);
        CHECK_EQ(cnodes[110].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[110].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001100");
        CHECK_EQ(cnodes[283].leftSon.value(), 110);
        CHECK(!cnodes[283].binaryCode.has_value());
        CHECK_EQ(cnodes[111].count, 34);
        CHECK_EQ(cnodes[111].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[111].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001100");
        CHECK_EQ(cnodes[283].rightSon.value(), 111);
        CHECK_EQ(cnodes[398].rightSon.value(), 283);
        CHECK_EQ(cnodes[456].leftSon.value(), 398);
        CHECK(!cnodes[456].binaryCode.has_value());
        CHECK_EQ(cnodes[399].count, 136);
        CHECK_EQ(cnodes[284].count, 68);
        CHECK_EQ(cnodes[132].count, 34);
        CHECK_EQ(cnodes[132].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[132].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101100");
        CHECK_EQ(cnodes[284].leftSon.value(), 132);
        CHECK(!cnodes[284].binaryCode.has_value());
        CHECK_EQ(cnodes[138].count, 34);
        CHECK_EQ(cnodes[138].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[138].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101100");
        CHECK_EQ(cnodes[284].rightSon.value(), 138);
        CHECK_EQ(cnodes[399].leftSon.value(), 284);
        CHECK(!cnodes[399].binaryCode.has_value());
        CHECK_EQ(cnodes[285].count, 68);
        CHECK_EQ(cnodes[152].count, 34);
        CHECK_EQ(cnodes[152].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[152].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101100");
        CHECK_EQ(cnodes[285].leftSon.value(), 152);
        CHECK(!cnodes[285].binaryCode.has_value());
        CHECK_EQ(cnodes[175].count, 34);
        CHECK_EQ(cnodes[175].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[175].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101100");
        CHECK_EQ(cnodes[285].rightSon.value(), 175);
        CHECK_EQ(cnodes[399].rightSon.value(), 285);
        CHECK_EQ(cnodes[456].rightSon.value(), 399);
        CHECK_EQ(cnodes[485].leftSon.value(), 456);
        CHECK(!cnodes[485].binaryCode.has_value());
        CHECK_EQ(cnodes[457].count, 275);
        CHECK_EQ(cnodes[400].count, 136);
        CHECK_EQ(cnodes[286].count, 68);
        CHECK_EQ(cnodes[179].count, 34);
        CHECK_EQ(cnodes[179].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[179].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100");
        CHECK_EQ(cnodes[286].leftSon.value(), 179);
        CHECK(!cnodes[286].binaryCode.has_value());
        CHECK_EQ(cnodes[212].count, 34);
        CHECK_EQ(cnodes[212].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[212].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011100");
        CHECK_EQ(cnodes[286].rightSon.value(), 212);
        CHECK_EQ(cnodes[400].leftSon.value(), 286);
        CHECK(!cnodes[400].binaryCode.has_value());
        CHECK_EQ(cnodes[287].count, 68);
        CHECK_EQ(cnodes[214].count, 34);
        CHECK_EQ(cnodes[214].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[214].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011100");
        CHECK_EQ(cnodes[287].leftSon.value(), 214);
        CHECK(!cnodes[287].binaryCode.has_value());
        CHECK_EQ(cnodes[225].count, 34);
        CHECK_EQ(cnodes[225].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[225].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011100");
        CHECK_EQ(cnodes[287].rightSon.value(), 225);
        CHECK_EQ(cnodes[400].rightSon.value(), 287);
        CHECK_EQ(cnodes[457].leftSon.value(), 400);
        CHECK(!cnodes[457].binaryCode.has_value());
        CHECK_EQ(cnodes[401].count, 139);
        CHECK_EQ(cnodes[288].count, 69);
        CHECK_EQ(cnodes[250].count, 34);
        CHECK_EQ(cnodes[250].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[250].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111100");
        CHECK_EQ(cnodes[288].leftSon.value(), 250);
        CHECK(!cnodes[288].binaryCode.has_value());
        CHECK_EQ(cnodes[35].count, 35);
        CHECK_EQ(cnodes[35].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[35].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111100");
        CHECK_EQ(cnodes[288].rightSon.value(), 35);
        CHECK_EQ(cnodes[401].leftSon.value(), 288);
        CHECK(!cnodes[401].binaryCode.has_value());
        CHECK_EQ(cnodes[289].count, 70);
        CHECK_EQ(cnodes[54].count, 35);
        CHECK_EQ(cnodes[54].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[54].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111100");
        CHECK_EQ(cnodes[289].leftSon.value(), 54);
        CHECK(!cnodes[289].binaryCode.has_value());
        CHECK_EQ(cnodes[59].count, 35);
        CHECK_EQ(cnodes[59].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[59].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111100");
        CHECK_EQ(cnodes[289].rightSon.value(), 59);
        CHECK_EQ(cnodes[401].rightSon.value(), 289);
        CHECK_EQ(cnodes[457].rightSon.value(), 401);
        CHECK_EQ(cnodes[485].rightSon.value(), 457);
        CHECK_EQ(cnodes[499].rightSon.value(), 485);
        CHECK_EQ(cnodes[506].rightSon.value(), 499);
        CHECK_EQ(cnodes[510].leftSon.value(), 506);
        CHECK(!cnodes[510].binaryCode.has_value());
        CHECK_EQ(cnodes[507].count, 2358);
        CHECK_EQ(cnodes[500].count, 1149);
        CHECK_EQ(cnodes[486].count, 564);
        CHECK_EQ(cnodes[458].count, 280);
        CHECK_EQ(cnodes[402].count, 140);
        CHECK_EQ(cnodes[290].count, 70);
        CHECK_EQ(cnodes[102].count, 35);
        CHECK_EQ(cnodes[102].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[102].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010");
        CHECK_EQ(cnodes[290].leftSon.value(), 102);
        CHECK(!cnodes[290].binaryCode.has_value());
        CHECK_EQ(cnodes[114].count, 35);
        CHECK_EQ(cnodes[114].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[114].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010");
        CHECK_EQ(cnodes[290].rightSon.value(), 114);
        CHECK_EQ(cnodes[402].leftSon.value(), 290);
        CHECK(!cnodes[402].binaryCode.has_value());
        CHECK_EQ(cnodes[291].count, 70);
        CHECK_EQ(cnodes[128].count, 35);
        CHECK_EQ(cnodes[128].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[128].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010");
        CHECK_EQ(cnodes[291].leftSon.value(), 128);
        CHECK(!cnodes[291].binaryCode.has_value());
        CHECK_EQ(cnodes[133].count, 35);
        CHECK_EQ(cnodes[133].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[133].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000010");
        CHECK_EQ(cnodes[291].rightSon.value(), 133);
        CHECK_EQ(cnodes[402].rightSon.value(), 291);
        CHECK_EQ(cnodes[458].leftSon.value(), 402);
        CHECK(!cnodes[458].binaryCode.has_value());
        CHECK_EQ(cnodes[403].count, 140);
        CHECK_EQ(cnodes[292].count, 70);
        CHECK_EQ(cnodes[146].count, 35);
        CHECK_EQ(cnodes[146].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[146].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010");
        CHECK_EQ(cnodes[292].leftSon.value(), 146);
        CHECK(!cnodes[292].binaryCode.has_value());
        CHECK_EQ(cnodes[148].count, 35);
        CHECK_EQ(cnodes[148].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[148].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100010");
        CHECK_EQ(cnodes[292].rightSon.value(), 148);
        CHECK_EQ(cnodes[403].leftSon.value(), 292);
        CHECK(!cnodes[403].binaryCode.has_value());
        CHECK_EQ(cnodes[293].count, 70);
        CHECK_EQ(cnodes[157].count, 35);
        CHECK_EQ(cnodes[157].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[157].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100010");
        CHECK_EQ(cnodes[293].leftSon.value(), 157);
        CHECK(!cnodes[293].binaryCode.has_value());
        CHECK_EQ(cnodes[160].count, 35);
        CHECK_EQ(cnodes[160].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[160].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100010");
        CHECK_EQ(cnodes[293].rightSon.value(), 160);
        CHECK_EQ(cnodes[403].rightSon.value(), 293);
        CHECK_EQ(cnodes[458].rightSon.value(), 403);
        CHECK_EQ(cnodes[486].leftSon.value(), 458);
        CHECK(!cnodes[486].binaryCode.has_value());
        CHECK_EQ(cnodes[459].count, 284);
        CHECK_EQ(cnodes[404].count, 140);
        CHECK_EQ(cnodes[294].count, 70);
        CHECK_EQ(cnodes[168].count, 35);
        CHECK_EQ(cnodes[168].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[168].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010");
        CHECK_EQ(cnodes[294].leftSon.value(), 168);
        CHECK(!cnodes[294].binaryCode.has_value());
        CHECK_EQ(cnodes[181].count, 35);
        CHECK_EQ(cnodes[181].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[181].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010010");
        CHECK_EQ(cnodes[294].rightSon.value(), 181);
        CHECK_EQ(cnodes[404].leftSon.value(), 294);
        CHECK(!cnodes[404].binaryCode.has_value());
        CHECK_EQ(cnodes[295].count, 70);
        CHECK_EQ(cnodes[187].count, 35);
        CHECK_EQ(cnodes[187].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[187].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010");
        CHECK_EQ(cnodes[295].leftSon.value(), 187);
        CHECK(!cnodes[295].binaryCode.has_value());
        CHECK_EQ(cnodes[242].count, 35);
        CHECK_EQ(cnodes[242].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[242].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010010");
        CHECK_EQ(cnodes[295].rightSon.value(), 242);
        CHECK_EQ(cnodes[404].rightSon.value(), 295);
        CHECK_EQ(cnodes[459].leftSon.value(), 404);
        CHECK(!cnodes[459].binaryCode.has_value());
        CHECK_EQ(cnodes[405].count, 144);
        CHECK_EQ(cnodes[296].count, 72);
        CHECK_EQ(cnodes[15].count, 36);
        CHECK_EQ(cnodes[15].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[15].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010");
        CHECK_EQ(cnodes[296].leftSon.value(), 15);
        CHECK(!cnodes[296].binaryCode.has_value());
        CHECK_EQ(cnodes[77].count, 36);
        CHECK_EQ(cnodes[77].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[77].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110010");
        CHECK_EQ(cnodes[296].rightSon.value(), 77);
        CHECK_EQ(cnodes[405].leftSon.value(), 296);
        CHECK(!cnodes[405].binaryCode.has_value());
        CHECK_EQ(cnodes[297].count, 72);
        CHECK_EQ(cnodes[88].count, 36);
        CHECK_EQ(cnodes[88].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[88].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110010");
        CHECK_EQ(cnodes[297].leftSon.value(), 88);
        CHECK(!cnodes[297].binaryCode.has_value());
        CHECK_EQ(cnodes[136].count, 36);
        CHECK_EQ(cnodes[136].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[136].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110010");
        CHECK_EQ(cnodes[297].rightSon.value(), 136);
        CHECK_EQ(cnodes[405].rightSon.value(), 297);
        CHECK_EQ(cnodes[459].rightSon.value(), 405);
        CHECK_EQ(cnodes[486].rightSon.value(), 459);
        CHECK_EQ(cnodes[500].leftSon.value(), 486);
        CHECK(!cnodes[500].binaryCode.has_value());
        CHECK_EQ(cnodes[487].count, 585);
        CHECK_EQ(cnodes[460].count, 289);
        CHECK_EQ(cnodes[406].count, 144);
        CHECK_EQ(cnodes[298].count, 72);
        CHECK_EQ(cnodes[147].count, 36);
        CHECK_EQ(cnodes[147].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[147].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010");
        CHECK_EQ(cnodes[298].leftSon.value(), 147);
        CHECK(!cnodes[298].binaryCode.has_value());
        CHECK_EQ(cnodes[151].count, 36);
        CHECK_EQ(cnodes[151].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[151].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001010");
        CHECK_EQ(cnodes[298].rightSon.value(), 151);
        CHECK_EQ(cnodes[406].leftSon.value(), 298);
        CHECK(!cnodes[406].binaryCode.has_value());
        CHECK_EQ(cnodes[299].count, 72);
        CHECK_EQ(cnodes[192].count, 36);
        CHECK_EQ(cnodes[192].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[192].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001010");
        CHECK_EQ(cnodes[299].leftSon.value(), 192);
        CHECK(!cnodes[299].binaryCode.has_value());
        CHECK_EQ(cnodes[226].count, 36);
        CHECK_EQ(cnodes[226].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[226].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001010");
        CHECK_EQ(cnodes[299].rightSon.value(), 226);
        CHECK_EQ(cnodes[406].rightSon.value(), 299);
        CHECK_EQ(cnodes[460].leftSon.value(), 406);
        CHECK(!cnodes[460].binaryCode.has_value());
        CHECK_EQ(cnodes[407].count, 145);
        CHECK_EQ(cnodes[300].count, 72);
        CHECK_EQ(cnodes[235].count, 36);
        CHECK_EQ(cnodes[235].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[235].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010");
        CHECK_EQ(cnodes[300].leftSon.value(), 235);
        CHECK(!cnodes[300].binaryCode.has_value());
        CHECK_EQ(cnodes[249].count, 36);
        CHECK_EQ(cnodes[249].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[249].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010");
        CHECK_EQ(cnodes[300].rightSon.value(), 249);
        CHECK_EQ(cnodes[407].leftSon.value(), 300);
        CHECK(!cnodes[407].binaryCode.has_value());
        CHECK_EQ(cnodes[301].count, 73);
        CHECK_EQ(cnodes[252].count, 36);
        CHECK_EQ(cnodes[252].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[252].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101010");
        CHECK_EQ(cnodes[301].leftSon.value(), 252);
        CHECK(!cnodes[301].binaryCode.has_value());
        CHECK_EQ(cnodes[6].count, 37);
        CHECK_EQ(cnodes[6].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[6].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101010");
        CHECK_EQ(cnodes[301].rightSon.value(), 6);
        CHECK_EQ(cnodes[407].rightSon.value(), 301);
        CHECK_EQ(cnodes[460].rightSon.value(), 407);
        CHECK_EQ(cnodes[487].leftSon.value(), 460);
        CHECK(!cnodes[487].binaryCode.has_value());
        CHECK_EQ(cnodes[461].count, 296);
        CHECK_EQ(cnodes[408].count, 148);
        CHECK_EQ(cnodes[302].count, 74);
        CHECK_EQ(cnodes[7].count, 37);
        CHECK_EQ(cnodes[7].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[7].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010");
        CHECK_EQ(cnodes[302].leftSon.value(), 7);
        CHECK(!cnodes[302].binaryCode.has_value());
        CHECK_EQ(cnodes[20].count, 37);
        CHECK_EQ(cnodes[20].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[20].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011010");
        CHECK_EQ(cnodes[302].rightSon.value(), 20);
        CHECK_EQ(cnodes[408].leftSon.value(), 302);
        CHECK(!cnodes[408].binaryCode.has_value());
        CHECK_EQ(cnodes[303].count, 74);
        CHECK_EQ(cnodes[40].count, 37);
        CHECK_EQ(cnodes[40].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[40].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011010");
        CHECK_EQ(cnodes[303].leftSon.value(), 40);
        CHECK(!cnodes[303].binaryCode.has_value());
        CHECK_EQ(cnodes[42].count, 37);
        CHECK_EQ(cnodes[42].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[42].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011010");
        CHECK_EQ(cnodes[303].rightSon.value(), 42);
        CHECK_EQ(cnodes[408].rightSon.value(), 303);
        CHECK_EQ(cnodes[461].leftSon.value(), 408);
        CHECK(!cnodes[461].binaryCode.has_value());
        CHECK_EQ(cnodes[409].count, 148);
        CHECK_EQ(cnodes[304].count, 74);
        CHECK_EQ(cnodes[67].count, 37);
        CHECK_EQ(cnodes[67].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[67].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111010");
        CHECK_EQ(cnodes[304].leftSon.value(), 67);
        CHECK(!cnodes[304].binaryCode.has_value());
        CHECK_EQ(cnodes[76].count, 37);
        CHECK_EQ(cnodes[76].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[76].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111010");
        CHECK_EQ(cnodes[304].rightSon.value(), 76);
        CHECK_EQ(cnodes[409].leftSon.value(), 304);
        CHECK(!cnodes[409].binaryCode.has_value());
        CHECK_EQ(cnodes[305].count, 74);
        CHECK_EQ(cnodes[100].count, 37);
        CHECK_EQ(cnodes[100].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[100].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111010");
        CHECK_EQ(cnodes[305].leftSon.value(), 100);
        CHECK(!cnodes[305].binaryCode.has_value());
        CHECK_EQ(cnodes[107].count, 37);
        CHECK_EQ(cnodes[107].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[107].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111010");
        CHECK_EQ(cnodes[305].rightSon.value(), 107);
        CHECK_EQ(cnodes[409].rightSon.value(), 305);
        CHECK_EQ(cnodes[461].rightSon.value(), 409);
        CHECK_EQ(cnodes[487].rightSon.value(), 461);
        CHECK_EQ(cnodes[500].rightSon.value(), 487);
        CHECK_EQ(cnodes[507].leftSon.value(), 500);
        CHECK(!cnodes[507].binaryCode.has_value());
        CHECK_EQ(cnodes[501].count, 1209);
        CHECK_EQ(cnodes[488].count, 598);
        CHECK_EQ(cnodes[462].count, 296);
        CHECK_EQ(cnodes[410].count, 148);
        CHECK_EQ(cnodes[306].count, 74);
        CHECK_EQ(cnodes[126].count, 37);
        CHECK_EQ(cnodes[126].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[126].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110");
        CHECK_EQ(cnodes[306].leftSon.value(), 126);
        CHECK(!cnodes[306].binaryCode.has_value());
        CHECK_EQ(cnodes[129].count, 37);
        CHECK_EQ(cnodes[129].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[129].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000110");
        CHECK_EQ(cnodes[306].rightSon.value(), 129);
        CHECK_EQ(cnodes[410].leftSon.value(), 306);
        CHECK(!cnodes[410].binaryCode.has_value());
        CHECK_EQ(cnodes[307].count, 74);
        CHECK_EQ(cnodes[153].count, 37);
        CHECK_EQ(cnodes[153].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[153].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000110");
        CHECK_EQ(cnodes[307].leftSon.value(), 153);
        CHECK(!cnodes[307].binaryCode.has_value());
        CHECK_EQ(cnodes[163].count, 37);
        CHECK_EQ(cnodes[163].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[163].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000110");
        CHECK_EQ(cnodes[307].rightSon.value(), 163);
        CHECK_EQ(cnodes[410].rightSon.value(), 307);
        CHECK_EQ(cnodes[462].leftSon.value(), 410);
        CHECK(!cnodes[462].binaryCode.has_value());
        CHECK_EQ(cnodes[411].count, 148);
        CHECK_EQ(cnodes[308].count, 74);
        CHECK_EQ(cnodes[172].count, 37);
        CHECK_EQ(cnodes[172].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[172].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100110");
        CHECK_EQ(cnodes[308].leftSon.value(), 172);
        CHECK(!cnodes[308].binaryCode.has_value());
        CHECK_EQ(cnodes[177].count, 37);
        CHECK_EQ(cnodes[177].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[177].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100110");
        CHECK_EQ(cnodes[308].rightSon.value(), 177);
        CHECK_EQ(cnodes[411].leftSon.value(), 308);
        CHECK(!cnodes[411].binaryCode.has_value());
        CHECK_EQ(cnodes[309].count, 74);
        CHECK_EQ(cnodes[182].count, 37);
        CHECK_EQ(cnodes[182].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[182].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100110");
        CHECK_EQ(cnodes[309].leftSon.value(), 182);
        CHECK(!cnodes[309].binaryCode.has_value());
        CHECK_EQ(cnodes[183].count, 37);
        CHECK_EQ(cnodes[183].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[183].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100110");
        CHECK_EQ(cnodes[309].rightSon.value(), 183);
        CHECK_EQ(cnodes[411].rightSon.value(), 309);
        CHECK_EQ(cnodes[462].rightSon.value(), 411);
        CHECK_EQ(cnodes[488].leftSon.value(), 462);
        CHECK(!cnodes[488].binaryCode.has_value());
        CHECK_EQ(cnodes[463].count, 302);
        CHECK_EQ(cnodes[412].count, 150);
        CHECK_EQ(cnodes[310].count, 74);
        CHECK_EQ(cnodes[201].count, 37);
        CHECK_EQ(cnodes[201].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[201].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110");
        CHECK_EQ(cnodes[310].leftSon.value(), 201);
        CHECK(!cnodes[310].binaryCode.has_value());
        CHECK_EQ(cnodes[222].count, 37);
        CHECK_EQ(cnodes[222].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[222].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010110");
        CHECK_EQ(cnodes[310].rightSon.value(), 222);
        CHECK_EQ(cnodes[412].leftSon.value(), 310);
        CHECK(!cnodes[412].binaryCode.has_value());
        CHECK_EQ(cnodes[311].count, 76);
        CHECK_EQ(cnodes[16].count, 38);
        CHECK_EQ(cnodes[16].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[16].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010110");
        CHECK_EQ(cnodes[311].leftSon.value(), 16);
        CHECK(!cnodes[311].binaryCode.has_value());
        CHECK_EQ(cnodes[22].count, 38);
        CHECK_EQ(cnodes[22].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[22].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010110");
        CHECK_EQ(cnodes[311].rightSon.value(), 22);
        CHECK_EQ(cnodes[412].rightSon.value(), 311);
        CHECK_EQ(cnodes[463].leftSon.value(), 412);
        CHECK(!cnodes[463].binaryCode.has_value());
        CHECK_EQ(cnodes[413].count, 152);
        CHECK_EQ(cnodes[312].count, 76);
        CHECK_EQ(cnodes[30].count, 38);
        CHECK_EQ(cnodes[30].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[30].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110110");
        CHECK_EQ(cnodes[312].leftSon.value(), 30);
        CHECK(!cnodes[312].binaryCode.has_value());
        CHECK_EQ(cnodes[33].count, 38);
        CHECK_EQ(cnodes[33].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[33].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110110");
        CHECK_EQ(cnodes[312].rightSon.value(), 33);
        CHECK_EQ(cnodes[413].leftSon.value(), 312);
        CHECK(!cnodes[413].binaryCode.has_value());
        CHECK_EQ(cnodes[313].count, 76);
        CHECK_EQ(cnodes[37].count, 38);
        CHECK_EQ(cnodes[37].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[37].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110110");
        CHECK_EQ(cnodes[313].leftSon.value(), 37);
        CHECK(!cnodes[313].binaryCode.has_value());
        CHECK_EQ(cnodes[56].count, 38);
        CHECK_EQ(cnodes[56].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[56].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110110");
        CHECK_EQ(cnodes[313].rightSon.value(), 56);
        CHECK_EQ(cnodes[413].rightSon.value(), 313);
        CHECK_EQ(cnodes[463].rightSon.value(), 413);
        CHECK_EQ(cnodes[488].rightSon.value(), 463);
        CHECK_EQ(cnodes[501].leftSon.value(), 488);
        CHECK(!cnodes[501].binaryCode.has_value());
        CHECK_EQ(cnodes[489].count, 611);
        CHECK_EQ(cnodes[464].count, 304);
        CHECK_EQ(cnodes[414].count, 152);
        CHECK_EQ(cnodes[314].count, 76);
        CHECK_EQ(cnodes[66].count, 38);
        CHECK_EQ(cnodes[66].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[66].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110");
        CHECK_EQ(cnodes[314].leftSon.value(), 66);
        CHECK(!cnodes[314].binaryCode.has_value());
        CHECK_EQ(cnodes[73].count, 38);
        CHECK_EQ(cnodes[73].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[73].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001110");
        CHECK_EQ(cnodes[314].rightSon.value(), 73);
        CHECK_EQ(cnodes[414].leftSon.value(), 314);
        CHECK(!cnodes[414].binaryCode.has_value());
        CHECK_EQ(cnodes[315].count, 76);
        CHECK_EQ(cnodes[117].count, 38);
        CHECK_EQ(cnodes[117].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[117].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001110");
        CHECK_EQ(cnodes[315].leftSon.value(), 117);
        CHECK(!cnodes[315].binaryCode.has_value());
        CHECK_EQ(cnodes[119].count, 38);
        CHECK_EQ(cnodes[119].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[119].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001110");
        CHECK_EQ(cnodes[315].rightSon.value(), 119);
        CHECK_EQ(cnodes[414].rightSon.value(), 315);
        CHECK_EQ(cnodes[464].leftSon.value(), 414);
        CHECK(!cnodes[464].binaryCode.has_value());
        CHECK_EQ(cnodes[415].count, 152);
        CHECK_EQ(cnodes[316].count, 76);
        CHECK_EQ(cnodes[120].count, 38);
        CHECK_EQ(cnodes[120].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[120].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101110");
        CHECK_EQ(cnodes[316].leftSon.value(), 120);
        CHECK(!cnodes[316].binaryCode.has_value());
        CHECK_EQ(cnodes[121].count, 38);
        CHECK_EQ(cnodes[121].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[121].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101110");
        CHECK_EQ(cnodes[316].rightSon.value(), 121);
        CHECK_EQ(cnodes[415].leftSon.value(), 316);
        CHECK(!cnodes[415].binaryCode.has_value());
        CHECK_EQ(cnodes[317].count, 76);
        CHECK_EQ(cnodes[141].count, 38);
        CHECK_EQ(cnodes[141].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[141].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101110");
        CHECK_EQ(cnodes[317].leftSon.value(), 141);
        CHECK(!cnodes[317].binaryCode.has_value());
        CHECK_EQ(cnodes[154].count, 38);
        CHECK_EQ(cnodes[154].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[154].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101110");
        CHECK_EQ(cnodes[317].rightSon.value(), 154);
        CHECK_EQ(cnodes[415].rightSon.value(), 317);
        CHECK_EQ(cnodes[464].rightSon.value(), 415);
        CHECK_EQ(cnodes[489].leftSon.value(), 464);
        CHECK(!cnodes[489].binaryCode.has_value());
        CHECK_EQ(cnodes[465].count, 307);
        CHECK_EQ(cnodes[416].count, 152);
        CHECK_EQ(cnodes[318].count, 76);
        CHECK_EQ(cnodes[170].count, 38);
        CHECK_EQ(cnodes[170].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[170].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110");
        CHECK_EQ(cnodes[318].leftSon.value(), 170);
        CHECK(!cnodes[318].binaryCode.has_value());
        CHECK_EQ(cnodes[174].count, 38);
        CHECK_EQ(cnodes[174].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[174].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011110");
        CHECK_EQ(cnodes[318].rightSon.value(), 174);
        CHECK_EQ(cnodes[416].leftSon.value(), 318);
        CHECK(!cnodes[416].binaryCode.has_value());
        CHECK_EQ(cnodes[319].count, 76);
        CHECK_EQ(cnodes[224].count, 38);
        CHECK_EQ(cnodes[224].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[224].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011110");
        CHECK_EQ(cnodes[319].leftSon.value(), 224);
        CHECK(!cnodes[319].binaryCode.has_value());
        CHECK_EQ(cnodes[231].count, 38);
        CHECK_EQ(cnodes[231].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[231].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011110");
        CHECK_EQ(cnodes[319].rightSon.value(), 231);
        CHECK_EQ(cnodes[416].rightSon.value(), 319);
        CHECK_EQ(cnodes[465].leftSon.value(), 416);
        CHECK(!cnodes[465].binaryCode.has_value());
        CHECK_EQ(cnodes[417].count, 155);
        CHECK_EQ(cnodes[320].count, 77);
        CHECK_EQ(cnodes[243].count, 38);
        CHECK_EQ(cnodes[243].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[243].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110");
        CHECK_EQ(cnodes[320].leftSon.value(), 243);
        CHECK(!cnodes[320].binaryCode.has_value());
        CHECK_EQ(cnodes[9].count, 39);
        CHECK_EQ(cnodes[9].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[9].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111110");
        CHECK_EQ(cnodes[320].rightSon.value(), 9);
        CHECK_EQ(cnodes[417].leftSon.value(), 320);
        CHECK(!cnodes[417].binaryCode.has_value());
        CHECK_EQ(cnodes[321].count, 78);
        CHECK_EQ(cnodes[44].count, 39);
        CHECK_EQ(cnodes[44].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[44].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110");
        CHECK_EQ(cnodes[321].leftSon.value(), 44);
        CHECK(!cnodes[321].binaryCode.has_value());
        CHECK_EQ(cnodes[52].count, 39);
        CHECK_EQ(cnodes[52].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[52].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110");
        CHECK_EQ(cnodes[321].rightSon.value(), 52);
        CHECK_EQ(cnodes[417].rightSon.value(), 321);
        CHECK_EQ(cnodes[465].rightSon.value(), 417);
        CHECK_EQ(cnodes[489].rightSon.value(), 465);
        CHECK_EQ(cnodes[501].rightSon.value(), 489);
        CHECK_EQ(cnodes[507].rightSon.value(), 501);
        CHECK_EQ(cnodes[510].rightSon.value(), 507);
        CHECK_EQ(cnodes[512].leftSon.value(), 510);
        CHECK(!cnodes[512].binaryCode.has_value());
        CHECK_EQ(cnodes[511].count, 5604);
        CHECK_EQ(cnodes[508].count, 2610);
        CHECK_EQ(cnodes[502].count, 1272);
        CHECK_EQ(cnodes[490].count, 625);
        CHECK_EQ(cnodes[466].count, 312);
        CHECK_EQ(cnodes[418].count, 156);
        CHECK_EQ(cnodes[322].count, 78);
        CHECK_EQ(cnodes[103].count, 39);
        CHECK_EQ(cnodes[103].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[103].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[322].leftSon.value(), 103);
        CHECK(!cnodes[322].binaryCode.has_value());
        CHECK_EQ(cnodes[166].count, 39);
        CHECK_EQ(cnodes[166].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[166].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001");
        CHECK_EQ(cnodes[322].rightSon.value(), 166);
        CHECK_EQ(cnodes[418].leftSon.value(), 322);
        CHECK(!cnodes[418].binaryCode.has_value());
        CHECK_EQ(cnodes[323].count, 78);
        CHECK_EQ(cnodes[189].count, 39);
        CHECK_EQ(cnodes[189].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[189].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001");
        CHECK_EQ(cnodes[323].leftSon.value(), 189);
        CHECK(!cnodes[323].binaryCode.has_value());
        CHECK_EQ(cnodes[191].count, 39);
        CHECK_EQ(cnodes[191].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[191].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000001");
        CHECK_EQ(cnodes[323].rightSon.value(), 191);
        CHECK_EQ(cnodes[418].rightSon.value(), 323);
        CHECK_EQ(cnodes[466].leftSon.value(), 418);
        CHECK(!cnodes[466].binaryCode.has_value());
        CHECK_EQ(cnodes[419].count, 156);
        CHECK_EQ(cnodes[324].count, 78);
        CHECK_EQ(cnodes[194].count, 39);
        CHECK_EQ(cnodes[194].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[194].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001");
        CHECK_EQ(cnodes[324].leftSon.value(), 194);
        CHECK(!cnodes[324].binaryCode.has_value());
        CHECK_EQ(cnodes[200].count, 39);
        CHECK_EQ(cnodes[200].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[200].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100001");
        CHECK_EQ(cnodes[324].rightSon.value(), 200);
        CHECK_EQ(cnodes[419].leftSon.value(), 324);
        CHECK(!cnodes[419].binaryCode.has_value());
        CHECK_EQ(cnodes[325].count, 78);
        CHECK_EQ(cnodes[204].count, 39);
        CHECK_EQ(cnodes[204].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[204].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100001");
        CHECK_EQ(cnodes[325].leftSon.value(), 204);
        CHECK(!cnodes[325].binaryCode.has_value());
        CHECK_EQ(cnodes[210].count, 39);
        CHECK_EQ(cnodes[210].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[210].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100001");
        CHECK_EQ(cnodes[325].rightSon.value(), 210);
        CHECK_EQ(cnodes[419].rightSon.value(), 325);
        CHECK_EQ(cnodes[466].rightSon.value(), 419);
        CHECK_EQ(cnodes[490].leftSon.value(), 466);
        CHECK(!cnodes[490].binaryCode.has_value());
        CHECK_EQ(cnodes[467].count, 313);
        CHECK_EQ(cnodes[420].count, 156);
        CHECK_EQ(cnodes[326].count, 78);
        CHECK_EQ(cnodes[211].count, 39);
        CHECK_EQ(cnodes[211].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[211].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001");
        CHECK_EQ(cnodes[326].leftSon.value(), 211);
        CHECK(!cnodes[326].binaryCode.has_value());
        CHECK_EQ(cnodes[223].count, 39);
        CHECK_EQ(cnodes[223].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[223].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010001");
        CHECK_EQ(cnodes[326].rightSon.value(), 223);
        CHECK_EQ(cnodes[420].leftSon.value(), 326);
        CHECK(!cnodes[420].binaryCode.has_value());
        CHECK_EQ(cnodes[327].count, 78);
        CHECK_EQ(cnodes[239].count, 39);
        CHECK_EQ(cnodes[239].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[239].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010001");
        CHECK_EQ(cnodes[327].leftSon.value(), 239);
        CHECK(!cnodes[327].binaryCode.has_value());
        CHECK_EQ(cnodes[244].count, 39);
        CHECK_EQ(cnodes[244].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[244].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010001");
        CHECK_EQ(cnodes[327].rightSon.value(), 244);
        CHECK_EQ(cnodes[420].rightSon.value(), 327);
        CHECK_EQ(cnodes[467].leftSon.value(), 420);
        CHECK(!cnodes[467].binaryCode.has_value());
        CHECK_EQ(cnodes[421].count, 157);
        CHECK_EQ(cnodes[328].count, 78);
        CHECK_EQ(cnodes[245].count, 39);
        CHECK_EQ(cnodes[245].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[245].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110001");
        CHECK_EQ(cnodes[328].leftSon.value(), 245);
        CHECK(!cnodes[328].binaryCode.has_value());
        CHECK_EQ(cnodes[253].count, 39);
        CHECK_EQ(cnodes[253].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[253].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110001");
        CHECK_EQ(cnodes[328].rightSon.value(), 253);
        CHECK_EQ(cnodes[421].leftSon.value(), 328);
        CHECK(!cnodes[421].binaryCode.has_value());
        CHECK_EQ(cnodes[329].count, 79);
        CHECK_EQ(cnodes[255].count, 39);
        CHECK_EQ(cnodes[255].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[255].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110001");
        CHECK_EQ(cnodes[329].leftSon.value(), 255);
        CHECK(!cnodes[329].binaryCode.has_value());
        CHECK_EQ(cnodes[17].count, 40);
        CHECK_EQ(cnodes[17].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[17].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110001");
        CHECK_EQ(cnodes[329].rightSon.value(), 17);
        CHECK_EQ(cnodes[421].rightSon.value(), 329);
        CHECK_EQ(cnodes[467].rightSon.value(), 421);
        CHECK_EQ(cnodes[490].rightSon.value(), 467);
        CHECK_EQ(cnodes[502].leftSon.value(), 490);
        CHECK(!cnodes[502].binaryCode.has_value());
        CHECK_EQ(cnodes[491].count, 647);
        CHECK_EQ(cnodes[468].count, 320);
        CHECK_EQ(cnodes[422].count, 160);
        CHECK_EQ(cnodes[330].count, 80);
        CHECK_EQ(cnodes[26].count, 40);
        CHECK_EQ(cnodes[26].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[26].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001");
        CHECK_EQ(cnodes[330].leftSon.value(), 26);
        CHECK(!cnodes[330].binaryCode.has_value());
        CHECK_EQ(cnodes[32].count, 40);
        CHECK_EQ(cnodes[32].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[32].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001001");
        CHECK_EQ(cnodes[330].rightSon.value(), 32);
        CHECK_EQ(cnodes[422].leftSon.value(), 330);
        CHECK(!cnodes[422].binaryCode.has_value());
        CHECK_EQ(cnodes[331].count, 80);
        CHECK_EQ(cnodes[41].count, 40);
        CHECK_EQ(cnodes[41].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[41].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001001");
        CHECK_EQ(cnodes[331].leftSon.value(), 41);
        CHECK(!cnodes[331].binaryCode.has_value());
        CHECK_EQ(cnodes[46].count, 40);
        CHECK_EQ(cnodes[46].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[46].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001001");
        CHECK_EQ(cnodes[331].rightSon.value(), 46);
        CHECK_EQ(cnodes[422].rightSon.value(), 331);
        CHECK_EQ(cnodes[468].leftSon.value(), 422);
        CHECK(!cnodes[468].binaryCode.has_value());
        CHECK_EQ(cnodes[423].count, 160);
        CHECK_EQ(cnodes[332].count, 80);
        CHECK_EQ(cnodes[97].count, 40);
        CHECK_EQ(cnodes[97].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[97].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101001");
        CHECK_EQ(cnodes[332].leftSon.value(), 97);
        CHECK(!cnodes[332].binaryCode.has_value());
        CHECK_EQ(cnodes[113].count, 40);
        CHECK_EQ(cnodes[113].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[113].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101001");
        CHECK_EQ(cnodes[332].rightSon.value(), 113);
        CHECK_EQ(cnodes[423].leftSon.value(), 332);
        CHECK(!cnodes[423].binaryCode.has_value());
        CHECK_EQ(cnodes[333].count, 80);
        CHECK_EQ(cnodes[213].count, 40);
        CHECK_EQ(cnodes[213].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[213].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101001");
        CHECK_EQ(cnodes[333].leftSon.value(), 213);
        CHECK(!cnodes[333].binaryCode.has_value());
        CHECK_EQ(cnodes[241].count, 40);
        CHECK_EQ(cnodes[241].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[241].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101001");
        CHECK_EQ(cnodes[333].rightSon.value(), 241);
        CHECK_EQ(cnodes[423].rightSon.value(), 333);
        CHECK_EQ(cnodes[468].rightSon.value(), 423);
        CHECK_EQ(cnodes[491].leftSon.value(), 468);
        CHECK(!cnodes[491].binaryCode.has_value());
        CHECK_EQ(cnodes[469].count, 327);
        CHECK_EQ(cnodes[424].count, 163);
        CHECK_EQ(cnodes[334].count, 81);
        CHECK_EQ(cnodes[246].count, 40);
        CHECK_EQ(cnodes[246].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[246].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001");
        CHECK_EQ(cnodes[334].leftSon.value(), 246);
        CHECK(!cnodes[334].binaryCode.has_value());
        CHECK_EQ(cnodes[14].count, 41);
        CHECK_EQ(cnodes[14].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[14].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011001");
        CHECK_EQ(cnodes[334].rightSon.value(), 14);
        CHECK_EQ(cnodes[424].leftSon.value(), 334);
        CHECK(!cnodes[424].binaryCode.has_value());
        CHECK_EQ(cnodes[335].count, 82);
        CHECK_EQ(cnodes[27].count, 41);
        CHECK_EQ(cnodes[27].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[27].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011001");
        CHECK_EQ(cnodes[335].leftSon.value(), 27);
        CHECK(!cnodes[335].binaryCode.has_value());
        CHECK_EQ(cnodes[28].count, 41);
        CHECK_EQ(cnodes[28].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[28].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011001");
        CHECK_EQ(cnodes[335].rightSon.value(), 28);
        CHECK_EQ(cnodes[424].rightSon.value(), 335);
        CHECK_EQ(cnodes[469].leftSon.value(), 424);
        CHECK(!cnodes[469].binaryCode.has_value());
        CHECK_EQ(cnodes[425].count, 164);
        CHECK_EQ(cnodes[336].count, 82);
        CHECK_EQ(cnodes[31].count, 41);
        CHECK_EQ(cnodes[31].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[31].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001");
        CHECK_EQ(cnodes[336].leftSon.value(), 31);
        CHECK(!cnodes[336].binaryCode.has_value());
        CHECK_EQ(cnodes[36].count, 41);
        CHECK_EQ(cnodes[36].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[36].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111001");
        CHECK_EQ(cnodes[336].rightSon.value(), 36);
        CHECK_EQ(cnodes[425].leftSon.value(), 336);
        CHECK(!cnodes[425].binaryCode.has_value());
        CHECK_EQ(cnodes[337].count, 82);
        CHECK_EQ(cnodes[43].count, 41);
        CHECK_EQ(cnodes[43].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[43].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111001");
        CHECK_EQ(cnodes[337].leftSon.value(), 43);
        CHECK(!cnodes[337].binaryCode.has_value());
        CHECK_EQ(cnodes[45].count, 41);
        CHECK_EQ(cnodes[45].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[45].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111001");
        CHECK_EQ(cnodes[337].rightSon.value(), 45);
        CHECK_EQ(cnodes[425].rightSon.value(), 337);
        CHECK_EQ(cnodes[469].rightSon.value(), 425);
        CHECK_EQ(cnodes[491].rightSon.value(), 469);
        CHECK_EQ(cnodes[502].rightSon.value(), 491);
        CHECK_EQ(cnodes[508].leftSon.value(), 502);
        CHECK(!cnodes[508].binaryCode.has_value());
        CHECK_EQ(cnodes[503].count, 1338);
        CHECK_EQ(cnodes[492].count, 659);
        CHECK_EQ(cnodes[470].count, 328);
        CHECK_EQ(cnodes[426].count, 164);
        CHECK_EQ(cnodes[338].count, 82);
        CHECK_EQ(cnodes[47].count, 41);
        CHECK_EQ(cnodes[47].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[47].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101");
        CHECK_EQ(cnodes[338].leftSon.value(), 47);
        CHECK(!cnodes[338].binaryCode.has_value());
        CHECK_EQ(cnodes[51].count, 41);
        CHECK_EQ(cnodes[51].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[51].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000101");
        CHECK_EQ(cnodes[338].rightSon.value(), 51);
        CHECK_EQ(cnodes[426].leftSon.value(), 338);
        CHECK(!cnodes[426].binaryCode.has_value());
        CHECK_EQ(cnodes[339].count, 82);
        CHECK_EQ(cnodes[58].count, 41);
        CHECK_EQ(cnodes[58].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[58].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000101");
        CHECK_EQ(cnodes[339].leftSon.value(), 58);
        CHECK(!cnodes[339].binaryCode.has_value());
        CHECK_EQ(cnodes[69].count, 41);
        CHECK_EQ(cnodes[69].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[69].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000101");
        CHECK_EQ(cnodes[339].rightSon.value(), 69);
        CHECK_EQ(cnodes[426].rightSon.value(), 339);
        CHECK_EQ(cnodes[470].leftSon.value(), 426);
        CHECK(!cnodes[470].binaryCode.has_value());
        CHECK_EQ(cnodes[427].count, 164);
        CHECK_EQ(cnodes[340].count, 82);
        CHECK_EQ(cnodes[72].count, 41);
        CHECK_EQ(cnodes[72].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[72].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101");
        CHECK_EQ(cnodes[340].leftSon.value(), 72);
        CHECK(!cnodes[340].binaryCode.has_value());
        CHECK_EQ(cnodes[109].count, 41);
        CHECK_EQ(cnodes[109].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[109].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100101");
        CHECK_EQ(cnodes[340].rightSon.value(), 109);
        CHECK_EQ(cnodes[427].leftSon.value(), 340);
        CHECK(!cnodes[427].binaryCode.has_value());
        CHECK_EQ(cnodes[341].count, 82);
        CHECK_EQ(cnodes[125].count, 41);
        CHECK_EQ(cnodes[125].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[125].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100101");
        CHECK_EQ(cnodes[341].leftSon.value(), 125);
        CHECK(!cnodes[341].binaryCode.has_value());
        CHECK_EQ(cnodes[167].count, 41);
        CHECK_EQ(cnodes[167].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[167].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100101");
        CHECK_EQ(cnodes[341].rightSon.value(), 167);
        CHECK_EQ(cnodes[427].rightSon.value(), 341);
        CHECK_EQ(cnodes[470].rightSon.value(), 427);
        CHECK_EQ(cnodes[492].leftSon.value(), 470);
        CHECK(!cnodes[492].binaryCode.has_value());
        CHECK_EQ(cnodes[471].count, 331);
        CHECK_EQ(cnodes[428].count, 164);
        CHECK_EQ(cnodes[342].count, 82);
        CHECK_EQ(cnodes[190].count, 41);
        CHECK_EQ(cnodes[190].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[190].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101");
        CHECK_EQ(cnodes[342].leftSon.value(), 190);
        CHECK(!cnodes[342].binaryCode.has_value());
        CHECK_EQ(cnodes[199].count, 41);
        CHECK_EQ(cnodes[199].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[199].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010101");
        CHECK_EQ(cnodes[342].rightSon.value(), 199);
        CHECK_EQ(cnodes[428].leftSon.value(), 342);
        CHECK(!cnodes[428].binaryCode.has_value());
        CHECK_EQ(cnodes[343].count, 82);
        CHECK_EQ(cnodes[220].count, 41);
        CHECK_EQ(cnodes[220].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[220].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101");
        CHECK_EQ(cnodes[343].leftSon.value(), 220);
        CHECK(!cnodes[343].binaryCode.has_value());
        CHECK_EQ(cnodes[236].count, 41);
        CHECK_EQ(cnodes[236].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[236].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010101");
        CHECK_EQ(cnodes[343].rightSon.value(), 236);
        CHECK_EQ(cnodes[428].rightSon.value(), 343);
        CHECK_EQ(cnodes[471].leftSon.value(), 428);
        CHECK(!cnodes[471].binaryCode.has_value());
        CHECK_EQ(cnodes[429].count, 167);
        CHECK_EQ(cnodes[344].count, 83);
        CHECK_EQ(cnodes[237].count, 41);
        CHECK_EQ(cnodes[237].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[237].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110101");
        CHECK_EQ(cnodes[344].leftSon.value(), 237);
        CHECK(!cnodes[344].binaryCode.has_value());
        CHECK_EQ(cnodes[12].count, 42);
        CHECK_EQ(cnodes[12].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[12].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110101");
        CHECK_EQ(cnodes[344].rightSon.value(), 12);
        CHECK_EQ(cnodes[429].leftSon.value(), 344);
        CHECK(!cnodes[429].binaryCode.has_value());
        CHECK_EQ(cnodes[345].count, 84);
        CHECK_EQ(cnodes[53].count, 42);
        CHECK_EQ(cnodes[53].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[53].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110101");
        CHECK_EQ(cnodes[345].leftSon.value(), 53);
        CHECK(!cnodes[345].binaryCode.has_value());
        CHECK_EQ(cnodes[61].count, 42);
        CHECK_EQ(cnodes[61].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[61].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110101");
        CHECK_EQ(cnodes[345].rightSon.value(), 61);
        CHECK_EQ(cnodes[429].rightSon.value(), 345);
        CHECK_EQ(cnodes[471].rightSon.value(), 429);
        CHECK_EQ(cnodes[492].rightSon.value(), 471);
        CHECK_EQ(cnodes[503].leftSon.value(), 492);
        CHECK(!cnodes[503].binaryCode.has_value());
        CHECK_EQ(cnodes[493].count, 679);
        CHECK_EQ(cnodes[472].count, 336);
        CHECK_EQ(cnodes[430].count, 168);
        CHECK_EQ(cnodes[346].count, 84);
        CHECK_EQ(cnodes[63].count, 42);
        CHECK_EQ(cnodes[63].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[63].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101");
        CHECK_EQ(cnodes[346].leftSon.value(), 63);
        CHECK(!cnodes[346].binaryCode.has_value());
        CHECK_EQ(cnodes[71].count, 42);
        CHECK_EQ(cnodes[71].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[71].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001101");
        CHECK_EQ(cnodes[346].rightSon.value(), 71);
        CHECK_EQ(cnodes[430].leftSon.value(), 346);
        CHECK(!cnodes[430].binaryCode.has_value());
        CHECK_EQ(cnodes[347].count, 84);
        CHECK_EQ(cnodes[95].count, 42);
        CHECK_EQ(cnodes[95].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[95].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001101");
        CHECK_EQ(cnodes[347].leftSon.value(), 95);
        CHECK(!cnodes[347].binaryCode.has_value());
        CHECK_EQ(cnodes[161].count, 42);
        CHECK_EQ(cnodes[161].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[161].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001101");
        CHECK_EQ(cnodes[347].rightSon.value(), 161);
        CHECK_EQ(cnodes[430].rightSon.value(), 347);
        CHECK_EQ(cnodes[472].leftSon.value(), 430);
        CHECK(!cnodes[472].binaryCode.has_value());
        CHECK_EQ(cnodes[431].count, 168);
        CHECK_EQ(cnodes[348].count, 84);
        CHECK_EQ(cnodes[193].count, 42);
        CHECK_EQ(cnodes[193].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[193].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101101");
        CHECK_EQ(cnodes[348].leftSon.value(), 193);
        CHECK(!cnodes[348].binaryCode.has_value());
        CHECK_EQ(cnodes[197].count, 42);
        CHECK_EQ(cnodes[197].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[197].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101101");
        CHECK_EQ(cnodes[348].rightSon.value(), 197);
        CHECK_EQ(cnodes[431].leftSon.value(), 348);
        CHECK(!cnodes[431].binaryCode.has_value());
        CHECK_EQ(cnodes[349].count, 84);
        CHECK_EQ(cnodes[203].count, 42);
        CHECK_EQ(cnodes[203].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[203].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101101");
        CHECK_EQ(cnodes[349].leftSon.value(), 203);
        CHECK(!cnodes[349].binaryCode.has_value());
        CHECK_EQ(cnodes[208].count, 42);
        CHECK_EQ(cnodes[208].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[208].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101101");
        CHECK_EQ(cnodes[349].rightSon.value(), 208);
        CHECK_EQ(cnodes[431].rightSon.value(), 349);
        CHECK_EQ(cnodes[472].rightSon.value(), 431);
        CHECK_EQ(cnodes[493].leftSon.value(), 472);
        CHECK(!cnodes[493].binaryCode.has_value());
        CHECK_EQ(cnodes[473].count, 343);
        CHECK_EQ(cnodes[432].count, 171);
        CHECK_EQ(cnodes[350].count, 85);
        CHECK_EQ(cnodes[234].count, 42);
        CHECK_EQ(cnodes[234].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[234].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101");
        CHECK_EQ(cnodes[350].leftSon.value(), 234);
        CHECK(!cnodes[350].binaryCode.has_value());
        CHECK_EQ(cnodes[38].count, 43);
        CHECK_EQ(cnodes[38].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[38].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011101");
        CHECK_EQ(cnodes[350].rightSon.value(), 38);
        CHECK_EQ(cnodes[432].leftSon.value(), 350);
        CHECK(!cnodes[432].binaryCode.has_value());
        CHECK_EQ(cnodes[351].count, 86);
        CHECK_EQ(cnodes[60].count, 43);
        CHECK_EQ(cnodes[60].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[60].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011101");
        CHECK_EQ(cnodes[351].leftSon.value(), 60);
        CHECK(!cnodes[351].binaryCode.has_value());
        CHECK_EQ(cnodes[62].count, 43);
        CHECK_EQ(cnodes[62].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[62].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011101");
        CHECK_EQ(cnodes[351].rightSon.value(), 62);
        CHECK_EQ(cnodes[432].rightSon.value(), 351);
        CHECK_EQ(cnodes[473].leftSon.value(), 432);
        CHECK(!cnodes[473].binaryCode.has_value());
        CHECK_EQ(cnodes[433].count, 172);
        CHECK_EQ(cnodes[352].count, 86);
        CHECK_EQ(cnodes[65].count, 43);
        CHECK_EQ(cnodes[65].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[65].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111101");
        CHECK_EQ(cnodes[352].leftSon.value(), 65);
        CHECK(!cnodes[352].binaryCode.has_value());
        CHECK_EQ(cnodes[68].count, 43);
        CHECK_EQ(cnodes[68].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[68].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111101");
        CHECK_EQ(cnodes[352].rightSon.value(), 68);
        CHECK_EQ(cnodes[433].leftSon.value(), 352);
        CHECK(!cnodes[433].binaryCode.has_value());
        CHECK_EQ(cnodes[353].count, 86);
        CHECK_EQ(cnodes[86].count, 43);
        CHECK_EQ(cnodes[86].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[86].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111101");
        CHECK_EQ(cnodes[353].leftSon.value(), 86);
        CHECK(!cnodes[353].binaryCode.has_value());
        CHECK_EQ(cnodes[112].count, 43);
        CHECK_EQ(cnodes[112].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[112].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111101");
        CHECK_EQ(cnodes[353].rightSon.value(), 112);
        CHECK_EQ(cnodes[433].rightSon.value(), 353);
        CHECK_EQ(cnodes[473].rightSon.value(), 433);
        CHECK_EQ(cnodes[493].rightSon.value(), 473);
        CHECK_EQ(cnodes[503].rightSon.value(), 493);
        CHECK_EQ(cnodes[508].rightSon.value(), 503);
        CHECK_EQ(cnodes[511].leftSon.value(), 508);
        CHECK(!cnodes[511].binaryCode.has_value());
        CHECK_EQ(cnodes[509].count, 2994);
        CHECK_EQ(cnodes[504].count, 1427);
        CHECK_EQ(cnodes[494].count, 700);
        CHECK_EQ(cnodes[474].count, 348);
        CHECK_EQ(cnodes[434].count, 172);
        CHECK_EQ(cnodes[354].count, 86);
        CHECK_EQ(cnodes[135].count, 43);
        CHECK_EQ(cnodes[135].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[135].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011");
        CHECK_EQ(cnodes[354].leftSon.value(), 135);
        CHECK(!cnodes[354].binaryCode.has_value());
        CHECK_EQ(cnodes[144].count, 43);
        CHECK_EQ(cnodes[144].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[144].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000011");
        CHECK_EQ(cnodes[354].rightSon.value(), 144);
        CHECK_EQ(cnodes[434].leftSon.value(), 354);
        CHECK(!cnodes[434].binaryCode.has_value());
        CHECK_EQ(cnodes[355].count, 86);
        CHECK_EQ(cnodes[149].count, 43);
        CHECK_EQ(cnodes[149].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[149].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011");
        CHECK_EQ(cnodes[355].leftSon.value(), 149);
        CHECK(!cnodes[355].binaryCode.has_value());
        CHECK_EQ(cnodes[184].count, 43);
        CHECK_EQ(cnodes[184].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[184].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000011");
        CHECK_EQ(cnodes[355].rightSon.value(), 184);
        CHECK_EQ(cnodes[434].rightSon.value(), 355);
        CHECK_EQ(cnodes[474].leftSon.value(), 434);
        CHECK(!cnodes[474].binaryCode.has_value());
        CHECK_EQ(cnodes[435].count, 176);
        CHECK_EQ(cnodes[356].count, 88);
        CHECK_EQ(cnodes[5].count, 44);
        CHECK_EQ(cnodes[5].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[5].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100011");
        CHECK_EQ(cnodes[356].leftSon.value(), 5);
        CHECK(!cnodes[356].binaryCode.has_value());
        CHECK_EQ(cnodes[8].count, 44);
        CHECK_EQ(cnodes[8].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[8].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100011");
        CHECK_EQ(cnodes[356].rightSon.value(), 8);
        CHECK_EQ(cnodes[435].leftSon.value(), 356);
        CHECK(!cnodes[435].binaryCode.has_value());
        CHECK_EQ(cnodes[357].count, 88);
        CHECK_EQ(cnodes[10].count, 44);
        CHECK_EQ(cnodes[10].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[10].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100011");
        CHECK_EQ(cnodes[357].leftSon.value(), 10);
        CHECK(!cnodes[357].binaryCode.has_value());
        CHECK_EQ(cnodes[83].count, 44);
        CHECK_EQ(cnodes[83].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[83].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100011");
        CHECK_EQ(cnodes[357].rightSon.value(), 83);
        CHECK_EQ(cnodes[435].rightSon.value(), 357);
        CHECK_EQ(cnodes[474].rightSon.value(), 435);
        CHECK_EQ(cnodes[494].leftSon.value(), 474);
        CHECK(!cnodes[494].binaryCode.has_value());
        CHECK_EQ(cnodes[475].count, 352);
        CHECK_EQ(cnodes[436].count, 176);
        CHECK_EQ(cnodes[358].count, 88);
        CHECK_EQ(cnodes[106].count, 44);
        CHECK_EQ(cnodes[106].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[106].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011");
        CHECK_EQ(cnodes[358].leftSon.value(), 106);
        CHECK(!cnodes[358].binaryCode.has_value());
        CHECK_EQ(cnodes[116].count, 44);
        CHECK_EQ(cnodes[116].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[116].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010011");
        CHECK_EQ(cnodes[358].rightSon.value(), 116);
        CHECK_EQ(cnodes[436].leftSon.value(), 358);
        CHECK(!cnodes[436].binaryCode.has_value());
        CHECK_EQ(cnodes[359].count, 88);
        CHECK_EQ(cnodes[130].count, 44);
        CHECK_EQ(cnodes[130].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[130].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010011");
        CHECK_EQ(cnodes[359].leftSon.value(), 130);
        CHECK(!cnodes[359].binaryCode.has_value());
        CHECK_EQ(cnodes[134].count, 44);
        CHECK_EQ(cnodes[134].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[134].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010011");
        CHECK_EQ(cnodes[359].rightSon.value(), 134);
        CHECK_EQ(cnodes[436].rightSon.value(), 359);
        CHECK_EQ(cnodes[475].leftSon.value(), 436);
        CHECK(!cnodes[475].binaryCode.has_value());
        CHECK_EQ(cnodes[437].count, 176);
        CHECK_EQ(cnodes[360].count, 88);
        CHECK_EQ(cnodes[186].count, 44);
        CHECK_EQ(cnodes[186].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[186].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110011");
        CHECK_EQ(cnodes[360].leftSon.value(), 186);
        CHECK(!cnodes[360].binaryCode.has_value());
        CHECK_EQ(cnodes[198].count, 44);
        CHECK_EQ(cnodes[198].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[198].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110011");
        CHECK_EQ(cnodes[360].rightSon.value(), 198);
        CHECK_EQ(cnodes[437].leftSon.value(), 360);
        CHECK(!cnodes[437].binaryCode.has_value());
        CHECK_EQ(cnodes[361].count, 88);
        CHECK_EQ(cnodes[202].count, 44);
        CHECK_EQ(cnodes[202].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[202].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110011");
        CHECK_EQ(cnodes[361].leftSon.value(), 202);
        CHECK(!cnodes[361].binaryCode.has_value());
        CHECK_EQ(cnodes[229].count, 44);
        CHECK_EQ(cnodes[229].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[229].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110011");
        CHECK_EQ(cnodes[361].rightSon.value(), 229);
        CHECK_EQ(cnodes[437].rightSon.value(), 361);
        CHECK_EQ(cnodes[475].rightSon.value(), 437);
        CHECK_EQ(cnodes[494].rightSon.value(), 475);
        CHECK_EQ(cnodes[504].leftSon.value(), 494);
        CHECK(!cnodes[504].binaryCode.has_value());
        CHECK_EQ(cnodes[495].count, 727);
        CHECK_EQ(cnodes[476].count, 360);
        CHECK_EQ(cnodes[438].count, 180);
        CHECK_EQ(cnodes[362].count, 90);
        CHECK_EQ(cnodes[25].count, 45);
        CHECK_EQ(cnodes[25].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[25].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011");
        CHECK_EQ(cnodes[362].leftSon.value(), 25);
        CHECK(!cnodes[362].binaryCode.has_value());
        CHECK_EQ(cnodes[29].count, 45);
        CHECK_EQ(cnodes[29].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[29].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001011");
        CHECK_EQ(cnodes[362].rightSon.value(), 29);
        CHECK_EQ(cnodes[438].leftSon.value(), 362);
        CHECK(!cnodes[438].binaryCode.has_value());
        CHECK_EQ(cnodes[363].count, 90);
        CHECK_EQ(cnodes[104].count, 45);
        CHECK_EQ(cnodes[104].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[104].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001011");
        CHECK_EQ(cnodes[363].leftSon.value(), 104);
        CHECK(!cnodes[363].binaryCode.has_value());
        CHECK_EQ(cnodes[118].count, 45);
        CHECK_EQ(cnodes[118].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[118].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001011");
        CHECK_EQ(cnodes[363].rightSon.value(), 118);
        CHECK_EQ(cnodes[438].rightSon.value(), 363);
        CHECK_EQ(cnodes[476].leftSon.value(), 438);
        CHECK(!cnodes[476].binaryCode.has_value());
        CHECK_EQ(cnodes[439].count, 180);
        CHECK_EQ(cnodes[364].count, 90);
        CHECK_EQ(cnodes[155].count, 45);
        CHECK_EQ(cnodes[155].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[155].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011");
        CHECK_EQ(cnodes[364].leftSon.value(), 155);
        CHECK(!cnodes[364].binaryCode.has_value());
        CHECK_EQ(cnodes[173].count, 45);
        CHECK_EQ(cnodes[173].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[173].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101011");
        CHECK_EQ(cnodes[364].rightSon.value(), 173);
        CHECK_EQ(cnodes[439].leftSon.value(), 364);
        CHECK(!cnodes[439].binaryCode.has_value());
        CHECK_EQ(cnodes[365].count, 90);
        CHECK_EQ(cnodes[188].count, 45);
        CHECK_EQ(cnodes[188].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[188].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101011");
        CHECK_EQ(cnodes[365].leftSon.value(), 188);
        CHECK(!cnodes[365].binaryCode.has_value());
        CHECK_EQ(cnodes[207].count, 45);
        CHECK_EQ(cnodes[207].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[207].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101011");
        CHECK_EQ(cnodes[365].rightSon.value(), 207);
        CHECK_EQ(cnodes[439].rightSon.value(), 365);
        CHECK_EQ(cnodes[476].rightSon.value(), 439);
        CHECK_EQ(cnodes[495].leftSon.value(), 476);
        CHECK(!cnodes[495].binaryCode.has_value());
        CHECK_EQ(cnodes[477].count, 367);
        CHECK_EQ(cnodes[440].count, 183);
        CHECK_EQ(cnodes[366].count, 91);
        CHECK_EQ(cnodes[232].count, 45);
        CHECK_EQ(cnodes[232].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[232].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011");
        CHECK_EQ(cnodes[366].leftSon.value(), 232);
        CHECK(!cnodes[366].binaryCode.has_value());
        CHECK_EQ(cnodes[11].count, 46);
        CHECK_EQ(cnodes[11].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[11].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011011");
        CHECK_EQ(cnodes[366].rightSon.value(), 11);
        CHECK_EQ(cnodes[440].leftSon.value(), 366);
        CHECK(!cnodes[440].binaryCode.has_value());
        CHECK_EQ(cnodes[367].count, 92);
        CHECK_EQ(cnodes[57].count, 46);
        CHECK_EQ(cnodes[57].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[57].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011011");
        CHECK_EQ(cnodes[367].leftSon.value(), 57);
        CHECK(!cnodes[367].binaryCode.has_value());
        CHECK_EQ(cnodes[82].count, 46);
        CHECK_EQ(cnodes[82].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[82].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011011");
        CHECK_EQ(cnodes[367].rightSon.value(), 82);
        CHECK_EQ(cnodes[440].rightSon.value(), 367);
        CHECK_EQ(cnodes[477].leftSon.value(), 440);
        CHECK(!cnodes[477].binaryCode.has_value());
        CHECK_EQ(cnodes[441].count, 184);
        CHECK_EQ(cnodes[368].count, 92);
        CHECK_EQ(cnodes[98].count, 46);
        CHECK_EQ(cnodes[98].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[98].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111011");
        CHECK_EQ(cnodes[368].leftSon.value(), 98);
        CHECK(!cnodes[368].binaryCode.has_value());
        CHECK_EQ(cnodes[105].count, 46);
        CHECK_EQ(cnodes[105].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[105].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111011");
        CHECK_EQ(cnodes[368].rightSon.value(), 105);
        CHECK_EQ(cnodes[441].leftSon.value(), 368);
        CHECK(!cnodes[441].binaryCode.has_value());
        CHECK_EQ(cnodes[369].count, 92);
        CHECK_EQ(cnodes[230].count, 46);
        CHECK_EQ(cnodes[230].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[230].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111011");
        CHECK_EQ(cnodes[369].leftSon.value(), 230);
        CHECK(!cnodes[369].binaryCode.has_value());
        CHECK_EQ(cnodes[247].count, 46);
        CHECK_EQ(cnodes[247].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[247].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111011");
        CHECK_EQ(cnodes[369].rightSon.value(), 247);
        CHECK_EQ(cnodes[441].rightSon.value(), 369);
        CHECK_EQ(cnodes[477].rightSon.value(), 441);
        CHECK_EQ(cnodes[495].rightSon.value(), 477);
        CHECK_EQ(cnodes[504].rightSon.value(), 495);
        CHECK_EQ(cnodes[509].leftSon.value(), 504);
        CHECK(!cnodes[509].binaryCode.has_value());
        CHECK_EQ(cnodes[505].count, 1567);
        CHECK_EQ(cnodes[496].count, 759);
        CHECK_EQ(cnodes[478].count, 376);
        CHECK_EQ(cnodes[442].count, 188);
        CHECK_EQ(cnodes[370].count, 94);
        CHECK_EQ(cnodes[84].count, 47);
        CHECK_EQ(cnodes[84].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[84].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111");
        CHECK_EQ(cnodes[370].leftSon.value(), 84);
        CHECK(!cnodes[370].binaryCode.has_value());
        CHECK_EQ(cnodes[101].count, 47);
        CHECK_EQ(cnodes[101].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[101].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000111");
        CHECK_EQ(cnodes[370].rightSon.value(), 101);
        CHECK_EQ(cnodes[442].leftSon.value(), 370);
        CHECK(!cnodes[442].binaryCode.has_value());
        CHECK_EQ(cnodes[371].count, 94);
        CHECK_EQ(cnodes[127].count, 47);
        CHECK_EQ(cnodes[127].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[127].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000111");
        CHECK_EQ(cnodes[371].leftSon.value(), 127);
        CHECK(!cnodes[371].binaryCode.has_value());
        CHECK_EQ(cnodes[140].count, 47);
        CHECK_EQ(cnodes[140].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[140].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000111");
        CHECK_EQ(cnodes[371].rightSon.value(), 140);
        CHECK_EQ(cnodes[442].rightSon.value(), 371);
        CHECK_EQ(cnodes[478].leftSon.value(), 442);
        CHECK(!cnodes[478].binaryCode.has_value());
        CHECK_EQ(cnodes[443].count, 188);
        CHECK_EQ(cnodes[372].count, 94);
        CHECK_EQ(cnodes[164].count, 47);
        CHECK_EQ(cnodes[164].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[164].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100111");
        CHECK_EQ(cnodes[372].leftSon.value(), 164);
        CHECK(!cnodes[372].binaryCode.has_value());
        CHECK_EQ(cnodes[180].count, 47);
        CHECK_EQ(cnodes[180].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[180].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100111");
        CHECK_EQ(cnodes[372].rightSon.value(), 180);
        CHECK_EQ(cnodes[443].leftSon.value(), 372);
        CHECK(!cnodes[443].binaryCode.has_value());
        CHECK_EQ(cnodes[373].count, 94);
        CHECK_EQ(cnodes[215].count, 47);
        CHECK_EQ(cnodes[215].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[215].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100111");
        CHECK_EQ(cnodes[373].leftSon.value(), 215);
        CHECK(!cnodes[373].binaryCode.has_value());
        CHECK_EQ(cnodes[217].count, 47);
        CHECK_EQ(cnodes[217].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[217].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100111");
        CHECK_EQ(cnodes[373].rightSon.value(), 217);
        CHECK_EQ(cnodes[443].rightSon.value(), 373);
        CHECK_EQ(cnodes[478].rightSon.value(), 443);
        CHECK_EQ(cnodes[496].leftSon.value(), 478);
        CHECK(!cnodes[496].binaryCode.has_value());
        CHECK_EQ(cnodes[479].count, 383);
        CHECK_EQ(cnodes[444].count, 191);
        CHECK_EQ(cnodes[374].count, 95);
        CHECK_EQ(cnodes[228].count, 47);
        CHECK_EQ(cnodes[228].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[228].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111");
        CHECK_EQ(cnodes[374].leftSon.value(), 228);
        CHECK(!cnodes[374].binaryCode.has_value());
        CHECK_EQ(cnodes[2].count, 48);
        CHECK_EQ(cnodes[2].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[2].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010111");
        CHECK_EQ(cnodes[374].rightSon.value(), 2);
        CHECK_EQ(cnodes[444].leftSon.value(), 374);
        CHECK(!cnodes[444].binaryCode.has_value());
        CHECK_EQ(cnodes[375].count, 96);
        CHECK_EQ(cnodes[48].count, 48);
        CHECK_EQ(cnodes[48].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[48].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010111");
        CHECK_EQ(cnodes[375].leftSon.value(), 48);
        CHECK(!cnodes[375].binaryCode.has_value());
        CHECK_EQ(cnodes[85].count, 48);
        CHECK_EQ(cnodes[85].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[85].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010111");
        CHECK_EQ(cnodes[375].rightSon.value(), 85);
        CHECK_EQ(cnodes[444].rightSon.value(), 375);
        CHECK_EQ(cnodes[479].leftSon.value(), 444);
        CHECK(!cnodes[479].binaryCode.has_value());
        CHECK_EQ(cnodes[445].count, 192);
        CHECK_EQ(cnodes[376].count, 96);
        CHECK_EQ(cnodes[92].count, 48);
        CHECK_EQ(cnodes[92].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[92].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111");
        CHECK_EQ(cnodes[376].leftSon.value(), 92);
        CHECK(!cnodes[376].binaryCode.has_value());
        CHECK_EQ(cnodes[96].count, 48);
        CHECK_EQ(cnodes[96].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[96].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110111");
        CHECK_EQ(cnodes[376].rightSon.value(), 96);
        CHECK_EQ(cnodes[445].leftSon.value(), 376);
        CHECK(!cnodes[445].binaryCode.has_value());
        CHECK_EQ(cnodes[377].count, 96);
        CHECK_EQ(cnodes[115].count, 48);
        CHECK_EQ(cnodes[115].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[115].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110111");
        CHECK_EQ(cnodes[377].leftSon.value(), 115);
        CHECK(!cnodes[377].binaryCode.has_value());
        CHECK_EQ(cnodes[219].count, 48);
        CHECK_EQ(cnodes[219].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[219].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110111");
        CHECK_EQ(cnodes[377].rightSon.value(), 219);
        CHECK_EQ(cnodes[445].rightSon.value(), 377);
        CHECK_EQ(cnodes[479].rightSon.value(), 445);
        CHECK_EQ(cnodes[496].rightSon.value(), 479);
        CHECK_EQ(cnodes[505].leftSon.value(), 496);
        CHECK(!cnodes[505].binaryCode.has_value());
        CHECK_EQ(cnodes[497].count, 808);
        CHECK_EQ(cnodes[480].count, 392);
        CHECK_EQ(cnodes[446].count, 195);
        CHECK_EQ(cnodes[378].count, 97);
        CHECK_EQ(cnodes[233].count, 48);
        CHECK_EQ(cnodes[233].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[233].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111");
        CHECK_EQ(cnodes[378].leftSon.value(), 233);
        CHECK(!cnodes[378].binaryCode.has_value());
        CHECK_EQ(cnodes[4].count, 49);
        CHECK_EQ(cnodes[4].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[4].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001111");
        CHECK_EQ(cnodes[378].rightSon.value(), 4);
        CHECK_EQ(cnodes[446].leftSon.value(), 378);
        CHECK(!cnodes[446].binaryCode.has_value());
        CHECK_EQ(cnodes[379].count, 98);
        CHECK_EQ(cnodes[81].count, 49);
        CHECK_EQ(cnodes[81].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[81].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001111");
        CHECK_EQ(cnodes[379].leftSon.value(), 81);
        CHECK(!cnodes[379].binaryCode.has_value());
        CHECK_EQ(cnodes[158].count, 49);
        CHECK_EQ(cnodes[158].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[158].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001111");
        CHECK_EQ(cnodes[379].rightSon.value(), 158);
        CHECK_EQ(cnodes[446].rightSon.value(), 379);
        CHECK_EQ(cnodes[480].leftSon.value(), 446);
        CHECK(!cnodes[480].binaryCode.has_value());
        CHECK_EQ(cnodes[447].count, 197);
        CHECK_EQ(cnodes[380].count, 98);
        CHECK_EQ(cnodes[178].count, 49);
        CHECK_EQ(cnodes[178].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[178].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111");
        CHECK_EQ(cnodes[380].leftSon.value(), 178);
        CHECK(!cnodes[380].binaryCode.has_value());
        CHECK_EQ(cnodes[251].count, 49);
        CHECK_EQ(cnodes[251].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[251].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101111");
        CHECK_EQ(cnodes[380].rightSon.value(), 251);
        CHECK_EQ(cnodes[447].leftSon.value(), 380);
        CHECK(!cnodes[447].binaryCode.has_value());
        CHECK_EQ(cnodes[381].count, 99);
        CHECK_EQ(cnodes[254].count, 49);
        CHECK_EQ(cnodes[254].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[254].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101111");
        CHECK_EQ(cnodes[381].leftSon.value(), 254);
        CHECK(!cnodes[381].binaryCode.has_value());
        CHECK_EQ(cnodes[145].count, 50);
        CHECK_EQ(cnodes[145].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[145].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101111");
        CHECK_EQ(cnodes[381].rightSon.value(), 145);
        CHECK_EQ(cnodes[447].rightSon.value(), 381);
        CHECK_EQ(cnodes[480].rightSon.value(), 447);
        CHECK_EQ(cnodes[497].leftSon.value(), 480);
        CHECK(!cnodes[497].binaryCode.has_value());
        CHECK_EQ(cnodes[481].count, 416);
        CHECK_EQ(cnodes[448].count, 204);
        CHECK_EQ(cnodes[382].count, 101);
        CHECK_EQ(cnodes[195].count, 50);
        CHECK_EQ(cnodes[195].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[195].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111");
        CHECK_EQ(cnodes[382].leftSon.value(), 195);
        CHECK(!cnodes[382].binaryCode.has_value());
        CHECK_EQ(cnodes[162].count, 51);
        CHECK_EQ(cnodes[162].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[162].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011111");
        CHECK_EQ(cnodes[382].rightSon.value(), 162);
        CHECK_EQ(cnodes[448].leftSon.value(), 382);
        CHECK(!cnodes[448].binaryCode.has_value());
        CHECK_EQ(cnodes[383].count, 103);
        CHECK_EQ(cnodes[258].count, 51);
        CHECK_EQ(cnodes[257].count, 25);
        CHECK_EQ(cnodes[256].count, 1);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 10);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011111");
        CHECK_EQ(cnodes[257].leftSon.value(), 256);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[13].count, 24);
        CHECK_EQ(cnodes[13].binaryCode.value().second, 10);
        CHECK_EQ(cnodes[13].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001011111");
        CHECK_EQ(cnodes[257].rightSon.value(), 13);
        CHECK_EQ(cnodes[258].leftSon.value(), 257);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[156].count, 26);
        CHECK_EQ(cnodes[156].binaryCode.value().second, 9);
        CHECK_EQ(cnodes[156].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011111");
        CHECK_EQ(cnodes[258].rightSon.value(), 156);
        CHECK_EQ(cnodes[383].leftSon.value(), 258);
        CHECK(!cnodes[383].binaryCode.has_value());
        CHECK_EQ(cnodes[150].count, 52);
        CHECK_EQ(cnodes[150].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[150].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011111");
        CHECK_EQ(cnodes[383].rightSon.value(), 150);
        CHECK_EQ(cnodes[448].rightSon.value(), 383);
        CHECK_EQ(cnodes[481].leftSon.value(), 448);
        CHECK(!cnodes[481].binaryCode.has_value());
        CHECK_EQ(cnodes[449].count, 212);
        CHECK_EQ(cnodes[384].count, 105);
        CHECK_EQ(cnodes[185].count, 52);
        CHECK_EQ(cnodes[185].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[185].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111");
        CHECK_EQ(cnodes[384].leftSon.value(), 185);
        CHECK(!cnodes[384].binaryCode.has_value());
        CHECK_EQ(cnodes[139].count, 53);
        CHECK_EQ(cnodes[139].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[139].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111111");
        CHECK_EQ(cnodes[384].rightSon.value(), 139);
        CHECK_EQ(cnodes[449].leftSon.value(), 384);
        CHECK(!cnodes[449].binaryCode.has_value());
        CHECK_EQ(cnodes[385].count, 107);
        CHECK_EQ(cnodes[206].count, 53);
        CHECK_EQ(cnodes[206].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[206].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111");
        CHECK_EQ(cnodes[385].leftSon.value(), 206);
        CHECK(!cnodes[385].binaryCode.has_value());
        CHECK_EQ(cnodes[1].count, 54);
        CHECK_EQ(cnodes[1].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[1].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111");
        CHECK_EQ(cnodes[385].rightSon.value(), 1);
        CHECK_EQ(cnodes[449].rightSon.value(), 385);
        CHECK_EQ(cnodes[481].rightSon.value(), 449);
        CHECK_EQ(cnodes[497].rightSon.value(), 481);
        CHECK_EQ(cnodes[505].rightSon.value(), 497);
        CHECK_EQ(cnodes[509].rightSon.value(), 505);
        CHECK_EQ(cnodes[511].rightSon.value(), 509);
        CHECK_EQ(cnodes[512].rightSon.value(), 511);
    }
}

TEST_CASE("HuffmanTree.buildTreeBackward() 256 chars") {
    REQUIRE(MAX_LETTER_COUNT == 256 + 1);
    HuffmanTree ht;
    auto onodes = ht.getNodes();  // original
    REQUIRE(onodes.size() == 257);
    SUBCASE("empty") {
        ht.setNode(
            0,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},
                                 1}});
        ht.setNode(
            256,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
                                 1}});
        ht.buildTreeBackward();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        REQUIRE_EQ(cnodes.size(), 258);
        CHECK_EQ(root, 257);
        CHECK_EQ(cnodes[257].count, 0);
        CHECK_EQ(cnodes[0].count, 0);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 1);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[257].leftSon.value(), 0);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[256].count, 0);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 1);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[257].rightSon.value(), 256);
        for (size_t i = 0; i < cnodes.size(); ++i)
            if (i != 0 && i != 256 && i != 257) {
                CHECK(!cnodes[i].leftSon.has_value());
                CHECK(!cnodes[i].rightSon.has_value());
                CHECK_EQ(cnodes[i].count, 0);
            }
    }

    SUBCASE("high codes") {
        ht.setNode(
            0,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010"},
                                 6}});
        ht.setNode(
            10,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010"},
                                 6}});
        ht.setNode(
            49,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010"},
                                 4}});
        ht.setNode(
            50,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110"},
                                 3}});
        ht.setNode(
            51,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},
                                 2}});
        ht.setNode(
            52,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
                                 2}});
        ht.setNode(
            53,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011"},
                                 2}});
        ht.setNode(
            256,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"},
                                 5}});
        ht.buildTreeBackward();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 257);
        REQUIRE_EQ(cnodes.size(), 264);
        CHECK_EQ(cnodes[257].count, 0);
        CHECK_EQ(cnodes[258].count, 0);
        CHECK_EQ(cnodes[51].count, 0);
        CHECK_EQ(cnodes[51].binaryCode.value().second, 2);
        CHECK_EQ(cnodes[51].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[258].leftSon.value(), 51);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[259].count, 0);
        CHECK_EQ(cnodes[260].count, 0);
        CHECK_EQ(cnodes[261].count, 0);
        CHECK_EQ(cnodes[256].count, 0);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 5);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010");
        CHECK_EQ(cnodes[261].leftSon.value(), 256);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[262].count, 0);
        CHECK_EQ(cnodes[0].count, 0);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010");
        CHECK_EQ(cnodes[262].leftSon.value(), 0);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[10].count, 0);
        CHECK_EQ(cnodes[10].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[10].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010");
        CHECK_EQ(cnodes[262].rightSon.value(), 10);
        CHECK_EQ(cnodes[261].rightSon.value(), 262);
        CHECK_EQ(cnodes[260].leftSon.value(), 261);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[49].count, 0);
        CHECK_EQ(cnodes[49].binaryCode.value().second, 4);
        CHECK_EQ(cnodes[49].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010");
        CHECK_EQ(cnodes[260].rightSon.value(), 49);
        CHECK_EQ(cnodes[259].leftSon.value(), 260);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[50].count, 0);
        CHECK_EQ(cnodes[50].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[50].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110");
        CHECK_EQ(cnodes[259].rightSon.value(), 50);
        CHECK_EQ(cnodes[258].rightSon.value(), 259);
        CHECK_EQ(cnodes[257].leftSon.value(), 258);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[263].count, 0);
        CHECK_EQ(cnodes[52].count, 0);
        CHECK_EQ(cnodes[52].binaryCode.value().second, 2);
        CHECK_EQ(cnodes[52].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[263].leftSon.value(), 52);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[53].count, 0);
        CHECK_EQ(cnodes[53].binaryCode.value().second, 2);
        CHECK_EQ(cnodes[53].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011");
        CHECK_EQ(cnodes[263].rightSon.value(), 53);
        CHECK_EQ(cnodes[257].rightSon.value(), 263);
    }

    SUBCASE("wide codes") {
        ht.setNode(
            0,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111"},
                                 6}});
        ht.setNode(
            10,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111"},
                                 6}});
        ht.setNode(
            49,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111"},
                                 4}});
        ht.setNode(
            50,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},
                                 3}});
        ht.setNode(
            51,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100"},
                                 3}});
        ht.setNode(
            52,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"},
                                 3}});
        ht.setNode(
            53,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110"},
                                 3}});
        ht.setNode(
            54,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
                                 3}});
        ht.setNode(
            55,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101"},
                                 3}});
        ht.setNode(
            56,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011"},
                                 3}});
        ht.setNode(
            256,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111"},
                                 5}});
        ht.buildTreeBackward();
        ht.generateCodes();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 257);
        REQUIRE_EQ(cnodes.size(), 267);
        CHECK_EQ(cnodes[257].count, 0);
        CHECK_EQ(cnodes[258].count, 0);
        CHECK_EQ(cnodes[259].count, 0);
        CHECK_EQ(cnodes[50].count, 0);
        CHECK_EQ(cnodes[50].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[50].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[259].leftSon.value(), 50);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[51].count, 0);
        CHECK_EQ(cnodes[51].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[51].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100");
        CHECK_EQ(cnodes[259].rightSon.value(), 51);
        CHECK_EQ(cnodes[258].leftSon.value(), 259);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[260].count, 0);
        CHECK_EQ(cnodes[52].count, 0);
        CHECK_EQ(cnodes[52].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[52].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010");
        CHECK_EQ(cnodes[260].leftSon.value(), 52);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[53].count, 0);
        CHECK_EQ(cnodes[53].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[53].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110");
        CHECK_EQ(cnodes[260].rightSon.value(), 53);
        CHECK_EQ(cnodes[258].rightSon.value(), 260);
        CHECK_EQ(cnodes[257].leftSon.value(), 258);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[261].count, 0);
        CHECK_EQ(cnodes[262].count, 0);
        CHECK_EQ(cnodes[54].count, 0);
        CHECK_EQ(cnodes[54].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[54].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[262].leftSon.value(), 54);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[55].count, 0);
        CHECK_EQ(cnodes[55].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[55].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101");
        CHECK_EQ(cnodes[262].rightSon.value(), 55);
        CHECK_EQ(cnodes[261].leftSon.value(), 262);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[263].count, 0);
        CHECK_EQ(cnodes[56].count, 0);
        CHECK_EQ(cnodes[56].binaryCode.value().second, 3);
        CHECK_EQ(cnodes[56].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011");
        CHECK_EQ(cnodes[263].leftSon.value(), 56);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[264].count, 0);
        CHECK_EQ(cnodes[265].count, 0);
        CHECK_EQ(cnodes[256].count, 0);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 5);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111");
        CHECK_EQ(cnodes[265].leftSon.value(), 256);
        CHECK(!cnodes[265].binaryCode.has_value());
        CHECK_EQ(cnodes[266].count, 0);
        CHECK_EQ(cnodes[0].count, 0);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111");
        CHECK_EQ(cnodes[266].leftSon.value(), 0);
        CHECK(!cnodes[266].binaryCode.has_value());
        CHECK_EQ(cnodes[10].count, 0);
        CHECK_EQ(cnodes[10].binaryCode.value().second, 6);
        CHECK_EQ(cnodes[10].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111");
        CHECK_EQ(cnodes[266].rightSon.value(), 10);
        CHECK_EQ(cnodes[265].rightSon.value(), 266);
        CHECK_EQ(cnodes[264].leftSon.value(), 265);
        CHECK(!cnodes[264].binaryCode.has_value());
        CHECK_EQ(cnodes[49].count, 0);
        CHECK_EQ(cnodes[49].binaryCode.value().second, 4);
        CHECK_EQ(cnodes[49].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111");
        CHECK_EQ(cnodes[264].rightSon.value(), 49);
        CHECK_EQ(cnodes[263].rightSon.value(), 264);
        CHECK_EQ(cnodes[261].rightSon.value(), 263);
        CHECK_EQ(cnodes[257].rightSon.value(), 261);
    }

    SUBCASE("random shit") {
        ht.setNode(
            0,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000100"},
                                 8}});
        ht.setNode(
            1,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111"},
                                 8}});
        ht.setNode(
            2,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010111"},
                                 8}});
        ht.setNode(
            3,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000"},
                                 8}});
        ht.setNode(
            4,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001111"},
                                 8}});
        ht.setNode(
            5,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100011"},
                                 8}});
        ht.setNode(
            6,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101010"},
                                 8}});
        ht.setNode(
            7,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010"},
                                 8}});
        ht.setNode(
            8,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100011"},
                                 8}});
        ht.setNode(
            9,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111110"},
                                 8}});
        ht.setNode(
            10,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100011"},
                                 8}});
        ht.setNode(
            11,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011011"},
                                 8}});
        ht.setNode(
            12,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110101"},
                                 8}});
        ht.setNode(
            13,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001011111"},
                                 10}});
        ht.setNode(
            14,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011001"},
                                 8}});
        ht.setNode(
            15,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010"},
                                 8}});
        ht.setNode(
            16,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010110"},
                                 8}});
        ht.setNode(
            17,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110001"},
                                 8}});
        ht.setNode(
            18,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000"},
                                 8}});
        ht.setNode(
            19,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101000"},
                                 8}});
        ht.setNode(
            20,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011010"},
                                 8}});
        ht.setNode(
            21,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100"},
                                 8}});
        ht.setNode(
            22,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010110"},
                                 8}});
        ht.setNode(
            23,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000"},
                                 7}});
        ht.setNode(
            24,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000"},
                                 8}});
        ht.setNode(
            25,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011"},
                                 8}});
        ht.setNode(
            26,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001"},
                                 8}});
        ht.setNode(
            27,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011001"},
                                 8}});
        ht.setNode(
            28,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011001"},
                                 8}});
        ht.setNode(
            29,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001011"},
                                 8}});
        ht.setNode(
            30,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110110"},
                                 8}});
        ht.setNode(
            31,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001"},
                                 8}});
        ht.setNode(
            32,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001001"},
                                 8}});
        ht.setNode(
            33,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110110"},
                                 8}});
        ht.setNode(
            34,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101000"},
                                 8}});
        ht.setNode(
            35,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111100"},
                                 8}});
        ht.setNode(
            36,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111001"},
                                 8}});
        ht.setNode(
            37,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110110"},
                                 8}});
        ht.setNode(
            38,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011101"},
                                 8}});
        ht.setNode(
            39,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100100"},
                                 8}});
        ht.setNode(
            40,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011010"},
                                 8}});
        ht.setNode(
            41,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001001"},
                                 8}});
        ht.setNode(
            42,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011010"},
                                 8}});
        ht.setNode(
            43,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111001"},
                                 8}});
        ht.setNode(
            44,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110"},
                                 8}});
        ht.setNode(
            45,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111001"},
                                 8}});
        ht.setNode(
            46,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001001"},
                                 8}});
        ht.setNode(
            47,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101"},
                                 8}});
        ht.setNode(
            48,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010111"},
                                 8}});
        ht.setNode(
            49,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100100"},
                                 8}});
        ht.setNode(
            50,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110100"},
                                 8}});
        ht.setNode(
            51,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000101"},
                                 8}});
        ht.setNode(
            52,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110"},
                                 8}});
        ht.setNode(
            53,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110101"},
                                 8}});
        ht.setNode(
            54,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111100"},
                                 8}});
        ht.setNode(
            55,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101000"},
                                 8}});
        ht.setNode(
            56,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110110"},
                                 8}});
        ht.setNode(
            57,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011011"},
                                 8}});
        ht.setNode(
            58,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000101"},
                                 8}});
        ht.setNode(
            59,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111100"},
                                 8}});
        ht.setNode(
            60,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011101"},
                                 8}});
        ht.setNode(
            61,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110101"},
                                 8}});
        ht.setNode(
            62,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011101"},
                                 8}});
        ht.setNode(
            63,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101"},
                                 8}});
        ht.setNode(
            64,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100"},
                                 8}});
        ht.setNode(
            65,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111101"},
                                 8}});
        ht.setNode(
            66,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110"},
                                 8}});
        ht.setNode(
            67,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111010"},
                                 8}});
        ht.setNode(
            68,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111101"},
                                 8}});
        ht.setNode(
            69,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000101"},
                                 8}});
        ht.setNode(
            70,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000"},
                                 8}});
        ht.setNode(
            71,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001101"},
                                 8}});
        ht.setNode(
            72,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101"},
                                 8}});
        ht.setNode(
            73,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001110"},
                                 8}});
        ht.setNode(
            74,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000"},
                                 8}});
        ht.setNode(
            75,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001100"},
                                 8}});
        ht.setNode(
            76,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111010"},
                                 8}});
        ht.setNode(
            77,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110010"},
                                 8}});
        ht.setNode(
            78,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100100"},
                                 8}});
        ht.setNode(
            79,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},
                                 8}});
        ht.setNode(
            80,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011000"},
                                 8}});
        ht.setNode(
            81,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001111"},
                                 8}});
        ht.setNode(
            82,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011011"},
                                 8}});
        ht.setNode(
            83,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100011"},
                                 8}});
        ht.setNode(
            84,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111"},
                                 8}});
        ht.setNode(
            85,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010111"},
                                 8}});
        ht.setNode(
            86,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111101"},
                                 8}});
        ht.setNode(
            87,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100"},
                                 8}});
        ht.setNode(
            88,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110010"},
                                 8}});
        ht.setNode(
            89,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000"},
                                 8}});
        ht.setNode(
            90,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000"},
                                 8}});
        ht.setNode(
            91,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000"},
                                 8}});
        ht.setNode(
            92,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111"},
                                 8}});
        ht.setNode(
            93,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010000"},
                                 8}});
        ht.setNode(
            94,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011000"},
                                 8}});
        ht.setNode(
            95,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001101"},
                                 8}});
        ht.setNode(
            96,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110111"},
                                 8}});
        ht.setNode(
            97,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101001"},
                                 8}});
        ht.setNode(
            98,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111011"},
                                 8}});
        ht.setNode(
            99,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111000"},
                                 8}});
        ht.setNode(
            100,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111010"},
                                 8}});
        ht.setNode(
            101,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000111"},
                                 8}});
        ht.setNode(
            102,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"},
                                 8}});
        ht.setNode(
            103,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
                                 8}});
        ht.setNode(
            104,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001011"},
                                 8}});
        ht.setNode(
            105,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111011"},
                                 8}});
        ht.setNode(
            106,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011"},
                                 8}});
        ht.setNode(
            107,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111010"},
                                 8}});
        ht.setNode(
            108,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000"},
                                 8}});
        ht.setNode(
            109,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100101"},
                                 8}});
        ht.setNode(
            110,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001100"},
                                 8}});
        ht.setNode(
            111,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001100"},
                                 8}});
        ht.setNode(
            112,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111101"},
                                 8}});
        ht.setNode(
            113,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101001"},
                                 8}});
        ht.setNode(
            114,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010"},
                                 8}});
        ht.setNode(
            115,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110111"},
                                 8}});
        ht.setNode(
            116,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010011"},
                                 8}});
        ht.setNode(
            117,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001110"},
                                 8}});
        ht.setNode(
            118,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001011"},
                                 8}});
        ht.setNode(
            119,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001110"},
                                 8}});
        ht.setNode(
            120,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101110"},
                                 8}});
        ht.setNode(
            121,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101110"},
                                 8}});
        ht.setNode(
            122,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111000"},
                                 8}});
        ht.setNode(
            123,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000"},
                                 8}});
        ht.setNode(
            124,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000"},
                                 8}});
        ht.setNode(
            125,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100101"},
                                 8}});
        ht.setNode(
            126,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110"},
                                 8}});
        ht.setNode(
            127,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000111"},
                                 8}});
        ht.setNode(
            128,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010"},
                                 8}});
        ht.setNode(
            129,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000110"},
                                 8}});
        ht.setNode(
            130,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010011"},
                                 8}});
        ht.setNode(
            131,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000"},
                                 8}});
        ht.setNode(
            132,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101100"},
                                 8}});
        ht.setNode(
            133,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000010"},
                                 8}});
        ht.setNode(
            134,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010011"},
                                 8}});
        ht.setNode(
            135,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011"},
                                 8}});
        ht.setNode(
            136,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110010"},
                                 8}});
        ht.setNode(
            137,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110000"},
                                 8}});
        ht.setNode(
            138,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101100"},
                                 8}});
        ht.setNode(
            139,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111111"},
                                 8}});
        ht.setNode(
            140,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000111"},
                                 8}});
        ht.setNode(
            141,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101110"},
                                 8}});
        ht.setNode(
            142,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000"},
                                 8}});
        ht.setNode(
            143,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010100"},
                                 8}});
        ht.setNode(
            144,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000011"},
                                 8}});
        ht.setNode(
            145,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101111"},
                                 8}});
        ht.setNode(
            146,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010"},
                                 8}});
        ht.setNode(
            147,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010"},
                                 8}});
        ht.setNode(
            148,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100010"},
                                 8}});
        ht.setNode(
            149,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011"},
                                 8}});
        ht.setNode(
            150,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011111"},
                                 8}});
        ht.setNode(
            151,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001010"},
                                 8}});
        ht.setNode(
            152,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101100"},
                                 8}});
        ht.setNode(
            153,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000110"},
                                 8}});
        ht.setNode(
            154,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101110"},
                                 8}});
        ht.setNode(
            155,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011"},
                                 8}});
        ht.setNode(
            156,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011111"},
                                 9}});
        ht.setNode(
            157,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100010"},
                                 8}});
        ht.setNode(
            158,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001111"},
                                 8}});
        ht.setNode(
            159,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000"},
                                 8}});
        ht.setNode(
            160,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100010"},
                                 8}});
        ht.setNode(
            161,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001101"},
                                 8}});
        ht.setNode(
            162,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011111"},
                                 8}});
        ht.setNode(
            163,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000110"},
                                 8}});
        ht.setNode(
            164,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100111"},
                                 8}});
        ht.setNode(
            165,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000"},
                                 8}});
        ht.setNode(
            166,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001"},
                                 8}});
        ht.setNode(
            167,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100101"},
                                 8}});
        ht.setNode(
            168,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010"},
                                 8}});
        ht.setNode(
            169,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100"},
                                 8}});
        ht.setNode(
            170,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110"},
                                 8}});
        ht.setNode(
            171,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000"},
                                 8}});
        ht.setNode(
            172,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100110"},
                                 8}});
        ht.setNode(
            173,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101011"},
                                 8}});
        ht.setNode(
            174,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011110"},
                                 8}});
        ht.setNode(
            175,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101100"},
                                 8}});
        ht.setNode(
            176,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000"},
                                 8}});
        ht.setNode(
            177,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100110"},
                                 8}});
        ht.setNode(
            178,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111"},
                                 8}});
        ht.setNode(
            179,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100"},
                                 8}});
        ht.setNode(
            180,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100111"},
                                 8}});
        ht.setNode(
            181,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010010"},
                                 8}});
        ht.setNode(
            182,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100110"},
                                 8}});
        ht.setNode(
            183,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100110"},
                                 8}});
        ht.setNode(
            184,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000011"},
                                 8}});
        ht.setNode(
            185,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111"},
                                 8}});
        ht.setNode(
            186,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110011"},
                                 8}});
        ht.setNode(
            187,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010"},
                                 8}});
        ht.setNode(
            188,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101011"},
                                 8}});
        ht.setNode(
            189,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001"},
                                 8}});
        ht.setNode(
            190,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101"},
                                 8}});
        ht.setNode(
            191,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000001"},
                                 8}});
        ht.setNode(
            192,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001010"},
                                 8}});
        ht.setNode(
            193,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101101"},
                                 8}});
        ht.setNode(
            194,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001"},
                                 8}});
        ht.setNode(
            195,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111"},
                                 8}});
        ht.setNode(
            196,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100"},
                                 8}});
        ht.setNode(
            197,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101101"},
                                 8}});
        ht.setNode(
            198,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110011"},
                                 8}});
        ht.setNode(
            199,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010101"},
                                 8}});
        ht.setNode(
            200,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100001"},
                                 8}});
        ht.setNode(
            201,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110"},
                                 8}});
        ht.setNode(
            202,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110011"},
                                 8}});
        ht.setNode(
            203,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101101"},
                                 8}});
        ht.setNode(
            204,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100001"},
                                 8}});
        ht.setNode(
            205,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010100"},
                                 8}});
        ht.setNode(
            206,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111"},
                                 8}});
        ht.setNode(
            207,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101011"},
                                 8}});
        ht.setNode(
            208,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101101"},
                                 8}});
        ht.setNode(
            209,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110100"},
                                 8}});
        ht.setNode(
            210,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100001"},
                                 8}});
        ht.setNode(
            211,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001"},
                                 8}});
        ht.setNode(
            212,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011100"},
                                 8}});
        ht.setNode(
            213,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101001"},
                                 8}});
        ht.setNode(
            214,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011100"},
                                 8}});
        ht.setNode(
            215,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100111"},
                                 8}});
        ht.setNode(
            216,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100"},
                                 8}});
        ht.setNode(
            217,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100111"},
                                 8}});
        ht.setNode(
            218,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001000"},
                                 8}});
        ht.setNode(
            219,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110111"},
                                 8}});
        ht.setNode(
            220,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101"},
                                 8}});
        ht.setNode(
            221,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110000"},
                                 8}});
        ht.setNode(
            222,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010110"},
                                 8}});
        ht.setNode(
            223,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010001"},
                                 8}});
        ht.setNode(
            224,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011110"},
                                 8}});
        ht.setNode(
            225,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011100"},
                                 8}});
        ht.setNode(
            226,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001010"},
                                 8}});
        ht.setNode(
            227,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110100"},
                                 8}});
        ht.setNode(
            228,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111"},
                                 8}});
        ht.setNode(
            229,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110011"},
                                 8}});
        ht.setNode(
            230,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111011"},
                                 8}});
        ht.setNode(
            231,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011110"},
                                 8}});
        ht.setNode(
            232,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011"},
                                 8}});
        ht.setNode(
            233,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111"},
                                 8}});
        ht.setNode(
            234,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101"},
                                 8}});
        ht.setNode(
            235,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010"},
                                 8}});
        ht.setNode(
            236,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010101"},
                                 8}});
        ht.setNode(
            237,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110101"},
                                 8}});
        ht.setNode(
            238,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000"},
                                 8}});
        ht.setNode(
            239,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010001"},
                                 8}});
        ht.setNode(
            240,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100"},
                                 8}});
        ht.setNode(
            241,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101001"},
                                 8}});
        ht.setNode(
            242,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010010"},
                                 8}});
        ht.setNode(
            243,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110"},
                                 8}});
        ht.setNode(
            244,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010001"},
                                 8}});
        ht.setNode(
            245,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110001"},
                                 8}});
        ht.setNode(
            246,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001"},
                                 8}});
        ht.setNode(
            247,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111011"},
                                 8}});
        ht.setNode(
            248,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110100"},
                                 8}});
        ht.setNode(
            249,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010"},
                                 8}});
        ht.setNode(
            250,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111100"},
                                 8}});
        ht.setNode(
            251,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101111"},
                                 8}});
        ht.setNode(
            252,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101010"},
                                 8}});
        ht.setNode(
            253,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110001"},
                                 8}});
        ht.setNode(
            254,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101111"},
                                 8}});
        ht.setNode(
            255,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110001"},
                                 8}});
        ht.setNode(
            256,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011111"},
                                 10}});
        ht.buildTreeBackward();
        auto cnodes = ht.getNodes();
        auto root = ht.getRootIndex().value();
        CHECK_EQ(root, 257);
        REQUIRE_EQ(cnodes.size(), 513);
        CHECK_EQ(cnodes[257].count, 0);
        CHECK_EQ(cnodes[258].count, 0);
        CHECK_EQ(cnodes[259].count, 0);
        CHECK_EQ(cnodes[260].count, 0);
        CHECK_EQ(cnodes[261].count, 0);
        CHECK_EQ(cnodes[262].count, 0);
        CHECK_EQ(cnodes[263].count, 0);
        CHECK_EQ(cnodes[264].count, 0);
        CHECK_EQ(cnodes[79].count, 0);
        CHECK_EQ(cnodes[79].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[79].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        CHECK_EQ(cnodes[264].leftSon.value(), 79);
        CHECK(!cnodes[264].binaryCode.has_value());
        CHECK_EQ(cnodes[124].count, 0);
        CHECK_EQ(cnodes[124].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[124].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000");
        CHECK_EQ(cnodes[264].rightSon.value(), 124);
        CHECK_EQ(cnodes[263].leftSon.value(), 264);
        CHECK(!cnodes[263].binaryCode.has_value());
        CHECK_EQ(cnodes[23].count, 0);
        CHECK_EQ(cnodes[23].binaryCode.value().second, 7);
        CHECK_EQ(cnodes[23].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000");
        CHECK_EQ(cnodes[263].rightSon.value(), 23);
        CHECK_EQ(cnodes[262].leftSon.value(), 263);
        CHECK(!cnodes[262].binaryCode.has_value());
        CHECK_EQ(cnodes[265].count, 0);
        CHECK_EQ(cnodes[266].count, 0);
        CHECK_EQ(cnodes[159].count, 0);
        CHECK_EQ(cnodes[159].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[159].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000");
        CHECK_EQ(cnodes[266].leftSon.value(), 159);
        CHECK(!cnodes[266].binaryCode.has_value());
        CHECK_EQ(cnodes[165].count, 0);
        CHECK_EQ(cnodes[165].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[165].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000");
        CHECK_EQ(cnodes[266].rightSon.value(), 165);
        CHECK_EQ(cnodes[265].leftSon.value(), 266);
        CHECK(!cnodes[265].binaryCode.has_value());
        CHECK_EQ(cnodes[267].count, 0);
        CHECK_EQ(cnodes[3].count, 0);
        CHECK_EQ(cnodes[3].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[3].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000");
        CHECK_EQ(cnodes[267].leftSon.value(), 3);
        CHECK(!cnodes[267].binaryCode.has_value());
        CHECK_EQ(cnodes[89].count, 0);
        CHECK_EQ(cnodes[89].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[89].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000");
        CHECK_EQ(cnodes[267].rightSon.value(), 89);
        CHECK_EQ(cnodes[265].rightSon.value(), 267);
        CHECK_EQ(cnodes[262].rightSon.value(), 265);
        CHECK_EQ(cnodes[261].leftSon.value(), 262);
        CHECK(!cnodes[261].binaryCode.has_value());
        CHECK_EQ(cnodes[268].count, 0);
        CHECK_EQ(cnodes[269].count, 0);
        CHECK_EQ(cnodes[270].count, 0);
        CHECK_EQ(cnodes[123].count, 0);
        CHECK_EQ(cnodes[123].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[123].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000");
        CHECK_EQ(cnodes[270].leftSon.value(), 123);
        CHECK(!cnodes[270].binaryCode.has_value());
        CHECK_EQ(cnodes[171].count, 0);
        CHECK_EQ(cnodes[171].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[171].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000");
        CHECK_EQ(cnodes[270].rightSon.value(), 171);
        CHECK_EQ(cnodes[269].leftSon.value(), 270);
        CHECK(!cnodes[269].binaryCode.has_value());
        CHECK_EQ(cnodes[271].count, 0);
        CHECK_EQ(cnodes[24].count, 0);
        CHECK_EQ(cnodes[24].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[24].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000");
        CHECK_EQ(cnodes[271].leftSon.value(), 24);
        CHECK(!cnodes[271].binaryCode.has_value());
        CHECK_EQ(cnodes[93].count, 0);
        CHECK_EQ(cnodes[93].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[93].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010000");
        CHECK_EQ(cnodes[271].rightSon.value(), 93);
        CHECK_EQ(cnodes[269].rightSon.value(), 271);
        CHECK_EQ(cnodes[268].leftSon.value(), 269);
        CHECK(!cnodes[268].binaryCode.has_value());
        CHECK_EQ(cnodes[272].count, 0);
        CHECK_EQ(cnodes[273].count, 0);
        CHECK_EQ(cnodes[108].count, 0);
        CHECK_EQ(cnodes[108].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[108].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000");
        CHECK_EQ(cnodes[273].leftSon.value(), 108);
        CHECK(!cnodes[273].binaryCode.has_value());
        CHECK_EQ(cnodes[137].count, 0);
        CHECK_EQ(cnodes[137].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[137].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110000");
        CHECK_EQ(cnodes[273].rightSon.value(), 137);
        CHECK_EQ(cnodes[272].leftSon.value(), 273);
        CHECK(!cnodes[272].binaryCode.has_value());
        CHECK_EQ(cnodes[274].count, 0);
        CHECK_EQ(cnodes[176].count, 0);
        CHECK_EQ(cnodes[176].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[176].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110000");
        CHECK_EQ(cnodes[274].leftSon.value(), 176);
        CHECK(!cnodes[274].binaryCode.has_value());
        CHECK_EQ(cnodes[221].count, 0);
        CHECK_EQ(cnodes[221].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[221].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110000");
        CHECK_EQ(cnodes[274].rightSon.value(), 221);
        CHECK_EQ(cnodes[272].rightSon.value(), 274);
        CHECK_EQ(cnodes[268].rightSon.value(), 272);
        CHECK_EQ(cnodes[261].rightSon.value(), 268);
        CHECK_EQ(cnodes[260].leftSon.value(), 261);
        CHECK(!cnodes[260].binaryCode.has_value());
        CHECK_EQ(cnodes[275].count, 0);
        CHECK_EQ(cnodes[276].count, 0);
        CHECK_EQ(cnodes[277].count, 0);
        CHECK_EQ(cnodes[278].count, 0);
        CHECK_EQ(cnodes[18].count, 0);
        CHECK_EQ(cnodes[18].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[18].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000");
        CHECK_EQ(cnodes[278].leftSon.value(), 18);
        CHECK(!cnodes[278].binaryCode.has_value());
        CHECK_EQ(cnodes[74].count, 0);
        CHECK_EQ(cnodes[74].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[74].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000");
        CHECK_EQ(cnodes[278].rightSon.value(), 74);
        CHECK_EQ(cnodes[277].leftSon.value(), 278);
        CHECK(!cnodes[277].binaryCode.has_value());
        CHECK_EQ(cnodes[279].count, 0);
        CHECK_EQ(cnodes[91].count, 0);
        CHECK_EQ(cnodes[91].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[91].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000");
        CHECK_EQ(cnodes[279].leftSon.value(), 91);
        CHECK(!cnodes[279].binaryCode.has_value());
        CHECK_EQ(cnodes[218].count, 0);
        CHECK_EQ(cnodes[218].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[218].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001000");
        CHECK_EQ(cnodes[279].rightSon.value(), 218);
        CHECK_EQ(cnodes[277].rightSon.value(), 279);
        CHECK_EQ(cnodes[276].leftSon.value(), 277);
        CHECK(!cnodes[276].binaryCode.has_value());
        CHECK_EQ(cnodes[280].count, 0);
        CHECK_EQ(cnodes[281].count, 0);
        CHECK_EQ(cnodes[238].count, 0);
        CHECK_EQ(cnodes[238].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[238].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000");
        CHECK_EQ(cnodes[281].leftSon.value(), 238);
        CHECK(!cnodes[281].binaryCode.has_value());
        CHECK_EQ(cnodes[19].count, 0);
        CHECK_EQ(cnodes[19].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[19].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101000");
        CHECK_EQ(cnodes[281].rightSon.value(), 19);
        CHECK_EQ(cnodes[280].leftSon.value(), 281);
        CHECK(!cnodes[280].binaryCode.has_value());
        CHECK_EQ(cnodes[282].count, 0);
        CHECK_EQ(cnodes[34].count, 0);
        CHECK_EQ(cnodes[34].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[34].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101000");
        CHECK_EQ(cnodes[282].leftSon.value(), 34);
        CHECK(!cnodes[282].binaryCode.has_value());
        CHECK_EQ(cnodes[55].count, 0);
        CHECK_EQ(cnodes[55].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[55].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101000");
        CHECK_EQ(cnodes[282].rightSon.value(), 55);
        CHECK_EQ(cnodes[280].rightSon.value(), 282);
        CHECK_EQ(cnodes[276].rightSon.value(), 280);
        CHECK_EQ(cnodes[275].leftSon.value(), 276);
        CHECK(!cnodes[275].binaryCode.has_value());
        CHECK_EQ(cnodes[283].count, 0);
        CHECK_EQ(cnodes[284].count, 0);
        CHECK_EQ(cnodes[285].count, 0);
        CHECK_EQ(cnodes[70].count, 0);
        CHECK_EQ(cnodes[70].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[70].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000");
        CHECK_EQ(cnodes[285].leftSon.value(), 70);
        CHECK(!cnodes[285].binaryCode.has_value());
        CHECK_EQ(cnodes[80].count, 0);
        CHECK_EQ(cnodes[80].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[80].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011000");
        CHECK_EQ(cnodes[285].rightSon.value(), 80);
        CHECK_EQ(cnodes[284].leftSon.value(), 285);
        CHECK(!cnodes[284].binaryCode.has_value());
        CHECK_EQ(cnodes[286].count, 0);
        CHECK_EQ(cnodes[90].count, 0);
        CHECK_EQ(cnodes[90].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[90].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000");
        CHECK_EQ(cnodes[286].leftSon.value(), 90);
        CHECK(!cnodes[286].binaryCode.has_value());
        CHECK_EQ(cnodes[94].count, 0);
        CHECK_EQ(cnodes[94].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[94].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011000");
        CHECK_EQ(cnodes[286].rightSon.value(), 94);
        CHECK_EQ(cnodes[284].rightSon.value(), 286);
        CHECK_EQ(cnodes[283].leftSon.value(), 284);
        CHECK(!cnodes[283].binaryCode.has_value());
        CHECK_EQ(cnodes[287].count, 0);
        CHECK_EQ(cnodes[288].count, 0);
        CHECK_EQ(cnodes[99].count, 0);
        CHECK_EQ(cnodes[99].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[99].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111000");
        CHECK_EQ(cnodes[288].leftSon.value(), 99);
        CHECK(!cnodes[288].binaryCode.has_value());
        CHECK_EQ(cnodes[122].count, 0);
        CHECK_EQ(cnodes[122].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[122].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111000");
        CHECK_EQ(cnodes[288].rightSon.value(), 122);
        CHECK_EQ(cnodes[287].leftSon.value(), 288);
        CHECK(!cnodes[287].binaryCode.has_value());
        CHECK_EQ(cnodes[289].count, 0);
        CHECK_EQ(cnodes[131].count, 0);
        CHECK_EQ(cnodes[131].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[131].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000");
        CHECK_EQ(cnodes[289].leftSon.value(), 131);
        CHECK(!cnodes[289].binaryCode.has_value());
        CHECK_EQ(cnodes[142].count, 0);
        CHECK_EQ(cnodes[142].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[142].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000");
        CHECK_EQ(cnodes[289].rightSon.value(), 142);
        CHECK_EQ(cnodes[287].rightSon.value(), 289);
        CHECK_EQ(cnodes[283].rightSon.value(), 287);
        CHECK_EQ(cnodes[275].rightSon.value(), 283);
        CHECK_EQ(cnodes[260].rightSon.value(), 275);
        CHECK_EQ(cnodes[259].leftSon.value(), 260);
        CHECK(!cnodes[259].binaryCode.has_value());
        CHECK_EQ(cnodes[290].count, 0);
        CHECK_EQ(cnodes[291].count, 0);
        CHECK_EQ(cnodes[292].count, 0);
        CHECK_EQ(cnodes[293].count, 0);
        CHECK_EQ(cnodes[294].count, 0);
        CHECK_EQ(cnodes[196].count, 0);
        CHECK_EQ(cnodes[196].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[196].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100");
        CHECK_EQ(cnodes[294].leftSon.value(), 196);
        CHECK(!cnodes[294].binaryCode.has_value());
        CHECK_EQ(cnodes[216].count, 0);
        CHECK_EQ(cnodes[216].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[216].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100");
        CHECK_EQ(cnodes[294].rightSon.value(), 216);
        CHECK_EQ(cnodes[293].leftSon.value(), 294);
        CHECK(!cnodes[293].binaryCode.has_value());
        CHECK_EQ(cnodes[295].count, 0);
        CHECK_EQ(cnodes[240].count, 0);
        CHECK_EQ(cnodes[240].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[240].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100");
        CHECK_EQ(cnodes[295].leftSon.value(), 240);
        CHECK(!cnodes[295].binaryCode.has_value());
        CHECK_EQ(cnodes[0].count, 0);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000100");
        CHECK_EQ(cnodes[295].rightSon.value(), 0);
        CHECK_EQ(cnodes[293].rightSon.value(), 295);
        CHECK_EQ(cnodes[292].leftSon.value(), 293);
        CHECK(!cnodes[292].binaryCode.has_value());
        CHECK_EQ(cnodes[296].count, 0);
        CHECK_EQ(cnodes[297].count, 0);
        CHECK_EQ(cnodes[21].count, 0);
        CHECK_EQ(cnodes[21].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[21].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100");
        CHECK_EQ(cnodes[297].leftSon.value(), 21);
        CHECK(!cnodes[297].binaryCode.has_value());
        CHECK_EQ(cnodes[39].count, 0);
        CHECK_EQ(cnodes[39].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[39].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100100");
        CHECK_EQ(cnodes[297].rightSon.value(), 39);
        CHECK_EQ(cnodes[296].leftSon.value(), 297);
        CHECK(!cnodes[296].binaryCode.has_value());
        CHECK_EQ(cnodes[298].count, 0);
        CHECK_EQ(cnodes[49].count, 0);
        CHECK_EQ(cnodes[49].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[49].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100100");
        CHECK_EQ(cnodes[298].leftSon.value(), 49);
        CHECK(!cnodes[298].binaryCode.has_value());
        CHECK_EQ(cnodes[78].count, 0);
        CHECK_EQ(cnodes[78].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[78].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100100");
        CHECK_EQ(cnodes[298].rightSon.value(), 78);
        CHECK_EQ(cnodes[296].rightSon.value(), 298);
        CHECK_EQ(cnodes[292].rightSon.value(), 296);
        CHECK_EQ(cnodes[291].leftSon.value(), 292);
        CHECK(!cnodes[291].binaryCode.has_value());
        CHECK_EQ(cnodes[299].count, 0);
        CHECK_EQ(cnodes[300].count, 0);
        CHECK_EQ(cnodes[301].count, 0);
        CHECK_EQ(cnodes[87].count, 0);
        CHECK_EQ(cnodes[87].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[87].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100");
        CHECK_EQ(cnodes[301].leftSon.value(), 87);
        CHECK(!cnodes[301].binaryCode.has_value());
        CHECK_EQ(cnodes[143].count, 0);
        CHECK_EQ(cnodes[143].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[143].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010100");
        CHECK_EQ(cnodes[301].rightSon.value(), 143);
        CHECK_EQ(cnodes[300].leftSon.value(), 301);
        CHECK(!cnodes[300].binaryCode.has_value());
        CHECK_EQ(cnodes[302].count, 0);
        CHECK_EQ(cnodes[169].count, 0);
        CHECK_EQ(cnodes[169].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[169].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100");
        CHECK_EQ(cnodes[302].leftSon.value(), 169);
        CHECK(!cnodes[302].binaryCode.has_value());
        CHECK_EQ(cnodes[205].count, 0);
        CHECK_EQ(cnodes[205].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[205].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010100");
        CHECK_EQ(cnodes[302].rightSon.value(), 205);
        CHECK_EQ(cnodes[300].rightSon.value(), 302);
        CHECK_EQ(cnodes[299].leftSon.value(), 300);
        CHECK(!cnodes[299].binaryCode.has_value());
        CHECK_EQ(cnodes[303].count, 0);
        CHECK_EQ(cnodes[304].count, 0);
        CHECK_EQ(cnodes[209].count, 0);
        CHECK_EQ(cnodes[209].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[209].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110100");
        CHECK_EQ(cnodes[304].leftSon.value(), 209);
        CHECK(!cnodes[304].binaryCode.has_value());
        CHECK_EQ(cnodes[227].count, 0);
        CHECK_EQ(cnodes[227].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[227].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110100");
        CHECK_EQ(cnodes[304].rightSon.value(), 227);
        CHECK_EQ(cnodes[303].leftSon.value(), 304);
        CHECK(!cnodes[303].binaryCode.has_value());
        CHECK_EQ(cnodes[305].count, 0);
        CHECK_EQ(cnodes[248].count, 0);
        CHECK_EQ(cnodes[248].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[248].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110100");
        CHECK_EQ(cnodes[305].leftSon.value(), 248);
        CHECK(!cnodes[305].binaryCode.has_value());
        CHECK_EQ(cnodes[50].count, 0);
        CHECK_EQ(cnodes[50].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[50].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110100");
        CHECK_EQ(cnodes[305].rightSon.value(), 50);
        CHECK_EQ(cnodes[303].rightSon.value(), 305);
        CHECK_EQ(cnodes[299].rightSon.value(), 303);
        CHECK_EQ(cnodes[291].rightSon.value(), 299);
        CHECK_EQ(cnodes[290].leftSon.value(), 291);
        CHECK(!cnodes[290].binaryCode.has_value());
        CHECK_EQ(cnodes[306].count, 0);
        CHECK_EQ(cnodes[307].count, 0);
        CHECK_EQ(cnodes[308].count, 0);
        CHECK_EQ(cnodes[309].count, 0);
        CHECK_EQ(cnodes[64].count, 0);
        CHECK_EQ(cnodes[64].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[64].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100");
        CHECK_EQ(cnodes[309].leftSon.value(), 64);
        CHECK(!cnodes[309].binaryCode.has_value());
        CHECK_EQ(cnodes[75].count, 0);
        CHECK_EQ(cnodes[75].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[75].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001100");
        CHECK_EQ(cnodes[309].rightSon.value(), 75);
        CHECK_EQ(cnodes[308].leftSon.value(), 309);
        CHECK(!cnodes[308].binaryCode.has_value());
        CHECK_EQ(cnodes[310].count, 0);
        CHECK_EQ(cnodes[110].count, 0);
        CHECK_EQ(cnodes[110].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[110].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001100");
        CHECK_EQ(cnodes[310].leftSon.value(), 110);
        CHECK(!cnodes[310].binaryCode.has_value());
        CHECK_EQ(cnodes[111].count, 0);
        CHECK_EQ(cnodes[111].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[111].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001100");
        CHECK_EQ(cnodes[310].rightSon.value(), 111);
        CHECK_EQ(cnodes[308].rightSon.value(), 310);
        CHECK_EQ(cnodes[307].leftSon.value(), 308);
        CHECK(!cnodes[307].binaryCode.has_value());
        CHECK_EQ(cnodes[311].count, 0);
        CHECK_EQ(cnodes[312].count, 0);
        CHECK_EQ(cnodes[132].count, 0);
        CHECK_EQ(cnodes[132].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[132].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101100");
        CHECK_EQ(cnodes[312].leftSon.value(), 132);
        CHECK(!cnodes[312].binaryCode.has_value());
        CHECK_EQ(cnodes[138].count, 0);
        CHECK_EQ(cnodes[138].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[138].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101100");
        CHECK_EQ(cnodes[312].rightSon.value(), 138);
        CHECK_EQ(cnodes[311].leftSon.value(), 312);
        CHECK(!cnodes[311].binaryCode.has_value());
        CHECK_EQ(cnodes[313].count, 0);
        CHECK_EQ(cnodes[152].count, 0);
        CHECK_EQ(cnodes[152].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[152].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101100");
        CHECK_EQ(cnodes[313].leftSon.value(), 152);
        CHECK(!cnodes[313].binaryCode.has_value());
        CHECK_EQ(cnodes[175].count, 0);
        CHECK_EQ(cnodes[175].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[175].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101100");
        CHECK_EQ(cnodes[313].rightSon.value(), 175);
        CHECK_EQ(cnodes[311].rightSon.value(), 313);
        CHECK_EQ(cnodes[307].rightSon.value(), 311);
        CHECK_EQ(cnodes[306].leftSon.value(), 307);
        CHECK(!cnodes[306].binaryCode.has_value());
        CHECK_EQ(cnodes[314].count, 0);
        CHECK_EQ(cnodes[315].count, 0);
        CHECK_EQ(cnodes[316].count, 0);
        CHECK_EQ(cnodes[179].count, 0);
        CHECK_EQ(cnodes[179].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[179].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100");
        CHECK_EQ(cnodes[316].leftSon.value(), 179);
        CHECK(!cnodes[316].binaryCode.has_value());
        CHECK_EQ(cnodes[212].count, 0);
        CHECK_EQ(cnodes[212].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[212].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011100");
        CHECK_EQ(cnodes[316].rightSon.value(), 212);
        CHECK_EQ(cnodes[315].leftSon.value(), 316);
        CHECK(!cnodes[315].binaryCode.has_value());
        CHECK_EQ(cnodes[317].count, 0);
        CHECK_EQ(cnodes[214].count, 0);
        CHECK_EQ(cnodes[214].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[214].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011100");
        CHECK_EQ(cnodes[317].leftSon.value(), 214);
        CHECK(!cnodes[317].binaryCode.has_value());
        CHECK_EQ(cnodes[225].count, 0);
        CHECK_EQ(cnodes[225].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[225].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011100");
        CHECK_EQ(cnodes[317].rightSon.value(), 225);
        CHECK_EQ(cnodes[315].rightSon.value(), 317);
        CHECK_EQ(cnodes[314].leftSon.value(), 315);
        CHECK(!cnodes[314].binaryCode.has_value());
        CHECK_EQ(cnodes[318].count, 0);
        CHECK_EQ(cnodes[319].count, 0);
        CHECK_EQ(cnodes[250].count, 0);
        CHECK_EQ(cnodes[250].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[250].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111100");
        CHECK_EQ(cnodes[319].leftSon.value(), 250);
        CHECK(!cnodes[319].binaryCode.has_value());
        CHECK_EQ(cnodes[35].count, 0);
        CHECK_EQ(cnodes[35].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[35].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111100");
        CHECK_EQ(cnodes[319].rightSon.value(), 35);
        CHECK_EQ(cnodes[318].leftSon.value(), 319);
        CHECK(!cnodes[318].binaryCode.has_value());
        CHECK_EQ(cnodes[320].count, 0);
        CHECK_EQ(cnodes[54].count, 0);
        CHECK_EQ(cnodes[54].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[54].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111100");
        CHECK_EQ(cnodes[320].leftSon.value(), 54);
        CHECK(!cnodes[320].binaryCode.has_value());
        CHECK_EQ(cnodes[59].count, 0);
        CHECK_EQ(cnodes[59].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[59].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111100");
        CHECK_EQ(cnodes[320].rightSon.value(), 59);
        CHECK_EQ(cnodes[318].rightSon.value(), 320);
        CHECK_EQ(cnodes[314].rightSon.value(), 318);
        CHECK_EQ(cnodes[306].rightSon.value(), 314);
        CHECK_EQ(cnodes[290].rightSon.value(), 306);
        CHECK_EQ(cnodes[259].rightSon.value(), 290);
        CHECK_EQ(cnodes[258].leftSon.value(), 259);
        CHECK(!cnodes[258].binaryCode.has_value());
        CHECK_EQ(cnodes[321].count, 0);
        CHECK_EQ(cnodes[322].count, 0);
        CHECK_EQ(cnodes[323].count, 0);
        CHECK_EQ(cnodes[324].count, 0);
        CHECK_EQ(cnodes[325].count, 0);
        CHECK_EQ(cnodes[326].count, 0);
        CHECK_EQ(cnodes[102].count, 0);
        CHECK_EQ(cnodes[102].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[102].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010");
        CHECK_EQ(cnodes[326].leftSon.value(), 102);
        CHECK(!cnodes[326].binaryCode.has_value());
        CHECK_EQ(cnodes[114].count, 0);
        CHECK_EQ(cnodes[114].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[114].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010");
        CHECK_EQ(cnodes[326].rightSon.value(), 114);
        CHECK_EQ(cnodes[325].leftSon.value(), 326);
        CHECK(!cnodes[325].binaryCode.has_value());
        CHECK_EQ(cnodes[327].count, 0);
        CHECK_EQ(cnodes[128].count, 0);
        CHECK_EQ(cnodes[128].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[128].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010");
        CHECK_EQ(cnodes[327].leftSon.value(), 128);
        CHECK(!cnodes[327].binaryCode.has_value());
        CHECK_EQ(cnodes[133].count, 0);
        CHECK_EQ(cnodes[133].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[133].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000010");
        CHECK_EQ(cnodes[327].rightSon.value(), 133);
        CHECK_EQ(cnodes[325].rightSon.value(), 327);
        CHECK_EQ(cnodes[324].leftSon.value(), 325);
        CHECK(!cnodes[324].binaryCode.has_value());
        CHECK_EQ(cnodes[328].count, 0);
        CHECK_EQ(cnodes[329].count, 0);
        CHECK_EQ(cnodes[146].count, 0);
        CHECK_EQ(cnodes[146].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[146].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010");
        CHECK_EQ(cnodes[329].leftSon.value(), 146);
        CHECK(!cnodes[329].binaryCode.has_value());
        CHECK_EQ(cnodes[148].count, 0);
        CHECK_EQ(cnodes[148].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[148].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100010");
        CHECK_EQ(cnodes[329].rightSon.value(), 148);
        CHECK_EQ(cnodes[328].leftSon.value(), 329);
        CHECK(!cnodes[328].binaryCode.has_value());
        CHECK_EQ(cnodes[330].count, 0);
        CHECK_EQ(cnodes[157].count, 0);
        CHECK_EQ(cnodes[157].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[157].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100010");
        CHECK_EQ(cnodes[330].leftSon.value(), 157);
        CHECK(!cnodes[330].binaryCode.has_value());
        CHECK_EQ(cnodes[160].count, 0);
        CHECK_EQ(cnodes[160].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[160].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100010");
        CHECK_EQ(cnodes[330].rightSon.value(), 160);
        CHECK_EQ(cnodes[328].rightSon.value(), 330);
        CHECK_EQ(cnodes[324].rightSon.value(), 328);
        CHECK_EQ(cnodes[323].leftSon.value(), 324);
        CHECK(!cnodes[323].binaryCode.has_value());
        CHECK_EQ(cnodes[331].count, 0);
        CHECK_EQ(cnodes[332].count, 0);
        CHECK_EQ(cnodes[333].count, 0);
        CHECK_EQ(cnodes[168].count, 0);
        CHECK_EQ(cnodes[168].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[168].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010");
        CHECK_EQ(cnodes[333].leftSon.value(), 168);
        CHECK(!cnodes[333].binaryCode.has_value());
        CHECK_EQ(cnodes[181].count, 0);
        CHECK_EQ(cnodes[181].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[181].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010010");
        CHECK_EQ(cnodes[333].rightSon.value(), 181);
        CHECK_EQ(cnodes[332].leftSon.value(), 333);
        CHECK(!cnodes[332].binaryCode.has_value());
        CHECK_EQ(cnodes[334].count, 0);
        CHECK_EQ(cnodes[187].count, 0);
        CHECK_EQ(cnodes[187].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[187].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010");
        CHECK_EQ(cnodes[334].leftSon.value(), 187);
        CHECK(!cnodes[334].binaryCode.has_value());
        CHECK_EQ(cnodes[242].count, 0);
        CHECK_EQ(cnodes[242].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[242].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010010");
        CHECK_EQ(cnodes[334].rightSon.value(), 242);
        CHECK_EQ(cnodes[332].rightSon.value(), 334);
        CHECK_EQ(cnodes[331].leftSon.value(), 332);
        CHECK(!cnodes[331].binaryCode.has_value());
        CHECK_EQ(cnodes[335].count, 0);
        CHECK_EQ(cnodes[336].count, 0);
        CHECK_EQ(cnodes[15].count, 0);
        CHECK_EQ(cnodes[15].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[15].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010");
        CHECK_EQ(cnodes[336].leftSon.value(), 15);
        CHECK(!cnodes[336].binaryCode.has_value());
        CHECK_EQ(cnodes[77].count, 0);
        CHECK_EQ(cnodes[77].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[77].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110010");
        CHECK_EQ(cnodes[336].rightSon.value(), 77);
        CHECK_EQ(cnodes[335].leftSon.value(), 336);
        CHECK(!cnodes[335].binaryCode.has_value());
        CHECK_EQ(cnodes[337].count, 0);
        CHECK_EQ(cnodes[88].count, 0);
        CHECK_EQ(cnodes[88].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[88].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110010");
        CHECK_EQ(cnodes[337].leftSon.value(), 88);
        CHECK(!cnodes[337].binaryCode.has_value());
        CHECK_EQ(cnodes[136].count, 0);
        CHECK_EQ(cnodes[136].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[136].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110010");
        CHECK_EQ(cnodes[337].rightSon.value(), 136);
        CHECK_EQ(cnodes[335].rightSon.value(), 337);
        CHECK_EQ(cnodes[331].rightSon.value(), 335);
        CHECK_EQ(cnodes[323].rightSon.value(), 331);
        CHECK_EQ(cnodes[322].leftSon.value(), 323);
        CHECK(!cnodes[322].binaryCode.has_value());
        CHECK_EQ(cnodes[338].count, 0);
        CHECK_EQ(cnodes[339].count, 0);
        CHECK_EQ(cnodes[340].count, 0);
        CHECK_EQ(cnodes[341].count, 0);
        CHECK_EQ(cnodes[147].count, 0);
        CHECK_EQ(cnodes[147].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[147].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010");
        CHECK_EQ(cnodes[341].leftSon.value(), 147);
        CHECK(!cnodes[341].binaryCode.has_value());
        CHECK_EQ(cnodes[151].count, 0);
        CHECK_EQ(cnodes[151].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[151].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001010");
        CHECK_EQ(cnodes[341].rightSon.value(), 151);
        CHECK_EQ(cnodes[340].leftSon.value(), 341);
        CHECK(!cnodes[340].binaryCode.has_value());
        CHECK_EQ(cnodes[342].count, 0);
        CHECK_EQ(cnodes[192].count, 0);
        CHECK_EQ(cnodes[192].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[192].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001010");
        CHECK_EQ(cnodes[342].leftSon.value(), 192);
        CHECK(!cnodes[342].binaryCode.has_value());
        CHECK_EQ(cnodes[226].count, 0);
        CHECK_EQ(cnodes[226].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[226].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001010");
        CHECK_EQ(cnodes[342].rightSon.value(), 226);
        CHECK_EQ(cnodes[340].rightSon.value(), 342);
        CHECK_EQ(cnodes[339].leftSon.value(), 340);
        CHECK(!cnodes[339].binaryCode.has_value());
        CHECK_EQ(cnodes[343].count, 0);
        CHECK_EQ(cnodes[344].count, 0);
        CHECK_EQ(cnodes[235].count, 0);
        CHECK_EQ(cnodes[235].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[235].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010");
        CHECK_EQ(cnodes[344].leftSon.value(), 235);
        CHECK(!cnodes[344].binaryCode.has_value());
        CHECK_EQ(cnodes[249].count, 0);
        CHECK_EQ(cnodes[249].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[249].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010");
        CHECK_EQ(cnodes[344].rightSon.value(), 249);
        CHECK_EQ(cnodes[343].leftSon.value(), 344);
        CHECK(!cnodes[343].binaryCode.has_value());
        CHECK_EQ(cnodes[345].count, 0);
        CHECK_EQ(cnodes[252].count, 0);
        CHECK_EQ(cnodes[252].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[252].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101010");
        CHECK_EQ(cnodes[345].leftSon.value(), 252);
        CHECK(!cnodes[345].binaryCode.has_value());
        CHECK_EQ(cnodes[6].count, 0);
        CHECK_EQ(cnodes[6].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[6].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101010");
        CHECK_EQ(cnodes[345].rightSon.value(), 6);
        CHECK_EQ(cnodes[343].rightSon.value(), 345);
        CHECK_EQ(cnodes[339].rightSon.value(), 343);
        CHECK_EQ(cnodes[338].leftSon.value(), 339);
        CHECK(!cnodes[338].binaryCode.has_value());
        CHECK_EQ(cnodes[346].count, 0);
        CHECK_EQ(cnodes[347].count, 0);
        CHECK_EQ(cnodes[348].count, 0);
        CHECK_EQ(cnodes[7].count, 0);
        CHECK_EQ(cnodes[7].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[7].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010");
        CHECK_EQ(cnodes[348].leftSon.value(), 7);
        CHECK(!cnodes[348].binaryCode.has_value());
        CHECK_EQ(cnodes[20].count, 0);
        CHECK_EQ(cnodes[20].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[20].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011010");
        CHECK_EQ(cnodes[348].rightSon.value(), 20);
        CHECK_EQ(cnodes[347].leftSon.value(), 348);
        CHECK(!cnodes[347].binaryCode.has_value());
        CHECK_EQ(cnodes[349].count, 0);
        CHECK_EQ(cnodes[40].count, 0);
        CHECK_EQ(cnodes[40].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[40].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011010");
        CHECK_EQ(cnodes[349].leftSon.value(), 40);
        CHECK(!cnodes[349].binaryCode.has_value());
        CHECK_EQ(cnodes[42].count, 0);
        CHECK_EQ(cnodes[42].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[42].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011010");
        CHECK_EQ(cnodes[349].rightSon.value(), 42);
        CHECK_EQ(cnodes[347].rightSon.value(), 349);
        CHECK_EQ(cnodes[346].leftSon.value(), 347);
        CHECK(!cnodes[346].binaryCode.has_value());
        CHECK_EQ(cnodes[350].count, 0);
        CHECK_EQ(cnodes[351].count, 0);
        CHECK_EQ(cnodes[67].count, 0);
        CHECK_EQ(cnodes[67].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[67].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111010");
        CHECK_EQ(cnodes[351].leftSon.value(), 67);
        CHECK(!cnodes[351].binaryCode.has_value());
        CHECK_EQ(cnodes[76].count, 0);
        CHECK_EQ(cnodes[76].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[76].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111010");
        CHECK_EQ(cnodes[351].rightSon.value(), 76);
        CHECK_EQ(cnodes[350].leftSon.value(), 351);
        CHECK(!cnodes[350].binaryCode.has_value());
        CHECK_EQ(cnodes[352].count, 0);
        CHECK_EQ(cnodes[100].count, 0);
        CHECK_EQ(cnodes[100].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[100].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111010");
        CHECK_EQ(cnodes[352].leftSon.value(), 100);
        CHECK(!cnodes[352].binaryCode.has_value());
        CHECK_EQ(cnodes[107].count, 0);
        CHECK_EQ(cnodes[107].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[107].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111010");
        CHECK_EQ(cnodes[352].rightSon.value(), 107);
        CHECK_EQ(cnodes[350].rightSon.value(), 352);
        CHECK_EQ(cnodes[346].rightSon.value(), 350);
        CHECK_EQ(cnodes[338].rightSon.value(), 346);
        CHECK_EQ(cnodes[322].rightSon.value(), 338);
        CHECK_EQ(cnodes[321].leftSon.value(), 322);
        CHECK(!cnodes[321].binaryCode.has_value());
        CHECK_EQ(cnodes[353].count, 0);
        CHECK_EQ(cnodes[354].count, 0);
        CHECK_EQ(cnodes[355].count, 0);
        CHECK_EQ(cnodes[356].count, 0);
        CHECK_EQ(cnodes[357].count, 0);
        CHECK_EQ(cnodes[126].count, 0);
        CHECK_EQ(cnodes[126].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[126].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110");
        CHECK_EQ(cnodes[357].leftSon.value(), 126);
        CHECK(!cnodes[357].binaryCode.has_value());
        CHECK_EQ(cnodes[129].count, 0);
        CHECK_EQ(cnodes[129].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[129].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000110");
        CHECK_EQ(cnodes[357].rightSon.value(), 129);
        CHECK_EQ(cnodes[356].leftSon.value(), 357);
        CHECK(!cnodes[356].binaryCode.has_value());
        CHECK_EQ(cnodes[358].count, 0);
        CHECK_EQ(cnodes[153].count, 0);
        CHECK_EQ(cnodes[153].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[153].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000110");
        CHECK_EQ(cnodes[358].leftSon.value(), 153);
        CHECK(!cnodes[358].binaryCode.has_value());
        CHECK_EQ(cnodes[163].count, 0);
        CHECK_EQ(cnodes[163].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[163].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000110");
        CHECK_EQ(cnodes[358].rightSon.value(), 163);
        CHECK_EQ(cnodes[356].rightSon.value(), 358);
        CHECK_EQ(cnodes[355].leftSon.value(), 356);
        CHECK(!cnodes[355].binaryCode.has_value());
        CHECK_EQ(cnodes[359].count, 0);
        CHECK_EQ(cnodes[360].count, 0);
        CHECK_EQ(cnodes[172].count, 0);
        CHECK_EQ(cnodes[172].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[172].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100110");
        CHECK_EQ(cnodes[360].leftSon.value(), 172);
        CHECK(!cnodes[360].binaryCode.has_value());
        CHECK_EQ(cnodes[177].count, 0);
        CHECK_EQ(cnodes[177].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[177].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100110");
        CHECK_EQ(cnodes[360].rightSon.value(), 177);
        CHECK_EQ(cnodes[359].leftSon.value(), 360);
        CHECK(!cnodes[359].binaryCode.has_value());
        CHECK_EQ(cnodes[361].count, 0);
        CHECK_EQ(cnodes[182].count, 0);
        CHECK_EQ(cnodes[182].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[182].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100110");
        CHECK_EQ(cnodes[361].leftSon.value(), 182);
        CHECK(!cnodes[361].binaryCode.has_value());
        CHECK_EQ(cnodes[183].count, 0);
        CHECK_EQ(cnodes[183].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[183].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100110");
        CHECK_EQ(cnodes[361].rightSon.value(), 183);
        CHECK_EQ(cnodes[359].rightSon.value(), 361);
        CHECK_EQ(cnodes[355].rightSon.value(), 359);
        CHECK_EQ(cnodes[354].leftSon.value(), 355);
        CHECK(!cnodes[354].binaryCode.has_value());
        CHECK_EQ(cnodes[362].count, 0);
        CHECK_EQ(cnodes[363].count, 0);
        CHECK_EQ(cnodes[364].count, 0);
        CHECK_EQ(cnodes[201].count, 0);
        CHECK_EQ(cnodes[201].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[201].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110");
        CHECK_EQ(cnodes[364].leftSon.value(), 201);
        CHECK(!cnodes[364].binaryCode.has_value());
        CHECK_EQ(cnodes[222].count, 0);
        CHECK_EQ(cnodes[222].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[222].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010110");
        CHECK_EQ(cnodes[364].rightSon.value(), 222);
        CHECK_EQ(cnodes[363].leftSon.value(), 364);
        CHECK(!cnodes[363].binaryCode.has_value());
        CHECK_EQ(cnodes[365].count, 0);
        CHECK_EQ(cnodes[16].count, 0);
        CHECK_EQ(cnodes[16].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[16].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010110");
        CHECK_EQ(cnodes[365].leftSon.value(), 16);
        CHECK(!cnodes[365].binaryCode.has_value());
        CHECK_EQ(cnodes[22].count, 0);
        CHECK_EQ(cnodes[22].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[22].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010110");
        CHECK_EQ(cnodes[365].rightSon.value(), 22);
        CHECK_EQ(cnodes[363].rightSon.value(), 365);
        CHECK_EQ(cnodes[362].leftSon.value(), 363);
        CHECK(!cnodes[362].binaryCode.has_value());
        CHECK_EQ(cnodes[366].count, 0);
        CHECK_EQ(cnodes[367].count, 0);
        CHECK_EQ(cnodes[30].count, 0);
        CHECK_EQ(cnodes[30].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[30].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110110");
        CHECK_EQ(cnodes[367].leftSon.value(), 30);
        CHECK(!cnodes[367].binaryCode.has_value());
        CHECK_EQ(cnodes[33].count, 0);
        CHECK_EQ(cnodes[33].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[33].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110110");
        CHECK_EQ(cnodes[367].rightSon.value(), 33);
        CHECK_EQ(cnodes[366].leftSon.value(), 367);
        CHECK(!cnodes[366].binaryCode.has_value());
        CHECK_EQ(cnodes[368].count, 0);
        CHECK_EQ(cnodes[37].count, 0);
        CHECK_EQ(cnodes[37].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[37].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110110");
        CHECK_EQ(cnodes[368].leftSon.value(), 37);
        CHECK(!cnodes[368].binaryCode.has_value());
        CHECK_EQ(cnodes[56].count, 0);
        CHECK_EQ(cnodes[56].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[56].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110110");
        CHECK_EQ(cnodes[368].rightSon.value(), 56);
        CHECK_EQ(cnodes[366].rightSon.value(), 368);
        CHECK_EQ(cnodes[362].rightSon.value(), 366);
        CHECK_EQ(cnodes[354].rightSon.value(), 362);
        CHECK_EQ(cnodes[353].leftSon.value(), 354);
        CHECK(!cnodes[353].binaryCode.has_value());
        CHECK_EQ(cnodes[369].count, 0);
        CHECK_EQ(cnodes[370].count, 0);
        CHECK_EQ(cnodes[371].count, 0);
        CHECK_EQ(cnodes[372].count, 0);
        CHECK_EQ(cnodes[66].count, 0);
        CHECK_EQ(cnodes[66].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[66].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110");
        CHECK_EQ(cnodes[372].leftSon.value(), 66);
        CHECK(!cnodes[372].binaryCode.has_value());
        CHECK_EQ(cnodes[73].count, 0);
        CHECK_EQ(cnodes[73].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[73].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001110");
        CHECK_EQ(cnodes[372].rightSon.value(), 73);
        CHECK_EQ(cnodes[371].leftSon.value(), 372);
        CHECK(!cnodes[371].binaryCode.has_value());
        CHECK_EQ(cnodes[373].count, 0);
        CHECK_EQ(cnodes[117].count, 0);
        CHECK_EQ(cnodes[117].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[117].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001110");
        CHECK_EQ(cnodes[373].leftSon.value(), 117);
        CHECK(!cnodes[373].binaryCode.has_value());
        CHECK_EQ(cnodes[119].count, 0);
        CHECK_EQ(cnodes[119].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[119].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001110");
        CHECK_EQ(cnodes[373].rightSon.value(), 119);
        CHECK_EQ(cnodes[371].rightSon.value(), 373);
        CHECK_EQ(cnodes[370].leftSon.value(), 371);
        CHECK(!cnodes[370].binaryCode.has_value());
        CHECK_EQ(cnodes[374].count, 0);
        CHECK_EQ(cnodes[375].count, 0);
        CHECK_EQ(cnodes[120].count, 0);
        CHECK_EQ(cnodes[120].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[120].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101110");
        CHECK_EQ(cnodes[375].leftSon.value(), 120);
        CHECK(!cnodes[375].binaryCode.has_value());
        CHECK_EQ(cnodes[121].count, 0);
        CHECK_EQ(cnodes[121].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[121].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101110");
        CHECK_EQ(cnodes[375].rightSon.value(), 121);
        CHECK_EQ(cnodes[374].leftSon.value(), 375);
        CHECK(!cnodes[374].binaryCode.has_value());
        CHECK_EQ(cnodes[376].count, 0);
        CHECK_EQ(cnodes[141].count, 0);
        CHECK_EQ(cnodes[141].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[141].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101110");
        CHECK_EQ(cnodes[376].leftSon.value(), 141);
        CHECK(!cnodes[376].binaryCode.has_value());
        CHECK_EQ(cnodes[154].count, 0);
        CHECK_EQ(cnodes[154].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[154].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101110");
        CHECK_EQ(cnodes[376].rightSon.value(), 154);
        CHECK_EQ(cnodes[374].rightSon.value(), 376);
        CHECK_EQ(cnodes[370].rightSon.value(), 374);
        CHECK_EQ(cnodes[369].leftSon.value(), 370);
        CHECK(!cnodes[369].binaryCode.has_value());
        CHECK_EQ(cnodes[377].count, 0);
        CHECK_EQ(cnodes[378].count, 0);
        CHECK_EQ(cnodes[379].count, 0);
        CHECK_EQ(cnodes[170].count, 0);
        CHECK_EQ(cnodes[170].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[170].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110");
        CHECK_EQ(cnodes[379].leftSon.value(), 170);
        CHECK(!cnodes[379].binaryCode.has_value());
        CHECK_EQ(cnodes[174].count, 0);
        CHECK_EQ(cnodes[174].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[174].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011110");
        CHECK_EQ(cnodes[379].rightSon.value(), 174);
        CHECK_EQ(cnodes[378].leftSon.value(), 379);
        CHECK(!cnodes[378].binaryCode.has_value());
        CHECK_EQ(cnodes[380].count, 0);
        CHECK_EQ(cnodes[224].count, 0);
        CHECK_EQ(cnodes[224].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[224].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011110");
        CHECK_EQ(cnodes[380].leftSon.value(), 224);
        CHECK(!cnodes[380].binaryCode.has_value());
        CHECK_EQ(cnodes[231].count, 0);
        CHECK_EQ(cnodes[231].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[231].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011110");
        CHECK_EQ(cnodes[380].rightSon.value(), 231);
        CHECK_EQ(cnodes[378].rightSon.value(), 380);
        CHECK_EQ(cnodes[377].leftSon.value(), 378);
        CHECK(!cnodes[377].binaryCode.has_value());
        CHECK_EQ(cnodes[381].count, 0);
        CHECK_EQ(cnodes[382].count, 0);
        CHECK_EQ(cnodes[243].count, 0);
        CHECK_EQ(cnodes[243].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[243].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110");
        CHECK_EQ(cnodes[382].leftSon.value(), 243);
        CHECK(!cnodes[382].binaryCode.has_value());
        CHECK_EQ(cnodes[9].count, 0);
        CHECK_EQ(cnodes[9].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[9].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111110");
        CHECK_EQ(cnodes[382].rightSon.value(), 9);
        CHECK_EQ(cnodes[381].leftSon.value(), 382);
        CHECK(!cnodes[381].binaryCode.has_value());
        CHECK_EQ(cnodes[383].count, 0);
        CHECK_EQ(cnodes[44].count, 0);
        CHECK_EQ(cnodes[44].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[44].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110");
        CHECK_EQ(cnodes[383].leftSon.value(), 44);
        CHECK(!cnodes[383].binaryCode.has_value());
        CHECK_EQ(cnodes[52].count, 0);
        CHECK_EQ(cnodes[52].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[52].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110");
        CHECK_EQ(cnodes[383].rightSon.value(), 52);
        CHECK_EQ(cnodes[381].rightSon.value(), 383);
        CHECK_EQ(cnodes[377].rightSon.value(), 381);
        CHECK_EQ(cnodes[369].rightSon.value(), 377);
        CHECK_EQ(cnodes[353].rightSon.value(), 369);
        CHECK_EQ(cnodes[321].rightSon.value(), 353);
        CHECK_EQ(cnodes[258].rightSon.value(), 321);
        CHECK_EQ(cnodes[257].leftSon.value(), 258);
        CHECK(!cnodes[257].binaryCode.has_value());
        CHECK_EQ(cnodes[384].count, 0);
        CHECK_EQ(cnodes[385].count, 0);
        CHECK_EQ(cnodes[386].count, 0);
        CHECK_EQ(cnodes[387].count, 0);
        CHECK_EQ(cnodes[388].count, 0);
        CHECK_EQ(cnodes[389].count, 0);
        CHECK_EQ(cnodes[390].count, 0);
        CHECK_EQ(cnodes[103].count, 0);
        CHECK_EQ(cnodes[103].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[103].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001");
        CHECK_EQ(cnodes[390].leftSon.value(), 103);
        CHECK(!cnodes[390].binaryCode.has_value());
        CHECK_EQ(cnodes[166].count, 0);
        CHECK_EQ(cnodes[166].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[166].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001");
        CHECK_EQ(cnodes[390].rightSon.value(), 166);
        CHECK_EQ(cnodes[389].leftSon.value(), 390);
        CHECK(!cnodes[389].binaryCode.has_value());
        CHECK_EQ(cnodes[391].count, 0);
        CHECK_EQ(cnodes[189].count, 0);
        CHECK_EQ(cnodes[189].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[189].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001");
        CHECK_EQ(cnodes[391].leftSon.value(), 189);
        CHECK(!cnodes[391].binaryCode.has_value());
        CHECK_EQ(cnodes[191].count, 0);
        CHECK_EQ(cnodes[191].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[191].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000001");
        CHECK_EQ(cnodes[391].rightSon.value(), 191);
        CHECK_EQ(cnodes[389].rightSon.value(), 391);
        CHECK_EQ(cnodes[388].leftSon.value(), 389);
        CHECK(!cnodes[388].binaryCode.has_value());
        CHECK_EQ(cnodes[392].count, 0);
        CHECK_EQ(cnodes[393].count, 0);
        CHECK_EQ(cnodes[194].count, 0);
        CHECK_EQ(cnodes[194].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[194].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001");
        CHECK_EQ(cnodes[393].leftSon.value(), 194);
        CHECK(!cnodes[393].binaryCode.has_value());
        CHECK_EQ(cnodes[200].count, 0);
        CHECK_EQ(cnodes[200].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[200].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100001");
        CHECK_EQ(cnodes[393].rightSon.value(), 200);
        CHECK_EQ(cnodes[392].leftSon.value(), 393);
        CHECK(!cnodes[392].binaryCode.has_value());
        CHECK_EQ(cnodes[394].count, 0);
        CHECK_EQ(cnodes[204].count, 0);
        CHECK_EQ(cnodes[204].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[204].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100001");
        CHECK_EQ(cnodes[394].leftSon.value(), 204);
        CHECK(!cnodes[394].binaryCode.has_value());
        CHECK_EQ(cnodes[210].count, 0);
        CHECK_EQ(cnodes[210].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[210].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100001");
        CHECK_EQ(cnodes[394].rightSon.value(), 210);
        CHECK_EQ(cnodes[392].rightSon.value(), 394);
        CHECK_EQ(cnodes[388].rightSon.value(), 392);
        CHECK_EQ(cnodes[387].leftSon.value(), 388);
        CHECK(!cnodes[387].binaryCode.has_value());
        CHECK_EQ(cnodes[395].count, 0);
        CHECK_EQ(cnodes[396].count, 0);
        CHECK_EQ(cnodes[397].count, 0);
        CHECK_EQ(cnodes[211].count, 0);
        CHECK_EQ(cnodes[211].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[211].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001");
        CHECK_EQ(cnodes[397].leftSon.value(), 211);
        CHECK(!cnodes[397].binaryCode.has_value());
        CHECK_EQ(cnodes[223].count, 0);
        CHECK_EQ(cnodes[223].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[223].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010001");
        CHECK_EQ(cnodes[397].rightSon.value(), 223);
        CHECK_EQ(cnodes[396].leftSon.value(), 397);
        CHECK(!cnodes[396].binaryCode.has_value());
        CHECK_EQ(cnodes[398].count, 0);
        CHECK_EQ(cnodes[239].count, 0);
        CHECK_EQ(cnodes[239].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[239].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010001");
        CHECK_EQ(cnodes[398].leftSon.value(), 239);
        CHECK(!cnodes[398].binaryCode.has_value());
        CHECK_EQ(cnodes[244].count, 0);
        CHECK_EQ(cnodes[244].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[244].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010001");
        CHECK_EQ(cnodes[398].rightSon.value(), 244);
        CHECK_EQ(cnodes[396].rightSon.value(), 398);
        CHECK_EQ(cnodes[395].leftSon.value(), 396);
        CHECK(!cnodes[395].binaryCode.has_value());
        CHECK_EQ(cnodes[399].count, 0);
        CHECK_EQ(cnodes[400].count, 0);
        CHECK_EQ(cnodes[245].count, 0);
        CHECK_EQ(cnodes[245].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[245].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110001");
        CHECK_EQ(cnodes[400].leftSon.value(), 245);
        CHECK(!cnodes[400].binaryCode.has_value());
        CHECK_EQ(cnodes[253].count, 0);
        CHECK_EQ(cnodes[253].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[253].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110001");
        CHECK_EQ(cnodes[400].rightSon.value(), 253);
        CHECK_EQ(cnodes[399].leftSon.value(), 400);
        CHECK(!cnodes[399].binaryCode.has_value());
        CHECK_EQ(cnodes[401].count, 0);
        CHECK_EQ(cnodes[255].count, 0);
        CHECK_EQ(cnodes[255].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[255].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110001");
        CHECK_EQ(cnodes[401].leftSon.value(), 255);
        CHECK(!cnodes[401].binaryCode.has_value());
        CHECK_EQ(cnodes[17].count, 0);
        CHECK_EQ(cnodes[17].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[17].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110001");
        CHECK_EQ(cnodes[401].rightSon.value(), 17);
        CHECK_EQ(cnodes[399].rightSon.value(), 401);
        CHECK_EQ(cnodes[395].rightSon.value(), 399);
        CHECK_EQ(cnodes[387].rightSon.value(), 395);
        CHECK_EQ(cnodes[386].leftSon.value(), 387);
        CHECK(!cnodes[386].binaryCode.has_value());
        CHECK_EQ(cnodes[402].count, 0);
        CHECK_EQ(cnodes[403].count, 0);
        CHECK_EQ(cnodes[404].count, 0);
        CHECK_EQ(cnodes[405].count, 0);
        CHECK_EQ(cnodes[26].count, 0);
        CHECK_EQ(cnodes[26].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[26].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001");
        CHECK_EQ(cnodes[405].leftSon.value(), 26);
        CHECK(!cnodes[405].binaryCode.has_value());
        CHECK_EQ(cnodes[32].count, 0);
        CHECK_EQ(cnodes[32].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[32].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001001");
        CHECK_EQ(cnodes[405].rightSon.value(), 32);
        CHECK_EQ(cnodes[404].leftSon.value(), 405);
        CHECK(!cnodes[404].binaryCode.has_value());
        CHECK_EQ(cnodes[406].count, 0);
        CHECK_EQ(cnodes[41].count, 0);
        CHECK_EQ(cnodes[41].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[41].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001001");
        CHECK_EQ(cnodes[406].leftSon.value(), 41);
        CHECK(!cnodes[406].binaryCode.has_value());
        CHECK_EQ(cnodes[46].count, 0);
        CHECK_EQ(cnodes[46].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[46].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001001");
        CHECK_EQ(cnodes[406].rightSon.value(), 46);
        CHECK_EQ(cnodes[404].rightSon.value(), 406);
        CHECK_EQ(cnodes[403].leftSon.value(), 404);
        CHECK(!cnodes[403].binaryCode.has_value());
        CHECK_EQ(cnodes[407].count, 0);
        CHECK_EQ(cnodes[408].count, 0);
        CHECK_EQ(cnodes[97].count, 0);
        CHECK_EQ(cnodes[97].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[97].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101001");
        CHECK_EQ(cnodes[408].leftSon.value(), 97);
        CHECK(!cnodes[408].binaryCode.has_value());
        CHECK_EQ(cnodes[113].count, 0);
        CHECK_EQ(cnodes[113].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[113].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101001");
        CHECK_EQ(cnodes[408].rightSon.value(), 113);
        CHECK_EQ(cnodes[407].leftSon.value(), 408);
        CHECK(!cnodes[407].binaryCode.has_value());
        CHECK_EQ(cnodes[409].count, 0);
        CHECK_EQ(cnodes[213].count, 0);
        CHECK_EQ(cnodes[213].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[213].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101001");
        CHECK_EQ(cnodes[409].leftSon.value(), 213);
        CHECK(!cnodes[409].binaryCode.has_value());
        CHECK_EQ(cnodes[241].count, 0);
        CHECK_EQ(cnodes[241].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[241].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101001");
        CHECK_EQ(cnodes[409].rightSon.value(), 241);
        CHECK_EQ(cnodes[407].rightSon.value(), 409);
        CHECK_EQ(cnodes[403].rightSon.value(), 407);
        CHECK_EQ(cnodes[402].leftSon.value(), 403);
        CHECK(!cnodes[402].binaryCode.has_value());
        CHECK_EQ(cnodes[410].count, 0);
        CHECK_EQ(cnodes[411].count, 0);
        CHECK_EQ(cnodes[412].count, 0);
        CHECK_EQ(cnodes[246].count, 0);
        CHECK_EQ(cnodes[246].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[246].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001");
        CHECK_EQ(cnodes[412].leftSon.value(), 246);
        CHECK(!cnodes[412].binaryCode.has_value());
        CHECK_EQ(cnodes[14].count, 0);
        CHECK_EQ(cnodes[14].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[14].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011001");
        CHECK_EQ(cnodes[412].rightSon.value(), 14);
        CHECK_EQ(cnodes[411].leftSon.value(), 412);
        CHECK(!cnodes[411].binaryCode.has_value());
        CHECK_EQ(cnodes[413].count, 0);
        CHECK_EQ(cnodes[27].count, 0);
        CHECK_EQ(cnodes[27].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[27].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011001");
        CHECK_EQ(cnodes[413].leftSon.value(), 27);
        CHECK(!cnodes[413].binaryCode.has_value());
        CHECK_EQ(cnodes[28].count, 0);
        CHECK_EQ(cnodes[28].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[28].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011001");
        CHECK_EQ(cnodes[413].rightSon.value(), 28);
        CHECK_EQ(cnodes[411].rightSon.value(), 413);
        CHECK_EQ(cnodes[410].leftSon.value(), 411);
        CHECK(!cnodes[410].binaryCode.has_value());
        CHECK_EQ(cnodes[414].count, 0);
        CHECK_EQ(cnodes[415].count, 0);
        CHECK_EQ(cnodes[31].count, 0);
        CHECK_EQ(cnodes[31].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[31].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001");
        CHECK_EQ(cnodes[415].leftSon.value(), 31);
        CHECK(!cnodes[415].binaryCode.has_value());
        CHECK_EQ(cnodes[36].count, 0);
        CHECK_EQ(cnodes[36].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[36].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111001");
        CHECK_EQ(cnodes[415].rightSon.value(), 36);
        CHECK_EQ(cnodes[414].leftSon.value(), 415);
        CHECK(!cnodes[414].binaryCode.has_value());
        CHECK_EQ(cnodes[416].count, 0);
        CHECK_EQ(cnodes[43].count, 0);
        CHECK_EQ(cnodes[43].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[43].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111001");
        CHECK_EQ(cnodes[416].leftSon.value(), 43);
        CHECK(!cnodes[416].binaryCode.has_value());
        CHECK_EQ(cnodes[45].count, 0);
        CHECK_EQ(cnodes[45].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[45].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111001");
        CHECK_EQ(cnodes[416].rightSon.value(), 45);
        CHECK_EQ(cnodes[414].rightSon.value(), 416);
        CHECK_EQ(cnodes[410].rightSon.value(), 414);
        CHECK_EQ(cnodes[402].rightSon.value(), 410);
        CHECK_EQ(cnodes[386].rightSon.value(), 402);
        CHECK_EQ(cnodes[385].leftSon.value(), 386);
        CHECK(!cnodes[385].binaryCode.has_value());
        CHECK_EQ(cnodes[417].count, 0);
        CHECK_EQ(cnodes[418].count, 0);
        CHECK_EQ(cnodes[419].count, 0);
        CHECK_EQ(cnodes[420].count, 0);
        CHECK_EQ(cnodes[421].count, 0);
        CHECK_EQ(cnodes[47].count, 0);
        CHECK_EQ(cnodes[47].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[47].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101");
        CHECK_EQ(cnodes[421].leftSon.value(), 47);
        CHECK(!cnodes[421].binaryCode.has_value());
        CHECK_EQ(cnodes[51].count, 0);
        CHECK_EQ(cnodes[51].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[51].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000101");
        CHECK_EQ(cnodes[421].rightSon.value(), 51);
        CHECK_EQ(cnodes[420].leftSon.value(), 421);
        CHECK(!cnodes[420].binaryCode.has_value());
        CHECK_EQ(cnodes[422].count, 0);
        CHECK_EQ(cnodes[58].count, 0);
        CHECK_EQ(cnodes[58].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[58].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000101");
        CHECK_EQ(cnodes[422].leftSon.value(), 58);
        CHECK(!cnodes[422].binaryCode.has_value());
        CHECK_EQ(cnodes[69].count, 0);
        CHECK_EQ(cnodes[69].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[69].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000101");
        CHECK_EQ(cnodes[422].rightSon.value(), 69);
        CHECK_EQ(cnodes[420].rightSon.value(), 422);
        CHECK_EQ(cnodes[419].leftSon.value(), 420);
        CHECK(!cnodes[419].binaryCode.has_value());
        CHECK_EQ(cnodes[423].count, 0);
        CHECK_EQ(cnodes[424].count, 0);
        CHECK_EQ(cnodes[72].count, 0);
        CHECK_EQ(cnodes[72].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[72].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100101");
        CHECK_EQ(cnodes[424].leftSon.value(), 72);
        CHECK(!cnodes[424].binaryCode.has_value());
        CHECK_EQ(cnodes[109].count, 0);
        CHECK_EQ(cnodes[109].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[109].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100101");
        CHECK_EQ(cnodes[424].rightSon.value(), 109);
        CHECK_EQ(cnodes[423].leftSon.value(), 424);
        CHECK(!cnodes[423].binaryCode.has_value());
        CHECK_EQ(cnodes[425].count, 0);
        CHECK_EQ(cnodes[125].count, 0);
        CHECK_EQ(cnodes[125].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[125].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100101");
        CHECK_EQ(cnodes[425].leftSon.value(), 125);
        CHECK(!cnodes[425].binaryCode.has_value());
        CHECK_EQ(cnodes[167].count, 0);
        CHECK_EQ(cnodes[167].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[167].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100101");
        CHECK_EQ(cnodes[425].rightSon.value(), 167);
        CHECK_EQ(cnodes[423].rightSon.value(), 425);
        CHECK_EQ(cnodes[419].rightSon.value(), 423);
        CHECK_EQ(cnodes[418].leftSon.value(), 419);
        CHECK(!cnodes[418].binaryCode.has_value());
        CHECK_EQ(cnodes[426].count, 0);
        CHECK_EQ(cnodes[427].count, 0);
        CHECK_EQ(cnodes[428].count, 0);
        CHECK_EQ(cnodes[190].count, 0);
        CHECK_EQ(cnodes[190].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[190].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101");
        CHECK_EQ(cnodes[428].leftSon.value(), 190);
        CHECK(!cnodes[428].binaryCode.has_value());
        CHECK_EQ(cnodes[199].count, 0);
        CHECK_EQ(cnodes[199].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[199].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010101");
        CHECK_EQ(cnodes[428].rightSon.value(), 199);
        CHECK_EQ(cnodes[427].leftSon.value(), 428);
        CHECK(!cnodes[427].binaryCode.has_value());
        CHECK_EQ(cnodes[429].count, 0);
        CHECK_EQ(cnodes[220].count, 0);
        CHECK_EQ(cnodes[220].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[220].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101");
        CHECK_EQ(cnodes[429].leftSon.value(), 220);
        CHECK(!cnodes[429].binaryCode.has_value());
        CHECK_EQ(cnodes[236].count, 0);
        CHECK_EQ(cnodes[236].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[236].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010101");
        CHECK_EQ(cnodes[429].rightSon.value(), 236);
        CHECK_EQ(cnodes[427].rightSon.value(), 429);
        CHECK_EQ(cnodes[426].leftSon.value(), 427);
        CHECK(!cnodes[426].binaryCode.has_value());
        CHECK_EQ(cnodes[430].count, 0);
        CHECK_EQ(cnodes[431].count, 0);
        CHECK_EQ(cnodes[237].count, 0);
        CHECK_EQ(cnodes[237].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[237].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110101");
        CHECK_EQ(cnodes[431].leftSon.value(), 237);
        CHECK(!cnodes[431].binaryCode.has_value());
        CHECK_EQ(cnodes[12].count, 0);
        CHECK_EQ(cnodes[12].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[12].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110101");
        CHECK_EQ(cnodes[431].rightSon.value(), 12);
        CHECK_EQ(cnodes[430].leftSon.value(), 431);
        CHECK(!cnodes[430].binaryCode.has_value());
        CHECK_EQ(cnodes[432].count, 0);
        CHECK_EQ(cnodes[53].count, 0);
        CHECK_EQ(cnodes[53].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[53].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110101");
        CHECK_EQ(cnodes[432].leftSon.value(), 53);
        CHECK(!cnodes[432].binaryCode.has_value());
        CHECK_EQ(cnodes[61].count, 0);
        CHECK_EQ(cnodes[61].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[61].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110101");
        CHECK_EQ(cnodes[432].rightSon.value(), 61);
        CHECK_EQ(cnodes[430].rightSon.value(), 432);
        CHECK_EQ(cnodes[426].rightSon.value(), 430);
        CHECK_EQ(cnodes[418].rightSon.value(), 426);
        CHECK_EQ(cnodes[417].leftSon.value(), 418);
        CHECK(!cnodes[417].binaryCode.has_value());
        CHECK_EQ(cnodes[433].count, 0);
        CHECK_EQ(cnodes[434].count, 0);
        CHECK_EQ(cnodes[435].count, 0);
        CHECK_EQ(cnodes[436].count, 0);
        CHECK_EQ(cnodes[63].count, 0);
        CHECK_EQ(cnodes[63].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[63].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101");
        CHECK_EQ(cnodes[436].leftSon.value(), 63);
        CHECK(!cnodes[436].binaryCode.has_value());
        CHECK_EQ(cnodes[71].count, 0);
        CHECK_EQ(cnodes[71].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[71].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001101");
        CHECK_EQ(cnodes[436].rightSon.value(), 71);
        CHECK_EQ(cnodes[435].leftSon.value(), 436);
        CHECK(!cnodes[435].binaryCode.has_value());
        CHECK_EQ(cnodes[437].count, 0);
        CHECK_EQ(cnodes[95].count, 0);
        CHECK_EQ(cnodes[95].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[95].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001101");
        CHECK_EQ(cnodes[437].leftSon.value(), 95);
        CHECK(!cnodes[437].binaryCode.has_value());
        CHECK_EQ(cnodes[161].count, 0);
        CHECK_EQ(cnodes[161].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[161].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001101");
        CHECK_EQ(cnodes[437].rightSon.value(), 161);
        CHECK_EQ(cnodes[435].rightSon.value(), 437);
        CHECK_EQ(cnodes[434].leftSon.value(), 435);
        CHECK(!cnodes[434].binaryCode.has_value());
        CHECK_EQ(cnodes[438].count, 0);
        CHECK_EQ(cnodes[439].count, 0);
        CHECK_EQ(cnodes[193].count, 0);
        CHECK_EQ(cnodes[193].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[193].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101101");
        CHECK_EQ(cnodes[439].leftSon.value(), 193);
        CHECK(!cnodes[439].binaryCode.has_value());
        CHECK_EQ(cnodes[197].count, 0);
        CHECK_EQ(cnodes[197].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[197].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101101");
        CHECK_EQ(cnodes[439].rightSon.value(), 197);
        CHECK_EQ(cnodes[438].leftSon.value(), 439);
        CHECK(!cnodes[438].binaryCode.has_value());
        CHECK_EQ(cnodes[440].count, 0);
        CHECK_EQ(cnodes[203].count, 0);
        CHECK_EQ(cnodes[203].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[203].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101101");
        CHECK_EQ(cnodes[440].leftSon.value(), 203);
        CHECK(!cnodes[440].binaryCode.has_value());
        CHECK_EQ(cnodes[208].count, 0);
        CHECK_EQ(cnodes[208].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[208].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101101");
        CHECK_EQ(cnodes[440].rightSon.value(), 208);
        CHECK_EQ(cnodes[438].rightSon.value(), 440);
        CHECK_EQ(cnodes[434].rightSon.value(), 438);
        CHECK_EQ(cnodes[433].leftSon.value(), 434);
        CHECK(!cnodes[433].binaryCode.has_value());
        CHECK_EQ(cnodes[441].count, 0);
        CHECK_EQ(cnodes[442].count, 0);
        CHECK_EQ(cnodes[443].count, 0);
        CHECK_EQ(cnodes[234].count, 0);
        CHECK_EQ(cnodes[234].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[234].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101");
        CHECK_EQ(cnodes[443].leftSon.value(), 234);
        CHECK(!cnodes[443].binaryCode.has_value());
        CHECK_EQ(cnodes[38].count, 0);
        CHECK_EQ(cnodes[38].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[38].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011101");
        CHECK_EQ(cnodes[443].rightSon.value(), 38);
        CHECK_EQ(cnodes[442].leftSon.value(), 443);
        CHECK(!cnodes[442].binaryCode.has_value());
        CHECK_EQ(cnodes[444].count, 0);
        CHECK_EQ(cnodes[60].count, 0);
        CHECK_EQ(cnodes[60].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[60].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011101");
        CHECK_EQ(cnodes[444].leftSon.value(), 60);
        CHECK(!cnodes[444].binaryCode.has_value());
        CHECK_EQ(cnodes[62].count, 0);
        CHECK_EQ(cnodes[62].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[62].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011101");
        CHECK_EQ(cnodes[444].rightSon.value(), 62);
        CHECK_EQ(cnodes[442].rightSon.value(), 444);
        CHECK_EQ(cnodes[441].leftSon.value(), 442);
        CHECK(!cnodes[441].binaryCode.has_value());
        CHECK_EQ(cnodes[445].count, 0);
        CHECK_EQ(cnodes[446].count, 0);
        CHECK_EQ(cnodes[65].count, 0);
        CHECK_EQ(cnodes[65].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[65].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111101");
        CHECK_EQ(cnodes[446].leftSon.value(), 65);
        CHECK(!cnodes[446].binaryCode.has_value());
        CHECK_EQ(cnodes[68].count, 0);
        CHECK_EQ(cnodes[68].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[68].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111101");
        CHECK_EQ(cnodes[446].rightSon.value(), 68);
        CHECK_EQ(cnodes[445].leftSon.value(), 446);
        CHECK(!cnodes[445].binaryCode.has_value());
        CHECK_EQ(cnodes[447].count, 0);
        CHECK_EQ(cnodes[86].count, 0);
        CHECK_EQ(cnodes[86].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[86].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111101");
        CHECK_EQ(cnodes[447].leftSon.value(), 86);
        CHECK(!cnodes[447].binaryCode.has_value());
        CHECK_EQ(cnodes[112].count, 0);
        CHECK_EQ(cnodes[112].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[112].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111101");
        CHECK_EQ(cnodes[447].rightSon.value(), 112);
        CHECK_EQ(cnodes[445].rightSon.value(), 447);
        CHECK_EQ(cnodes[441].rightSon.value(), 445);
        CHECK_EQ(cnodes[433].rightSon.value(), 441);
        CHECK_EQ(cnodes[417].rightSon.value(), 433);
        CHECK_EQ(cnodes[385].rightSon.value(), 417);
        CHECK_EQ(cnodes[384].leftSon.value(), 385);
        CHECK(!cnodes[384].binaryCode.has_value());
        CHECK_EQ(cnodes[448].count, 0);
        CHECK_EQ(cnodes[449].count, 0);
        CHECK_EQ(cnodes[450].count, 0);
        CHECK_EQ(cnodes[451].count, 0);
        CHECK_EQ(cnodes[452].count, 0);
        CHECK_EQ(cnodes[453].count, 0);
        CHECK_EQ(cnodes[135].count, 0);
        CHECK_EQ(cnodes[135].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[135].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011");
        CHECK_EQ(cnodes[453].leftSon.value(), 135);
        CHECK(!cnodes[453].binaryCode.has_value());
        CHECK_EQ(cnodes[144].count, 0);
        CHECK_EQ(cnodes[144].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[144].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000011");
        CHECK_EQ(cnodes[453].rightSon.value(), 144);
        CHECK_EQ(cnodes[452].leftSon.value(), 453);
        CHECK(!cnodes[452].binaryCode.has_value());
        CHECK_EQ(cnodes[454].count, 0);
        CHECK_EQ(cnodes[149].count, 0);
        CHECK_EQ(cnodes[149].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[149].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000011");
        CHECK_EQ(cnodes[454].leftSon.value(), 149);
        CHECK(!cnodes[454].binaryCode.has_value());
        CHECK_EQ(cnodes[184].count, 0);
        CHECK_EQ(cnodes[184].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[184].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000011");
        CHECK_EQ(cnodes[454].rightSon.value(), 184);
        CHECK_EQ(cnodes[452].rightSon.value(), 454);
        CHECK_EQ(cnodes[451].leftSon.value(), 452);
        CHECK(!cnodes[451].binaryCode.has_value());
        CHECK_EQ(cnodes[455].count, 0);
        CHECK_EQ(cnodes[456].count, 0);
        CHECK_EQ(cnodes[5].count, 0);
        CHECK_EQ(cnodes[5].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[5].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100011");
        CHECK_EQ(cnodes[456].leftSon.value(), 5);
        CHECK(!cnodes[456].binaryCode.has_value());
        CHECK_EQ(cnodes[8].count, 0);
        CHECK_EQ(cnodes[8].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[8].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100011");
        CHECK_EQ(cnodes[456].rightSon.value(), 8);
        CHECK_EQ(cnodes[455].leftSon.value(), 456);
        CHECK(!cnodes[455].binaryCode.has_value());
        CHECK_EQ(cnodes[457].count, 0);
        CHECK_EQ(cnodes[10].count, 0);
        CHECK_EQ(cnodes[10].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[10].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100011");
        CHECK_EQ(cnodes[457].leftSon.value(), 10);
        CHECK(!cnodes[457].binaryCode.has_value());
        CHECK_EQ(cnodes[83].count, 0);
        CHECK_EQ(cnodes[83].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[83].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100011");
        CHECK_EQ(cnodes[457].rightSon.value(), 83);
        CHECK_EQ(cnodes[455].rightSon.value(), 457);
        CHECK_EQ(cnodes[451].rightSon.value(), 455);
        CHECK_EQ(cnodes[450].leftSon.value(), 451);
        CHECK(!cnodes[450].binaryCode.has_value());
        CHECK_EQ(cnodes[458].count, 0);
        CHECK_EQ(cnodes[459].count, 0);
        CHECK_EQ(cnodes[460].count, 0);
        CHECK_EQ(cnodes[106].count, 0);
        CHECK_EQ(cnodes[106].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[106].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011");
        CHECK_EQ(cnodes[460].leftSon.value(), 106);
        CHECK(!cnodes[460].binaryCode.has_value());
        CHECK_EQ(cnodes[116].count, 0);
        CHECK_EQ(cnodes[116].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[116].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010011");
        CHECK_EQ(cnodes[460].rightSon.value(), 116);
        CHECK_EQ(cnodes[459].leftSon.value(), 460);
        CHECK(!cnodes[459].binaryCode.has_value());
        CHECK_EQ(cnodes[461].count, 0);
        CHECK_EQ(cnodes[130].count, 0);
        CHECK_EQ(cnodes[130].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[130].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010011");
        CHECK_EQ(cnodes[461].leftSon.value(), 130);
        CHECK(!cnodes[461].binaryCode.has_value());
        CHECK_EQ(cnodes[134].count, 0);
        CHECK_EQ(cnodes[134].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[134].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010011");
        CHECK_EQ(cnodes[461].rightSon.value(), 134);
        CHECK_EQ(cnodes[459].rightSon.value(), 461);
        CHECK_EQ(cnodes[458].leftSon.value(), 459);
        CHECK(!cnodes[458].binaryCode.has_value());
        CHECK_EQ(cnodes[462].count, 0);
        CHECK_EQ(cnodes[463].count, 0);
        CHECK_EQ(cnodes[186].count, 0);
        CHECK_EQ(cnodes[186].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[186].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110011");
        CHECK_EQ(cnodes[463].leftSon.value(), 186);
        CHECK(!cnodes[463].binaryCode.has_value());
        CHECK_EQ(cnodes[198].count, 0);
        CHECK_EQ(cnodes[198].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[198].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110011");
        CHECK_EQ(cnodes[463].rightSon.value(), 198);
        CHECK_EQ(cnodes[462].leftSon.value(), 463);
        CHECK(!cnodes[462].binaryCode.has_value());
        CHECK_EQ(cnodes[464].count, 0);
        CHECK_EQ(cnodes[202].count, 0);
        CHECK_EQ(cnodes[202].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[202].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110011");
        CHECK_EQ(cnodes[464].leftSon.value(), 202);
        CHECK(!cnodes[464].binaryCode.has_value());
        CHECK_EQ(cnodes[229].count, 0);
        CHECK_EQ(cnodes[229].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[229].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110011");
        CHECK_EQ(cnodes[464].rightSon.value(), 229);
        CHECK_EQ(cnodes[462].rightSon.value(), 464);
        CHECK_EQ(cnodes[458].rightSon.value(), 462);
        CHECK_EQ(cnodes[450].rightSon.value(), 458);
        CHECK_EQ(cnodes[449].leftSon.value(), 450);
        CHECK(!cnodes[449].binaryCode.has_value());
        CHECK_EQ(cnodes[465].count, 0);
        CHECK_EQ(cnodes[466].count, 0);
        CHECK_EQ(cnodes[467].count, 0);
        CHECK_EQ(cnodes[468].count, 0);
        CHECK_EQ(cnodes[25].count, 0);
        CHECK_EQ(cnodes[25].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[25].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011");
        CHECK_EQ(cnodes[468].leftSon.value(), 25);
        CHECK(!cnodes[468].binaryCode.has_value());
        CHECK_EQ(cnodes[29].count, 0);
        CHECK_EQ(cnodes[29].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[29].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001011");
        CHECK_EQ(cnodes[468].rightSon.value(), 29);
        CHECK_EQ(cnodes[467].leftSon.value(), 468);
        CHECK(!cnodes[467].binaryCode.has_value());
        CHECK_EQ(cnodes[469].count, 0);
        CHECK_EQ(cnodes[104].count, 0);
        CHECK_EQ(cnodes[104].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[104].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001011");
        CHECK_EQ(cnodes[469].leftSon.value(), 104);
        CHECK(!cnodes[469].binaryCode.has_value());
        CHECK_EQ(cnodes[118].count, 0);
        CHECK_EQ(cnodes[118].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[118].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001011");
        CHECK_EQ(cnodes[469].rightSon.value(), 118);
        CHECK_EQ(cnodes[467].rightSon.value(), 469);
        CHECK_EQ(cnodes[466].leftSon.value(), 467);
        CHECK(!cnodes[466].binaryCode.has_value());
        CHECK_EQ(cnodes[470].count, 0);
        CHECK_EQ(cnodes[471].count, 0);
        CHECK_EQ(cnodes[155].count, 0);
        CHECK_EQ(cnodes[155].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[155].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011");
        CHECK_EQ(cnodes[471].leftSon.value(), 155);
        CHECK(!cnodes[471].binaryCode.has_value());
        CHECK_EQ(cnodes[173].count, 0);
        CHECK_EQ(cnodes[173].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[173].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101011");
        CHECK_EQ(cnodes[471].rightSon.value(), 173);
        CHECK_EQ(cnodes[470].leftSon.value(), 471);
        CHECK(!cnodes[470].binaryCode.has_value());
        CHECK_EQ(cnodes[472].count, 0);
        CHECK_EQ(cnodes[188].count, 0);
        CHECK_EQ(cnodes[188].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[188].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101011");
        CHECK_EQ(cnodes[472].leftSon.value(), 188);
        CHECK(!cnodes[472].binaryCode.has_value());
        CHECK_EQ(cnodes[207].count, 0);
        CHECK_EQ(cnodes[207].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[207].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101011");
        CHECK_EQ(cnodes[472].rightSon.value(), 207);
        CHECK_EQ(cnodes[470].rightSon.value(), 472);
        CHECK_EQ(cnodes[466].rightSon.value(), 470);
        CHECK_EQ(cnodes[465].leftSon.value(), 466);
        CHECK(!cnodes[465].binaryCode.has_value());
        CHECK_EQ(cnodes[473].count, 0);
        CHECK_EQ(cnodes[474].count, 0);
        CHECK_EQ(cnodes[475].count, 0);
        CHECK_EQ(cnodes[232].count, 0);
        CHECK_EQ(cnodes[232].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[232].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011");
        CHECK_EQ(cnodes[475].leftSon.value(), 232);
        CHECK(!cnodes[475].binaryCode.has_value());
        CHECK_EQ(cnodes[11].count, 0);
        CHECK_EQ(cnodes[11].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[11].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011011");
        CHECK_EQ(cnodes[475].rightSon.value(), 11);
        CHECK_EQ(cnodes[474].leftSon.value(), 475);
        CHECK(!cnodes[474].binaryCode.has_value());
        CHECK_EQ(cnodes[476].count, 0);
        CHECK_EQ(cnodes[57].count, 0);
        CHECK_EQ(cnodes[57].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[57].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011011");
        CHECK_EQ(cnodes[476].leftSon.value(), 57);
        CHECK(!cnodes[476].binaryCode.has_value());
        CHECK_EQ(cnodes[82].count, 0);
        CHECK_EQ(cnodes[82].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[82].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011011");
        CHECK_EQ(cnodes[476].rightSon.value(), 82);
        CHECK_EQ(cnodes[474].rightSon.value(), 476);
        CHECK_EQ(cnodes[473].leftSon.value(), 474);
        CHECK(!cnodes[473].binaryCode.has_value());
        CHECK_EQ(cnodes[477].count, 0);
        CHECK_EQ(cnodes[478].count, 0);
        CHECK_EQ(cnodes[98].count, 0);
        CHECK_EQ(cnodes[98].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[98].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111011");
        CHECK_EQ(cnodes[478].leftSon.value(), 98);
        CHECK(!cnodes[478].binaryCode.has_value());
        CHECK_EQ(cnodes[105].count, 0);
        CHECK_EQ(cnodes[105].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[105].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111011");
        CHECK_EQ(cnodes[478].rightSon.value(), 105);
        CHECK_EQ(cnodes[477].leftSon.value(), 478);
        CHECK(!cnodes[477].binaryCode.has_value());
        CHECK_EQ(cnodes[479].count, 0);
        CHECK_EQ(cnodes[230].count, 0);
        CHECK_EQ(cnodes[230].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[230].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111011");
        CHECK_EQ(cnodes[479].leftSon.value(), 230);
        CHECK(!cnodes[479].binaryCode.has_value());
        CHECK_EQ(cnodes[247].count, 0);
        CHECK_EQ(cnodes[247].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[247].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111011");
        CHECK_EQ(cnodes[479].rightSon.value(), 247);
        CHECK_EQ(cnodes[477].rightSon.value(), 479);
        CHECK_EQ(cnodes[473].rightSon.value(), 477);
        CHECK_EQ(cnodes[465].rightSon.value(), 473);
        CHECK_EQ(cnodes[449].rightSon.value(), 465);
        CHECK_EQ(cnodes[448].leftSon.value(), 449);
        CHECK(!cnodes[448].binaryCode.has_value());
        CHECK_EQ(cnodes[480].count, 0);
        CHECK_EQ(cnodes[481].count, 0);
        CHECK_EQ(cnodes[482].count, 0);
        CHECK_EQ(cnodes[483].count, 0);
        CHECK_EQ(cnodes[484].count, 0);
        CHECK_EQ(cnodes[84].count, 0);
        CHECK_EQ(cnodes[84].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[84].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111");
        CHECK_EQ(cnodes[484].leftSon.value(), 84);
        CHECK(!cnodes[484].binaryCode.has_value());
        CHECK_EQ(cnodes[101].count, 0);
        CHECK_EQ(cnodes[101].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[101].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000111");
        CHECK_EQ(cnodes[484].rightSon.value(), 101);
        CHECK_EQ(cnodes[483].leftSon.value(), 484);
        CHECK(!cnodes[483].binaryCode.has_value());
        CHECK_EQ(cnodes[485].count, 0);
        CHECK_EQ(cnodes[127].count, 0);
        CHECK_EQ(cnodes[127].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[127].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000111");
        CHECK_EQ(cnodes[485].leftSon.value(), 127);
        CHECK(!cnodes[485].binaryCode.has_value());
        CHECK_EQ(cnodes[140].count, 0);
        CHECK_EQ(cnodes[140].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[140].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000111");
        CHECK_EQ(cnodes[485].rightSon.value(), 140);
        CHECK_EQ(cnodes[483].rightSon.value(), 485);
        CHECK_EQ(cnodes[482].leftSon.value(), 483);
        CHECK(!cnodes[482].binaryCode.has_value());
        CHECK_EQ(cnodes[486].count, 0);
        CHECK_EQ(cnodes[487].count, 0);
        CHECK_EQ(cnodes[164].count, 0);
        CHECK_EQ(cnodes[164].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[164].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100111");
        CHECK_EQ(cnodes[487].leftSon.value(), 164);
        CHECK(!cnodes[487].binaryCode.has_value());
        CHECK_EQ(cnodes[180].count, 0);
        CHECK_EQ(cnodes[180].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[180].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100111");
        CHECK_EQ(cnodes[487].rightSon.value(), 180);
        CHECK_EQ(cnodes[486].leftSon.value(), 487);
        CHECK(!cnodes[486].binaryCode.has_value());
        CHECK_EQ(cnodes[488].count, 0);
        CHECK_EQ(cnodes[215].count, 0);
        CHECK_EQ(cnodes[215].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[215].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100111");
        CHECK_EQ(cnodes[488].leftSon.value(), 215);
        CHECK(!cnodes[488].binaryCode.has_value());
        CHECK_EQ(cnodes[217].count, 0);
        CHECK_EQ(cnodes[217].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[217].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100111");
        CHECK_EQ(cnodes[488].rightSon.value(), 217);
        CHECK_EQ(cnodes[486].rightSon.value(), 488);
        CHECK_EQ(cnodes[482].rightSon.value(), 486);
        CHECK_EQ(cnodes[481].leftSon.value(), 482);
        CHECK(!cnodes[481].binaryCode.has_value());
        CHECK_EQ(cnodes[489].count, 0);
        CHECK_EQ(cnodes[490].count, 0);
        CHECK_EQ(cnodes[491].count, 0);
        CHECK_EQ(cnodes[228].count, 0);
        CHECK_EQ(cnodes[228].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[228].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111");
        CHECK_EQ(cnodes[491].leftSon.value(), 228);
        CHECK(!cnodes[491].binaryCode.has_value());
        CHECK_EQ(cnodes[2].count, 0);
        CHECK_EQ(cnodes[2].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[2].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010111");
        CHECK_EQ(cnodes[491].rightSon.value(), 2);
        CHECK_EQ(cnodes[490].leftSon.value(), 491);
        CHECK(!cnodes[490].binaryCode.has_value());
        CHECK_EQ(cnodes[492].count, 0);
        CHECK_EQ(cnodes[48].count, 0);
        CHECK_EQ(cnodes[48].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[48].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010111");
        CHECK_EQ(cnodes[492].leftSon.value(), 48);
        CHECK(!cnodes[492].binaryCode.has_value());
        CHECK_EQ(cnodes[85].count, 0);
        CHECK_EQ(cnodes[85].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[85].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010111");
        CHECK_EQ(cnodes[492].rightSon.value(), 85);
        CHECK_EQ(cnodes[490].rightSon.value(), 492);
        CHECK_EQ(cnodes[489].leftSon.value(), 490);
        CHECK(!cnodes[489].binaryCode.has_value());
        CHECK_EQ(cnodes[493].count, 0);
        CHECK_EQ(cnodes[494].count, 0);
        CHECK_EQ(cnodes[92].count, 0);
        CHECK_EQ(cnodes[92].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[92].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111");
        CHECK_EQ(cnodes[494].leftSon.value(), 92);
        CHECK(!cnodes[494].binaryCode.has_value());
        CHECK_EQ(cnodes[96].count, 0);
        CHECK_EQ(cnodes[96].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[96].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010110111");
        CHECK_EQ(cnodes[494].rightSon.value(), 96);
        CHECK_EQ(cnodes[493].leftSon.value(), 494);
        CHECK(!cnodes[493].binaryCode.has_value());
        CHECK_EQ(cnodes[495].count, 0);
        CHECK_EQ(cnodes[115].count, 0);
        CHECK_EQ(cnodes[115].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[115].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110111");
        CHECK_EQ(cnodes[495].leftSon.value(), 115);
        CHECK(!cnodes[495].binaryCode.has_value());
        CHECK_EQ(cnodes[219].count, 0);
        CHECK_EQ(cnodes[219].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[219].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110111");
        CHECK_EQ(cnodes[495].rightSon.value(), 219);
        CHECK_EQ(cnodes[493].rightSon.value(), 495);
        CHECK_EQ(cnodes[489].rightSon.value(), 493);
        CHECK_EQ(cnodes[481].rightSon.value(), 489);
        CHECK_EQ(cnodes[480].leftSon.value(), 481);
        CHECK(!cnodes[480].binaryCode.has_value());
        CHECK_EQ(cnodes[496].count, 0);
        CHECK_EQ(cnodes[497].count, 0);
        CHECK_EQ(cnodes[498].count, 0);
        CHECK_EQ(cnodes[499].count, 0);
        CHECK_EQ(cnodes[233].count, 0);
        CHECK_EQ(cnodes[233].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[233].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111");
        CHECK_EQ(cnodes[499].leftSon.value(), 233);
        CHECK(!cnodes[499].binaryCode.has_value());
        CHECK_EQ(cnodes[4].count, 0);
        CHECK_EQ(cnodes[4].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[4].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001111");
        CHECK_EQ(cnodes[499].rightSon.value(), 4);
        CHECK_EQ(cnodes[498].leftSon.value(), 499);
        CHECK(!cnodes[498].binaryCode.has_value());
        CHECK_EQ(cnodes[500].count, 0);
        CHECK_EQ(cnodes[81].count, 0);
        CHECK_EQ(cnodes[81].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[81].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001111");
        CHECK_EQ(cnodes[500].leftSon.value(), 81);
        CHECK(!cnodes[500].binaryCode.has_value());
        CHECK_EQ(cnodes[158].count, 0);
        CHECK_EQ(cnodes[158].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[158].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001111");
        CHECK_EQ(cnodes[500].rightSon.value(), 158);
        CHECK_EQ(cnodes[498].rightSon.value(), 500);
        CHECK_EQ(cnodes[497].leftSon.value(), 498);
        CHECK(!cnodes[497].binaryCode.has_value());
        CHECK_EQ(cnodes[501].count, 0);
        CHECK_EQ(cnodes[502].count, 0);
        CHECK_EQ(cnodes[178].count, 0);
        CHECK_EQ(cnodes[178].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[178].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101111");
        CHECK_EQ(cnodes[502].leftSon.value(), 178);
        CHECK(!cnodes[502].binaryCode.has_value());
        CHECK_EQ(cnodes[251].count, 0);
        CHECK_EQ(cnodes[251].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[251].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101111");
        CHECK_EQ(cnodes[502].rightSon.value(), 251);
        CHECK_EQ(cnodes[501].leftSon.value(), 502);
        CHECK(!cnodes[501].binaryCode.has_value());
        CHECK_EQ(cnodes[503].count, 0);
        CHECK_EQ(cnodes[254].count, 0);
        CHECK_EQ(cnodes[254].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[254].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101111");
        CHECK_EQ(cnodes[503].leftSon.value(), 254);
        CHECK(!cnodes[503].binaryCode.has_value());
        CHECK_EQ(cnodes[145].count, 0);
        CHECK_EQ(cnodes[145].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[145].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101111");
        CHECK_EQ(cnodes[503].rightSon.value(), 145);
        CHECK_EQ(cnodes[501].rightSon.value(), 503);
        CHECK_EQ(cnodes[497].rightSon.value(), 501);
        CHECK_EQ(cnodes[496].leftSon.value(), 497);
        CHECK(!cnodes[496].binaryCode.has_value());
        CHECK_EQ(cnodes[504].count, 0);
        CHECK_EQ(cnodes[505].count, 0);
        CHECK_EQ(cnodes[506].count, 0);
        CHECK_EQ(cnodes[195].count, 0);
        CHECK_EQ(cnodes[195].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[195].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111");
        CHECK_EQ(cnodes[506].leftSon.value(), 195);
        CHECK(!cnodes[506].binaryCode.has_value());
        CHECK_EQ(cnodes[162].count, 0);
        CHECK_EQ(cnodes[162].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[162].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011111");
        CHECK_EQ(cnodes[506].rightSon.value(), 162);
        CHECK_EQ(cnodes[505].leftSon.value(), 506);
        CHECK(!cnodes[505].binaryCode.has_value());
        CHECK_EQ(cnodes[507].count, 0);
        CHECK_EQ(cnodes[508].count, 0);
        CHECK_EQ(cnodes[509].count, 0);
        CHECK_EQ(cnodes[256].count, 0);
        CHECK_EQ(cnodes[256].binaryCode.value().second, 10);
        CHECK_EQ(cnodes[256].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011111");
        CHECK_EQ(cnodes[509].leftSon.value(), 256);
        CHECK(!cnodes[509].binaryCode.has_value());
        CHECK_EQ(cnodes[13].count, 0);
        CHECK_EQ(cnodes[13].binaryCode.value().second, 10);
        CHECK_EQ(cnodes[13].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001011111");
        CHECK_EQ(cnodes[509].rightSon.value(), 13);
        CHECK_EQ(cnodes[508].leftSon.value(), 509);
        CHECK(!cnodes[508].binaryCode.has_value());
        CHECK_EQ(cnodes[156].count, 0);
        CHECK_EQ(cnodes[156].binaryCode.value().second, 9);
        CHECK_EQ(cnodes[156].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101011111");
        CHECK_EQ(cnodes[508].rightSon.value(), 156);
        CHECK_EQ(cnodes[507].leftSon.value(), 508);
        CHECK(!cnodes[507].binaryCode.has_value());
        CHECK_EQ(cnodes[150].count, 0);
        CHECK_EQ(cnodes[150].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[150].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011111");
        CHECK_EQ(cnodes[507].rightSon.value(), 150);
        CHECK_EQ(cnodes[505].rightSon.value(), 507);
        CHECK_EQ(cnodes[504].leftSon.value(), 505);
        CHECK(!cnodes[504].binaryCode.has_value());
        CHECK_EQ(cnodes[510].count, 0);
        CHECK_EQ(cnodes[511].count, 0);
        CHECK_EQ(cnodes[185].count, 0);
        CHECK_EQ(cnodes[185].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[185].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111");
        CHECK_EQ(cnodes[511].leftSon.value(), 185);
        CHECK(!cnodes[511].binaryCode.has_value());
        CHECK_EQ(cnodes[139].count, 0);
        CHECK_EQ(cnodes[139].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[139].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111111");
        CHECK_EQ(cnodes[511].rightSon.value(), 139);
        CHECK_EQ(cnodes[510].leftSon.value(), 511);
        CHECK(!cnodes[510].binaryCode.has_value());
        CHECK_EQ(cnodes[512].count, 0);
        CHECK_EQ(cnodes[206].count, 0);
        CHECK_EQ(cnodes[206].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[206].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111");
        CHECK_EQ(cnodes[512].leftSon.value(), 206);
        CHECK(!cnodes[512].binaryCode.has_value());
        CHECK_EQ(cnodes[1].count, 0);
        CHECK_EQ(cnodes[1].binaryCode.value().second, 8);
        CHECK_EQ(cnodes[1].binaryCode.value().first.to_string(),
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111");
        CHECK_EQ(cnodes[512].rightSon.value(), 1);
        CHECK_EQ(cnodes[510].rightSon.value(), 512);
        CHECK_EQ(cnodes[504].rightSon.value(), 510);
        CHECK_EQ(cnodes[496].rightSon.value(), 504);
        CHECK_EQ(cnodes[480].rightSon.value(), 496);
        CHECK_EQ(cnodes[448].rightSon.value(), 480);
        CHECK_EQ(cnodes[384].rightSon.value(), 448);
        CHECK_EQ(cnodes[257].rightSon.value(), 384);
    }
}

TEST_CASE("HuffmanTree.setNode(size_t, const HuffmanNode&") {
    HuffmanTree ht;
    SUBCASE("0") {
        ht.setNode(
            0,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010111"},
                                 6}});
        auto cnodes = ht.getNodes();
        CHECK_EQ(cnodes[0].binaryCode.value().first.to_ullong(), 23);
        CHECK_EQ(cnodes[0].binaryCode.value().second, 6);
    }
    SUBCASE("228") {
        ht.setNode(
            228,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111"},
                                 6}});
        auto cnodes = ht.getNodes();
        CHECK_EQ(cnodes[228].binaryCode.value().first.to_ullong(), 55);
        CHECK_EQ(cnodes[228].binaryCode.value().second, 6);
    }
    SUBCASE("137") {
        ht.setNode(
            137,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111"},
                                 4}});
        auto cnodes = ht.getNodes();
        CHECK_EQ(cnodes[137].binaryCode.value().first.to_ullong(), 15);
        CHECK_EQ(cnodes[137].binaryCode.value().second, 4);
    }
}

TEST_CASE("getCodeByCharacter(char_type)") {
    HuffmanTree ht;
    std::string test =
        "1111111111222222222222222222223333333333333333333333333333334444444444444444444444444444444444444444555555555555555555555555555555555555"
        "55555555555555\n";
    for (auto i : test) ht.incNode(i);
    ht.buildTreeForward();
    ht.generateCodes();
    auto cnodes = ht.getNodes();
    CHECK_EQ(ht.getCodeByCharacter(51).second, 2);
    CHECK_EQ(ht.getCodeByCharacter(51).first.to_string(),
             "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
             "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
             "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
             "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    CHECK_EQ(ht.getCodeByCharacter(256).second, 5);
    CHECK_EQ(ht.getCodeByCharacter(256).first.to_string(),
             "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
             "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
             "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
             "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010");
}

TEST_CASE("getCharacterByCode(bool)") {
    HuffmanTree ht;
    SUBCASE("forward") {
        ht.incNode(5);
        ht.incNode(10);
        ht.buildTreeForward();
        ht.generateCodes();
        CHECK(!ht.getCharacterByCode(0).has_value());
        CHECK_EQ(ht.getCharacterByCode(0).value(), 0);
        CHECK(!ht.getCharacterByCode(0).has_value());
        CHECK_EQ(ht.getCharacterByCode(1).value(), 5);
        CHECK(!ht.getCharacterByCode(1).has_value());
        CHECK_EQ(ht.getCharacterByCode(0).value(), 10);
        CHECK(!ht.getCharacterByCode(1).has_value());
        CHECK_EQ(ht.getCharacterByCode(1).value(), 256);
    }
    SUBCASE("backward") {
        ht.setNode(
            0,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},
                                 2}});
        ht.setNode(
            256,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
                                 2}});
        ht.setNode(
            5,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"},
                                 2}});
        ht.setNode(
            10,
            HuffmanNode{codeType{bitStorage{"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                                            "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011"},
                                 2}});
        ht.buildTreeBackward();
        CHECK(!ht.getCharacterByCode(0).has_value());
        CHECK_EQ(ht.getCharacterByCode(0).value(), 0);
        CHECK(!ht.getCharacterByCode(0).has_value());
        CHECK_EQ(ht.getCharacterByCode(1).value(), 5);
        CHECK(!ht.getCharacterByCode(1).has_value());
        CHECK_EQ(ht.getCharacterByCode(0).value(), 256);
        CHECK(!ht.getCharacterByCode(1).has_value());
        CHECK_EQ(ht.getCharacterByCode(1).value(), 10);
    }
}
